// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gz/msgs/world_control.proto

#include "gz/msgs/world_control.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
#include "gz/msgs/Factory.hh"
GZ_REGISTER_STATIC_MSG("gz_msgs.WorldControl", WorldControl)
// @@protoc_insertion_point(includes)

namespace protobuf_gz_2fmsgs_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fheader_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Header;
}  // namespace protobuf_gz_2fmsgs_2fheader_2eproto
namespace protobuf_gz_2fmsgs_2ftime_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2ftime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Time;
}  // namespace protobuf_gz_2fmsgs_2ftime_2eproto
namespace protobuf_gz_2fmsgs_2fworld_5freset_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fworld_5freset_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_WorldReset;
}  // namespace protobuf_gz_2fmsgs_2fworld_5freset_2eproto
namespace gz {
namespace msgs {
class WorldControlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WorldControl>
      _instance;
} _WorldControl_default_instance_;
}  // namespace msgs
}  // namespace gz
namespace protobuf_gz_2fmsgs_2fworld_5fcontrol_2eproto {
static void InitDefaultsWorldControl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_WorldControl_default_instance_;
    new (ptr) ::gz::msgs::WorldControl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::WorldControl::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<3> scc_info_WorldControl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsWorldControl}, {
      &protobuf_gz_2fmsgs_2fheader_2eproto::scc_info_Header.base,
      &protobuf_gz_2fmsgs_2fworld_5freset_2eproto::scc_info_WorldReset.base,
      &protobuf_gz_2fmsgs_2ftime_2eproto::scc_info_Time.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_WorldControl.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::WorldControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::WorldControl, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::WorldControl, pause_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::WorldControl, step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::WorldControl, multi_step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::WorldControl, reset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::WorldControl, seed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::WorldControl, run_to_sim_time_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gz::msgs::WorldControl)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_WorldControl_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "gz/msgs/world_control.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033gz/msgs/world_control.proto\022\007gz.msgs\032\031"
      "gz/msgs/world_reset.proto\032\024gz/msgs/heade"
      "r.proto\032\022gz/msgs/time.proto\"\272\001\n\014WorldCon"
      "trol\022\037\n\006header\030\001 \001(\0132\017.gz.msgs.Header\022\r\n"
      "\005pause\030\002 \001(\010\022\014\n\004step\030\003 \001(\010\022\022\n\nmulti_step"
      "\030\004 \001(\r\022\"\n\005reset\030\005 \001(\0132\023.gz.msgs.WorldRes"
      "et\022\014\n\004seed\030\006 \001(\r\022&\n\017run_to_sim_time\030\007 \001("
      "\0132\r.gz.msgs.TimeB!\n\013com.gz.msgsB\022WorldCo"
      "ntrolProtosb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 339);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gz/msgs/world_control.proto", &protobuf_RegisterTypes);
  ::protobuf_gz_2fmsgs_2fworld_5freset_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2fheader_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2ftime_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gz_2fmsgs_2fworld_5fcontrol_2eproto
namespace gz {
namespace msgs {

// ===================================================================

void WorldControl::InitAsDefaultInstance() {
  ::gz::msgs::_WorldControl_default_instance_._instance.get_mutable()->header_ = const_cast< ::gz::msgs::Header*>(
      ::gz::msgs::Header::internal_default_instance());
  ::gz::msgs::_WorldControl_default_instance_._instance.get_mutable()->reset_ = const_cast< ::gz::msgs::WorldReset*>(
      ::gz::msgs::WorldReset::internal_default_instance());
  ::gz::msgs::_WorldControl_default_instance_._instance.get_mutable()->run_to_sim_time_ = const_cast< ::gz::msgs::Time*>(
      ::gz::msgs::Time::internal_default_instance());
}
void WorldControl::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void WorldControl::clear_reset() {
  if (GetArenaNoVirtual() == NULL && reset_ != NULL) {
    delete reset_;
  }
  reset_ = NULL;
}
void WorldControl::clear_run_to_sim_time() {
  if (GetArenaNoVirtual() == NULL && run_to_sim_time_ != NULL) {
    delete run_to_sim_time_;
  }
  run_to_sim_time_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WorldControl::kHeaderFieldNumber;
const int WorldControl::kPauseFieldNumber;
const int WorldControl::kStepFieldNumber;
const int WorldControl::kMultiStepFieldNumber;
const int WorldControl::kResetFieldNumber;
const int WorldControl::kSeedFieldNumber;
const int WorldControl::kRunToSimTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WorldControl::WorldControl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2fworld_5fcontrol_2eproto::scc_info_WorldControl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.WorldControl)
}
WorldControl::WorldControl(const WorldControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::gz::msgs::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_reset()) {
    reset_ = new ::gz::msgs::WorldReset(*from.reset_);
  } else {
    reset_ = NULL;
  }
  if (from.has_run_to_sim_time()) {
    run_to_sim_time_ = new ::gz::msgs::Time(*from.run_to_sim_time_);
  } else {
    run_to_sim_time_ = NULL;
  }
  ::memcpy(&pause_, &from.pause_,
    static_cast<size_t>(reinterpret_cast<char*>(&seed_) -
    reinterpret_cast<char*>(&pause_)) + sizeof(seed_));
  // @@protoc_insertion_point(copy_constructor:gz.msgs.WorldControl)
}

void WorldControl::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seed_) -
      reinterpret_cast<char*>(&header_)) + sizeof(seed_));
}

WorldControl::~WorldControl() {
  // @@protoc_insertion_point(destructor:gz.msgs.WorldControl)
  SharedDtor();
}

void WorldControl::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete reset_;
  if (this != internal_default_instance()) delete run_to_sim_time_;
}

void WorldControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* WorldControl::descriptor() {
  ::protobuf_gz_2fmsgs_2fworld_5fcontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fworld_5fcontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WorldControl& WorldControl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2fworld_5fcontrol_2eproto::scc_info_WorldControl.base);
  return *internal_default_instance();
}


void WorldControl::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.WorldControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && reset_ != NULL) {
    delete reset_;
  }
  reset_ = NULL;
  if (GetArenaNoVirtual() == NULL && run_to_sim_time_ != NULL) {
    delete run_to_sim_time_;
  }
  run_to_sim_time_ = NULL;
  ::memset(&pause_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&seed_) -
      reinterpret_cast<char*>(&pause_)) + sizeof(seed_));
  _internal_metadata_.Clear();
}

bool WorldControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.WorldControl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gz.msgs.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool pause = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &pause_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool step = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 multi_step = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &multi_step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.WorldReset reset = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_reset()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 seed = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Time run_to_sim_time = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_run_to_sim_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.WorldControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.WorldControl)
  return false;
#undef DO_
}

void WorldControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.WorldControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // bool pause = 2;
  if (this->pause() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->pause(), output);
  }

  // bool step = 3;
  if (this->step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->step(), output);
  }

  // uint32 multi_step = 4;
  if (this->multi_step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->multi_step(), output);
  }

  // .gz.msgs.WorldReset reset = 5;
  if (this->has_reset()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_reset(), output);
  }

  // uint32 seed = 6;
  if (this->seed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->seed(), output);
  }

  // .gz.msgs.Time run_to_sim_time = 7;
  if (this->has_run_to_sim_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_run_to_sim_time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.WorldControl)
}

::google::protobuf::uint8* WorldControl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.WorldControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // bool pause = 2;
  if (this->pause() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->pause(), target);
  }

  // bool step = 3;
  if (this->step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->step(), target);
  }

  // uint32 multi_step = 4;
  if (this->multi_step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->multi_step(), target);
  }

  // .gz.msgs.WorldReset reset = 5;
  if (this->has_reset()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_reset(), deterministic, target);
  }

  // uint32 seed = 6;
  if (this->seed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->seed(), target);
  }

  // .gz.msgs.Time run_to_sim_time = 7;
  if (this->has_run_to_sim_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_run_to_sim_time(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.WorldControl)
  return target;
}

size_t WorldControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.WorldControl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .gz.msgs.WorldReset reset = 5;
  if (this->has_reset()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *reset_);
  }

  // .gz.msgs.Time run_to_sim_time = 7;
  if (this->has_run_to_sim_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *run_to_sim_time_);
  }

  // bool pause = 2;
  if (this->pause() != 0) {
    total_size += 1 + 1;
  }

  // bool step = 3;
  if (this->step() != 0) {
    total_size += 1 + 1;
  }

  // uint32 multi_step = 4;
  if (this->multi_step() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->multi_step());
  }

  // uint32 seed = 6;
  if (this->seed() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->seed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WorldControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.WorldControl)
  GOOGLE_DCHECK_NE(&from, this);
  const WorldControl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WorldControl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.WorldControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.WorldControl)
    MergeFrom(*source);
  }
}

void WorldControl::MergeFrom(const WorldControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.WorldControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    mutable_header()->::gz::msgs::Header::MergeFrom(from.header());
  }
  if (from.has_reset()) {
    mutable_reset()->::gz::msgs::WorldReset::MergeFrom(from.reset());
  }
  if (from.has_run_to_sim_time()) {
    mutable_run_to_sim_time()->::gz::msgs::Time::MergeFrom(from.run_to_sim_time());
  }
  if (from.pause() != 0) {
    set_pause(from.pause());
  }
  if (from.step() != 0) {
    set_step(from.step());
  }
  if (from.multi_step() != 0) {
    set_multi_step(from.multi_step());
  }
  if (from.seed() != 0) {
    set_seed(from.seed());
  }
}

void WorldControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.WorldControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WorldControl::CopyFrom(const WorldControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.WorldControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WorldControl::IsInitialized() const {
  return true;
}

void WorldControl::Swap(WorldControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WorldControl::InternalSwap(WorldControl* other) {
  using std::swap;
  swap(header_, other->header_);
  swap(reset_, other->reset_);
  swap(run_to_sim_time_, other->run_to_sim_time_);
  swap(pause_, other->pause_);
  swap(step_, other->step_);
  swap(multi_step_, other->multi_step_);
  swap(seed_, other->seed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata WorldControl::GetMetadata() const {
  protobuf_gz_2fmsgs_2fworld_5fcontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fworld_5fcontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgs
}  // namespace gz
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::WorldControl* Arena::CreateMaybeMessage< ::gz::msgs::WorldControl >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::WorldControl >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
