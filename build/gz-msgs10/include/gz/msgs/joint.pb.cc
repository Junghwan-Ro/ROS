// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gz/msgs/joint.proto

#include "gz/msgs/joint.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
#include "gz/msgs/Factory.hh"
GZ_REGISTER_STATIC_MSG("gz_msgs.Joint", Joint)
// @@protoc_insertion_point(includes)

namespace protobuf_gz_2fmsgs_2faxis_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2faxis_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Axis;
}  // namespace protobuf_gz_2fmsgs_2faxis_2eproto
namespace protobuf_gz_2fmsgs_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fheader_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Header;
}  // namespace protobuf_gz_2fmsgs_2fheader_2eproto
namespace protobuf_gz_2fmsgs_2fjoint_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fjoint_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Joint_Gearbox;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fjoint_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Joint_Screw;
}  // namespace protobuf_gz_2fmsgs_2fjoint_2eproto
namespace protobuf_gz_2fmsgs_2fpose_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fpose_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Pose;
}  // namespace protobuf_gz_2fmsgs_2fpose_2eproto
namespace protobuf_gz_2fmsgs_2fsensor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fsensor_2eproto ::google::protobuf::internal::SCCInfo<11> scc_info_Sensor;
}  // namespace protobuf_gz_2fmsgs_2fsensor_2eproto
namespace gz {
namespace msgs {
class Joint_GearboxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Joint_Gearbox>
      _instance;
} _Joint_Gearbox_default_instance_;
class Joint_ScrewDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Joint_Screw>
      _instance;
} _Joint_Screw_default_instance_;
class JointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Joint>
      _instance;
} _Joint_default_instance_;
}  // namespace msgs
}  // namespace gz
namespace protobuf_gz_2fmsgs_2fjoint_2eproto {
static void InitDefaultsJoint_Gearbox() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_Joint_Gearbox_default_instance_;
    new (ptr) ::gz::msgs::Joint_Gearbox();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::Joint_Gearbox::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<0> scc_info_Joint_Gearbox =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJoint_Gearbox}, {}};

static void InitDefaultsJoint_Screw() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_Joint_Screw_default_instance_;
    new (ptr) ::gz::msgs::Joint_Screw();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::Joint_Screw::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<0> scc_info_Joint_Screw =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJoint_Screw}, {}};

static void InitDefaultsJoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_Joint_default_instance_;
    new (ptr) ::gz::msgs::Joint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::Joint::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<6> scc_info_Joint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsJoint}, {
      &protobuf_gz_2fmsgs_2fheader_2eproto::scc_info_Header.base,
      &protobuf_gz_2fmsgs_2fpose_2eproto::scc_info_Pose.base,
      &protobuf_gz_2fmsgs_2faxis_2eproto::scc_info_Axis.base,
      &protobuf_gz_2fmsgs_2fjoint_2eproto::scc_info_Joint_Gearbox.base,
      &protobuf_gz_2fmsgs_2fjoint_2eproto::scc_info_Joint_Screw.base,
      &protobuf_gz_2fmsgs_2fsensor_2eproto::scc_info_Sensor.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Joint_Gearbox.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Joint_Screw.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Joint.base);
}

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint_Gearbox, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint_Gearbox, gearbox_reference_body_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint_Gearbox, gearbox_ratio_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint_Screw, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint_Screw, thread_pitch_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, parent_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, child_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, child_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, axis1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, axis2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, cfm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, bounce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, fudge_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, limit_cfm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, limit_erp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, suspension_cfm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, suspension_erp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, gearbox_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, screw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Joint, sensor_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gz::msgs::Joint_Gearbox)},
  { 7, -1, sizeof(::gz::msgs::Joint_Screw)},
  { 13, -1, sizeof(::gz::msgs::Joint)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_Joint_Gearbox_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_Joint_Screw_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_Joint_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "gz/msgs/joint.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023gz/msgs/joint.proto\022\007gz.msgs\032\024gz/msgs/"
      "header.proto\032\022gz/msgs/axis.proto\032\022gz/msg"
      "s/pose.proto\032\024gz/msgs/sensor.proto\"\333\005\n\005J"
      "oint\022\037\n\006header\030\001 \001(\0132\017.gz.msgs.Header\022\014\n"
      "\004name\030\002 \001(\t\022\n\n\002id\030\003 \001(\r\022!\n\004type\030\004 \001(\0162\023."
      "gz.msgs.Joint.Type\022\016\n\006parent\030\005 \001(\t\022\021\n\tpa"
      "rent_id\030\006 \001(\r\022\r\n\005child\030\007 \001(\t\022\020\n\010child_id"
      "\030\010 \001(\r\022\033\n\004pose\030\t \001(\0132\r.gz.msgs.Pose\022\034\n\005a"
      "xis1\030\n \001(\0132\r.gz.msgs.Axis\022\034\n\005axis2\030\013 \001(\013"
      "2\r.gz.msgs.Axis\022\013\n\003cfm\030\014 \001(\001\022\016\n\006bounce\030\r"
      " \001(\001\022\024\n\014fudge_factor\030\016 \001(\001\022\021\n\tlimit_cfm\030"
      "\017 \001(\001\022\021\n\tlimit_erp\030\020 \001(\001\022\026\n\016suspension_c"
      "fm\030\021 \001(\001\022\026\n\016suspension_erp\030\022 \001(\001\022\'\n\007gear"
      "box\030\023 \001(\0132\026.gz.msgs.Joint.Gearbox\022#\n\005scr"
      "ew\030\024 \001(\0132\024.gz.msgs.Joint.Screw\022\037\n\006sensor"
      "\030\025 \003(\0132\017.gz.msgs.Sensor\032@\n\007Gearbox\022\036\n\026ge"
      "arbox_reference_body\030\001 \001(\t\022\025\n\rgearbox_ra"
      "tio\030\002 \001(\001\032\035\n\005Screw\022\024\n\014thread_pitch\030\001 \001(\001"
      "\"~\n\004Type\022\014\n\010REVOLUTE\020\000\022\r\n\tREVOLUTE2\020\001\022\r\n"
      "\tPRISMATIC\020\002\022\r\n\tUNIVERSAL\020\003\022\010\n\004BALL\020\004\022\t\n"
      "\005SCREW\020\005\022\013\n\007GEARBOX\020\006\022\t\n\005FIXED\020\007\022\016\n\nCONT"
      "INUOUS\020\010B\032\n\013com.gz.msgsB\013JointProtosb\006pr"
      "oto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 884);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gz/msgs/joint.proto", &protobuf_RegisterTypes);
  ::protobuf_gz_2fmsgs_2fheader_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2faxis_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2fpose_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2fsensor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gz_2fmsgs_2fjoint_2eproto
namespace gz {
namespace msgs {
const ::google::protobuf::EnumDescriptor* Joint_Type_descriptor() {
  protobuf_gz_2fmsgs_2fjoint_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gz_2fmsgs_2fjoint_2eproto::file_level_enum_descriptors[0];
}
bool Joint_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Joint_Type Joint::REVOLUTE;
const Joint_Type Joint::REVOLUTE2;
const Joint_Type Joint::PRISMATIC;
const Joint_Type Joint::UNIVERSAL;
const Joint_Type Joint::BALL;
const Joint_Type Joint::SCREW;
const Joint_Type Joint::GEARBOX;
const Joint_Type Joint::FIXED;
const Joint_Type Joint::CONTINUOUS;
const Joint_Type Joint::Type_MIN;
const Joint_Type Joint::Type_MAX;
const int Joint::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Joint_Gearbox::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Joint_Gearbox::kGearboxReferenceBodyFieldNumber;
const int Joint_Gearbox::kGearboxRatioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Joint_Gearbox::Joint_Gearbox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2fjoint_2eproto::scc_info_Joint_Gearbox.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.Joint.Gearbox)
}
Joint_Gearbox::Joint_Gearbox(const Joint_Gearbox& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gearbox_reference_body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gearbox_reference_body().size() > 0) {
    gearbox_reference_body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gearbox_reference_body_);
  }
  gearbox_ratio_ = from.gearbox_ratio_;
  // @@protoc_insertion_point(copy_constructor:gz.msgs.Joint.Gearbox)
}

void Joint_Gearbox::SharedCtor() {
  gearbox_reference_body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gearbox_ratio_ = 0;
}

Joint_Gearbox::~Joint_Gearbox() {
  // @@protoc_insertion_point(destructor:gz.msgs.Joint.Gearbox)
  SharedDtor();
}

void Joint_Gearbox::SharedDtor() {
  gearbox_reference_body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Joint_Gearbox::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Joint_Gearbox::descriptor() {
  ::protobuf_gz_2fmsgs_2fjoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fjoint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Joint_Gearbox& Joint_Gearbox::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2fjoint_2eproto::scc_info_Joint_Gearbox.base);
  return *internal_default_instance();
}


void Joint_Gearbox::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.Joint.Gearbox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gearbox_reference_body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gearbox_ratio_ = 0;
  _internal_metadata_.Clear();
}

bool Joint_Gearbox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.Joint.Gearbox)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string gearbox_reference_body = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gearbox_reference_body()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gearbox_reference_body().data(), static_cast<int>(this->gearbox_reference_body().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.Joint.Gearbox.gearbox_reference_body"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double gearbox_ratio = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &gearbox_ratio_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.Joint.Gearbox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.Joint.Gearbox)
  return false;
#undef DO_
}

void Joint_Gearbox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.Joint.Gearbox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gearbox_reference_body = 1;
  if (this->gearbox_reference_body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gearbox_reference_body().data(), static_cast<int>(this->gearbox_reference_body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Joint.Gearbox.gearbox_reference_body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->gearbox_reference_body(), output);
  }

  // double gearbox_ratio = 2;
  if (this->gearbox_ratio() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->gearbox_ratio(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.Joint.Gearbox)
}

::google::protobuf::uint8* Joint_Gearbox::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.Joint.Gearbox)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string gearbox_reference_body = 1;
  if (this->gearbox_reference_body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gearbox_reference_body().data(), static_cast<int>(this->gearbox_reference_body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Joint.Gearbox.gearbox_reference_body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->gearbox_reference_body(), target);
  }

  // double gearbox_ratio = 2;
  if (this->gearbox_ratio() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->gearbox_ratio(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.Joint.Gearbox)
  return target;
}

size_t Joint_Gearbox::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.Joint.Gearbox)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string gearbox_reference_body = 1;
  if (this->gearbox_reference_body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gearbox_reference_body());
  }

  // double gearbox_ratio = 2;
  if (this->gearbox_ratio() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Joint_Gearbox::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.Joint.Gearbox)
  GOOGLE_DCHECK_NE(&from, this);
  const Joint_Gearbox* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Joint_Gearbox>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.Joint.Gearbox)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.Joint.Gearbox)
    MergeFrom(*source);
  }
}

void Joint_Gearbox::MergeFrom(const Joint_Gearbox& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.Joint.Gearbox)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gearbox_reference_body().size() > 0) {

    gearbox_reference_body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gearbox_reference_body_);
  }
  if (from.gearbox_ratio() != 0) {
    set_gearbox_ratio(from.gearbox_ratio());
  }
}

void Joint_Gearbox::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.Joint.Gearbox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Joint_Gearbox::CopyFrom(const Joint_Gearbox& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.Joint.Gearbox)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Joint_Gearbox::IsInitialized() const {
  return true;
}

void Joint_Gearbox::Swap(Joint_Gearbox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Joint_Gearbox::InternalSwap(Joint_Gearbox* other) {
  using std::swap;
  gearbox_reference_body_.Swap(&other->gearbox_reference_body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(gearbox_ratio_, other->gearbox_ratio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Joint_Gearbox::GetMetadata() const {
  protobuf_gz_2fmsgs_2fjoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fjoint_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Joint_Screw::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Joint_Screw::kThreadPitchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Joint_Screw::Joint_Screw()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2fjoint_2eproto::scc_info_Joint_Screw.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.Joint.Screw)
}
Joint_Screw::Joint_Screw(const Joint_Screw& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  thread_pitch_ = from.thread_pitch_;
  // @@protoc_insertion_point(copy_constructor:gz.msgs.Joint.Screw)
}

void Joint_Screw::SharedCtor() {
  thread_pitch_ = 0;
}

Joint_Screw::~Joint_Screw() {
  // @@protoc_insertion_point(destructor:gz.msgs.Joint.Screw)
  SharedDtor();
}

void Joint_Screw::SharedDtor() {
}

void Joint_Screw::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Joint_Screw::descriptor() {
  ::protobuf_gz_2fmsgs_2fjoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fjoint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Joint_Screw& Joint_Screw::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2fjoint_2eproto::scc_info_Joint_Screw.base);
  return *internal_default_instance();
}


void Joint_Screw::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.Joint.Screw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  thread_pitch_ = 0;
  _internal_metadata_.Clear();
}

bool Joint_Screw::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.Joint.Screw)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double thread_pitch = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &thread_pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.Joint.Screw)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.Joint.Screw)
  return false;
#undef DO_
}

void Joint_Screw::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.Joint.Screw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double thread_pitch = 1;
  if (this->thread_pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->thread_pitch(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.Joint.Screw)
}

::google::protobuf::uint8* Joint_Screw::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.Joint.Screw)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double thread_pitch = 1;
  if (this->thread_pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->thread_pitch(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.Joint.Screw)
  return target;
}

size_t Joint_Screw::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.Joint.Screw)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double thread_pitch = 1;
  if (this->thread_pitch() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Joint_Screw::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.Joint.Screw)
  GOOGLE_DCHECK_NE(&from, this);
  const Joint_Screw* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Joint_Screw>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.Joint.Screw)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.Joint.Screw)
    MergeFrom(*source);
  }
}

void Joint_Screw::MergeFrom(const Joint_Screw& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.Joint.Screw)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.thread_pitch() != 0) {
    set_thread_pitch(from.thread_pitch());
  }
}

void Joint_Screw::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.Joint.Screw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Joint_Screw::CopyFrom(const Joint_Screw& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.Joint.Screw)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Joint_Screw::IsInitialized() const {
  return true;
}

void Joint_Screw::Swap(Joint_Screw* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Joint_Screw::InternalSwap(Joint_Screw* other) {
  using std::swap;
  swap(thread_pitch_, other->thread_pitch_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Joint_Screw::GetMetadata() const {
  protobuf_gz_2fmsgs_2fjoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fjoint_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Joint::InitAsDefaultInstance() {
  ::gz::msgs::_Joint_default_instance_._instance.get_mutable()->header_ = const_cast< ::gz::msgs::Header*>(
      ::gz::msgs::Header::internal_default_instance());
  ::gz::msgs::_Joint_default_instance_._instance.get_mutable()->pose_ = const_cast< ::gz::msgs::Pose*>(
      ::gz::msgs::Pose::internal_default_instance());
  ::gz::msgs::_Joint_default_instance_._instance.get_mutable()->axis1_ = const_cast< ::gz::msgs::Axis*>(
      ::gz::msgs::Axis::internal_default_instance());
  ::gz::msgs::_Joint_default_instance_._instance.get_mutable()->axis2_ = const_cast< ::gz::msgs::Axis*>(
      ::gz::msgs::Axis::internal_default_instance());
  ::gz::msgs::_Joint_default_instance_._instance.get_mutable()->gearbox_ = const_cast< ::gz::msgs::Joint_Gearbox*>(
      ::gz::msgs::Joint_Gearbox::internal_default_instance());
  ::gz::msgs::_Joint_default_instance_._instance.get_mutable()->screw_ = const_cast< ::gz::msgs::Joint_Screw*>(
      ::gz::msgs::Joint_Screw::internal_default_instance());
}
void Joint::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void Joint::clear_pose() {
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
}
void Joint::clear_axis1() {
  if (GetArenaNoVirtual() == NULL && axis1_ != NULL) {
    delete axis1_;
  }
  axis1_ = NULL;
}
void Joint::clear_axis2() {
  if (GetArenaNoVirtual() == NULL && axis2_ != NULL) {
    delete axis2_;
  }
  axis2_ = NULL;
}
void Joint::clear_sensor() {
  sensor_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Joint::kHeaderFieldNumber;
const int Joint::kNameFieldNumber;
const int Joint::kIdFieldNumber;
const int Joint::kTypeFieldNumber;
const int Joint::kParentFieldNumber;
const int Joint::kParentIdFieldNumber;
const int Joint::kChildFieldNumber;
const int Joint::kChildIdFieldNumber;
const int Joint::kPoseFieldNumber;
const int Joint::kAxis1FieldNumber;
const int Joint::kAxis2FieldNumber;
const int Joint::kCfmFieldNumber;
const int Joint::kBounceFieldNumber;
const int Joint::kFudgeFactorFieldNumber;
const int Joint::kLimitCfmFieldNumber;
const int Joint::kLimitErpFieldNumber;
const int Joint::kSuspensionCfmFieldNumber;
const int Joint::kSuspensionErpFieldNumber;
const int Joint::kGearboxFieldNumber;
const int Joint::kScrewFieldNumber;
const int Joint::kSensorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Joint::Joint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2fjoint_2eproto::scc_info_Joint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.Joint)
}
Joint::Joint(const Joint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sensor_(from.sensor_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  child_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.child().size() > 0) {
    child_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.child_);
  }
  if (from.has_header()) {
    header_ = new ::gz::msgs::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_pose()) {
    pose_ = new ::gz::msgs::Pose(*from.pose_);
  } else {
    pose_ = NULL;
  }
  if (from.has_axis1()) {
    axis1_ = new ::gz::msgs::Axis(*from.axis1_);
  } else {
    axis1_ = NULL;
  }
  if (from.has_axis2()) {
    axis2_ = new ::gz::msgs::Axis(*from.axis2_);
  } else {
    axis2_ = NULL;
  }
  if (from.has_gearbox()) {
    gearbox_ = new ::gz::msgs::Joint_Gearbox(*from.gearbox_);
  } else {
    gearbox_ = NULL;
  }
  if (from.has_screw()) {
    screw_ = new ::gz::msgs::Joint_Screw(*from.screw_);
  } else {
    screw_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&suspension_erp_) -
    reinterpret_cast<char*>(&id_)) + sizeof(suspension_erp_));
  // @@protoc_insertion_point(copy_constructor:gz.msgs.Joint)
}

void Joint::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  child_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suspension_erp_) -
      reinterpret_cast<char*>(&header_)) + sizeof(suspension_erp_));
}

Joint::~Joint() {
  // @@protoc_insertion_point(destructor:gz.msgs.Joint)
  SharedDtor();
}

void Joint::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  child_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete pose_;
  if (this != internal_default_instance()) delete axis1_;
  if (this != internal_default_instance()) delete axis2_;
  if (this != internal_default_instance()) delete gearbox_;
  if (this != internal_default_instance()) delete screw_;
}

void Joint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Joint::descriptor() {
  ::protobuf_gz_2fmsgs_2fjoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fjoint_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Joint& Joint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2fjoint_2eproto::scc_info_Joint.base);
  return *internal_default_instance();
}


void Joint::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.Joint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sensor_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  child_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
  if (GetArenaNoVirtual() == NULL && axis1_ != NULL) {
    delete axis1_;
  }
  axis1_ = NULL;
  if (GetArenaNoVirtual() == NULL && axis2_ != NULL) {
    delete axis2_;
  }
  axis2_ = NULL;
  if (GetArenaNoVirtual() == NULL && gearbox_ != NULL) {
    delete gearbox_;
  }
  gearbox_ = NULL;
  if (GetArenaNoVirtual() == NULL && screw_ != NULL) {
    delete screw_;
  }
  screw_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&suspension_erp_) -
      reinterpret_cast<char*>(&id_)) + sizeof(suspension_erp_));
  _internal_metadata_.Clear();
}

bool Joint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.Joint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gz.msgs.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.Joint.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Joint.Type type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::gz::msgs::Joint_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.Joint.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string child = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_child()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->child().data(), static_cast<int>(this->child().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.Joint.child"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 child_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &child_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Pose pose = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Axis axis1 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_axis1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Axis axis2 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_axis2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double cfm = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &cfm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double bounce = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(105u /* 105 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &bounce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double fudge_factor = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fudge_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double limit_cfm = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(121u /* 121 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &limit_cfm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double limit_erp = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(129u /* 129 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &limit_erp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double suspension_cfm = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(137u /* 137 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &suspension_cfm_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double suspension_erp = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(145u /* 145 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &suspension_erp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Joint.Gearbox gearbox = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gearbox()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Joint.Screw screw = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_screw()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gz.msgs.Sensor sensor = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_sensor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.Joint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.Joint)
  return false;
#undef DO_
}

void Joint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.Joint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Joint.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint32 id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->id(), output);
  }

  // .gz.msgs.Joint.Type type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Joint.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->parent(), output);
  }

  // uint32 parent_id = 6;
  if (this->parent_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->parent_id(), output);
  }

  // string child = 7;
  if (this->child().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->child().data(), static_cast<int>(this->child().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Joint.child");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->child(), output);
  }

  // uint32 child_id = 8;
  if (this->child_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->child_id(), output);
  }

  // .gz.msgs.Pose pose = 9;
  if (this->has_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_pose(), output);
  }

  // .gz.msgs.Axis axis1 = 10;
  if (this->has_axis1()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_axis1(), output);
  }

  // .gz.msgs.Axis axis2 = 11;
  if (this->has_axis2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_axis2(), output);
  }

  // double cfm = 12;
  if (this->cfm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(12, this->cfm(), output);
  }

  // double bounce = 13;
  if (this->bounce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(13, this->bounce(), output);
  }

  // double fudge_factor = 14;
  if (this->fudge_factor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(14, this->fudge_factor(), output);
  }

  // double limit_cfm = 15;
  if (this->limit_cfm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(15, this->limit_cfm(), output);
  }

  // double limit_erp = 16;
  if (this->limit_erp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(16, this->limit_erp(), output);
  }

  // double suspension_cfm = 17;
  if (this->suspension_cfm() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(17, this->suspension_cfm(), output);
  }

  // double suspension_erp = 18;
  if (this->suspension_erp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(18, this->suspension_erp(), output);
  }

  // .gz.msgs.Joint.Gearbox gearbox = 19;
  if (this->has_gearbox()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->_internal_gearbox(), output);
  }

  // .gz.msgs.Joint.Screw screw = 20;
  if (this->has_screw()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->_internal_screw(), output);
  }

  // repeated .gz.msgs.Sensor sensor = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sensor_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21,
      this->sensor(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.Joint)
}

::google::protobuf::uint8* Joint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.Joint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Joint.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint32 id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->id(), target);
  }

  // .gz.msgs.Joint.Type type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Joint.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->parent(), target);
  }

  // uint32 parent_id = 6;
  if (this->parent_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->parent_id(), target);
  }

  // string child = 7;
  if (this->child().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->child().data(), static_cast<int>(this->child().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Joint.child");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->child(), target);
  }

  // uint32 child_id = 8;
  if (this->child_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->child_id(), target);
  }

  // .gz.msgs.Pose pose = 9;
  if (this->has_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_pose(), deterministic, target);
  }

  // .gz.msgs.Axis axis1 = 10;
  if (this->has_axis1()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_axis1(), deterministic, target);
  }

  // .gz.msgs.Axis axis2 = 11;
  if (this->has_axis2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_axis2(), deterministic, target);
  }

  // double cfm = 12;
  if (this->cfm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(12, this->cfm(), target);
  }

  // double bounce = 13;
  if (this->bounce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(13, this->bounce(), target);
  }

  // double fudge_factor = 14;
  if (this->fudge_factor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(14, this->fudge_factor(), target);
  }

  // double limit_cfm = 15;
  if (this->limit_cfm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(15, this->limit_cfm(), target);
  }

  // double limit_erp = 16;
  if (this->limit_erp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(16, this->limit_erp(), target);
  }

  // double suspension_cfm = 17;
  if (this->suspension_cfm() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(17, this->suspension_cfm(), target);
  }

  // double suspension_erp = 18;
  if (this->suspension_erp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(18, this->suspension_erp(), target);
  }

  // .gz.msgs.Joint.Gearbox gearbox = 19;
  if (this->has_gearbox()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, this->_internal_gearbox(), deterministic, target);
  }

  // .gz.msgs.Joint.Screw screw = 20;
  if (this->has_screw()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->_internal_screw(), deterministic, target);
  }

  // repeated .gz.msgs.Sensor sensor = 21;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->sensor_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->sensor(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.Joint)
  return target;
}

size_t Joint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.Joint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gz.msgs.Sensor sensor = 21;
  {
    unsigned int count = static_cast<unsigned int>(this->sensor_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->sensor(static_cast<int>(i)));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string parent = 5;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // string child = 7;
  if (this->child().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->child());
  }

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .gz.msgs.Pose pose = 9;
  if (this->has_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pose_);
  }

  // .gz.msgs.Axis axis1 = 10;
  if (this->has_axis1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *axis1_);
  }

  // .gz.msgs.Axis axis2 = 11;
  if (this->has_axis2()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *axis2_);
  }

  // .gz.msgs.Joint.Gearbox gearbox = 19;
  if (this->has_gearbox()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gearbox_);
  }

  // .gz.msgs.Joint.Screw screw = 20;
  if (this->has_screw()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *screw_);
  }

  // uint32 id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // .gz.msgs.Joint.Type type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // uint32 parent_id = 6;
  if (this->parent_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_id());
  }

  // uint32 child_id = 8;
  if (this->child_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->child_id());
  }

  // double cfm = 12;
  if (this->cfm() != 0) {
    total_size += 1 + 8;
  }

  // double bounce = 13;
  if (this->bounce() != 0) {
    total_size += 1 + 8;
  }

  // double fudge_factor = 14;
  if (this->fudge_factor() != 0) {
    total_size += 1 + 8;
  }

  // double limit_cfm = 15;
  if (this->limit_cfm() != 0) {
    total_size += 1 + 8;
  }

  // double limit_erp = 16;
  if (this->limit_erp() != 0) {
    total_size += 2 + 8;
  }

  // double suspension_cfm = 17;
  if (this->suspension_cfm() != 0) {
    total_size += 2 + 8;
  }

  // double suspension_erp = 18;
  if (this->suspension_erp() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Joint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.Joint)
  GOOGLE_DCHECK_NE(&from, this);
  const Joint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Joint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.Joint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.Joint)
    MergeFrom(*source);
  }
}

void Joint::MergeFrom(const Joint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.Joint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sensor_.MergeFrom(from.sensor_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.child().size() > 0) {

    child_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.child_);
  }
  if (from.has_header()) {
    mutable_header()->::gz::msgs::Header::MergeFrom(from.header());
  }
  if (from.has_pose()) {
    mutable_pose()->::gz::msgs::Pose::MergeFrom(from.pose());
  }
  if (from.has_axis1()) {
    mutable_axis1()->::gz::msgs::Axis::MergeFrom(from.axis1());
  }
  if (from.has_axis2()) {
    mutable_axis2()->::gz::msgs::Axis::MergeFrom(from.axis2());
  }
  if (from.has_gearbox()) {
    mutable_gearbox()->::gz::msgs::Joint_Gearbox::MergeFrom(from.gearbox());
  }
  if (from.has_screw()) {
    mutable_screw()->::gz::msgs::Joint_Screw::MergeFrom(from.screw());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.parent_id() != 0) {
    set_parent_id(from.parent_id());
  }
  if (from.child_id() != 0) {
    set_child_id(from.child_id());
  }
  if (from.cfm() != 0) {
    set_cfm(from.cfm());
  }
  if (from.bounce() != 0) {
    set_bounce(from.bounce());
  }
  if (from.fudge_factor() != 0) {
    set_fudge_factor(from.fudge_factor());
  }
  if (from.limit_cfm() != 0) {
    set_limit_cfm(from.limit_cfm());
  }
  if (from.limit_erp() != 0) {
    set_limit_erp(from.limit_erp());
  }
  if (from.suspension_cfm() != 0) {
    set_suspension_cfm(from.suspension_cfm());
  }
  if (from.suspension_erp() != 0) {
    set_suspension_erp(from.suspension_erp());
  }
}

void Joint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.Joint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Joint::CopyFrom(const Joint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.Joint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Joint::IsInitialized() const {
  return true;
}

void Joint::Swap(Joint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Joint::InternalSwap(Joint* other) {
  using std::swap;
  CastToBase(&sensor_)->InternalSwap(CastToBase(&other->sensor_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  child_.Swap(&other->child_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(header_, other->header_);
  swap(pose_, other->pose_);
  swap(axis1_, other->axis1_);
  swap(axis2_, other->axis2_);
  swap(gearbox_, other->gearbox_);
  swap(screw_, other->screw_);
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(parent_id_, other->parent_id_);
  swap(child_id_, other->child_id_);
  swap(cfm_, other->cfm_);
  swap(bounce_, other->bounce_);
  swap(fudge_factor_, other->fudge_factor_);
  swap(limit_cfm_, other->limit_cfm_);
  swap(limit_erp_, other->limit_erp_);
  swap(suspension_cfm_, other->suspension_cfm_);
  swap(suspension_erp_, other->suspension_erp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Joint::GetMetadata() const {
  protobuf_gz_2fmsgs_2fjoint_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fjoint_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgs
}  // namespace gz
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::Joint_Gearbox* Arena::CreateMaybeMessage< ::gz::msgs::Joint_Gearbox >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::Joint_Gearbox >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::Joint_Screw* Arena::CreateMaybeMessage< ::gz::msgs::Joint_Screw >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::Joint_Screw >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::Joint* Arena::CreateMaybeMessage< ::gz::msgs::Joint >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::Joint >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
