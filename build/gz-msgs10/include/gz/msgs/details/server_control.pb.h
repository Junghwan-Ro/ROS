// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gz/msgs/server_control.proto

#ifndef PROTOBUF_INCLUDED_gz_2fmsgs_2fserver_5fcontrol_2eproto
#define PROTOBUF_INCLUDED_gz_2fmsgs_2fserver_5fcontrol_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "gz/msgs/header.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fserver_5fcontrol_2eproto IGNITION_MSGS_VISIBLE

namespace protobuf_gz_2fmsgs_2fserver_5fcontrol_2eproto {
// Internal implementation detail -- do not use these members.
struct IGNITION_MSGS_VISIBLE TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void IGNITION_MSGS_VISIBLE AddDescriptors();
}  // namespace protobuf_gz_2fmsgs_2fserver_5fcontrol_2eproto
namespace gz {
namespace msgs {
class ServerControl;
class ServerControlDefaultTypeInternal;
IGNITION_MSGS_VISIBLE extern ServerControlDefaultTypeInternal _ServerControl_default_instance_;
}  // namespace msgs
}  // namespace gz
namespace google {
namespace protobuf {
template<> IGNITION_MSGS_VISIBLE ::gz::msgs::ServerControl* Arena::CreateMaybeMessage<::gz::msgs::ServerControl>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace gz {
namespace msgs {

// ===================================================================

class IGNITION_MSGS_VISIBLE ServerControl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gz.msgs.ServerControl) */ {
 public:
  ServerControl();
  virtual ~ServerControl();

  ServerControl(const ServerControl& from);

  inline ServerControl& operator=(const ServerControl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ServerControl(ServerControl&& from) noexcept
    : ServerControl() {
    *this = ::std::move(from);
  }

  inline ServerControl& operator=(ServerControl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ServerControl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServerControl* internal_default_instance() {
    return reinterpret_cast<const ServerControl*>(
               &_ServerControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(ServerControl* other);
  friend void swap(ServerControl& a, ServerControl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServerControl* New() const final {
    return CreateMaybeMessage<ServerControl>(NULL);
  }

  ServerControl* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ServerControl>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ServerControl& from);
  void MergeFrom(const ServerControl& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServerControl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string save_world_name = 2;
  void clear_save_world_name();
  static const int kSaveWorldNameFieldNumber = 2;
  const ::std::string& save_world_name() const;
  void set_save_world_name(const ::std::string& value);
  #if LANG_CXX11
  void set_save_world_name(::std::string&& value);
  #endif
  void set_save_world_name(const char* value);
  void set_save_world_name(const char* value, size_t size);
  ::std::string* mutable_save_world_name();
  ::std::string* release_save_world_name();
  void set_allocated_save_world_name(::std::string* save_world_name);

  // string save_filename = 3;
  void clear_save_filename();
  static const int kSaveFilenameFieldNumber = 3;
  const ::std::string& save_filename() const;
  void set_save_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_save_filename(::std::string&& value);
  #endif
  void set_save_filename(const char* value);
  void set_save_filename(const char* value, size_t size);
  ::std::string* mutable_save_filename();
  ::std::string* release_save_filename();
  void set_allocated_save_filename(::std::string* save_filename);

  // string open_filename = 4;
  void clear_open_filename();
  static const int kOpenFilenameFieldNumber = 4;
  const ::std::string& open_filename() const;
  void set_open_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_open_filename(::std::string&& value);
  #endif
  void set_open_filename(const char* value);
  void set_open_filename(const char* value, size_t size);
  ::std::string* mutable_open_filename();
  ::std::string* release_open_filename();
  void set_allocated_open_filename(::std::string* open_filename);

  // .gz.msgs.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::gz::msgs::Header& _internal_header() const;
  public:
  const ::gz::msgs::Header& header() const;
  ::gz::msgs::Header* release_header();
  ::gz::msgs::Header* mutable_header();
  void set_allocated_header(::gz::msgs::Header* header);

  // bool new_world = 5;
  void clear_new_world();
  static const int kNewWorldFieldNumber = 5;
  bool new_world() const;
  void set_new_world(bool value);

  // bool stop = 6;
  void clear_stop();
  static const int kStopFieldNumber = 6;
  bool stop() const;
  void set_stop(bool value);

  // bool clone = 7;
  void clear_clone();
  static const int kCloneFieldNumber = 7;
  bool clone() const;
  void set_clone(bool value);

  // uint32 new_port = 8;
  void clear_new_port();
  static const int kNewPortFieldNumber = 8;
  ::google::protobuf::uint32 new_port() const;
  void set_new_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gz.msgs.ServerControl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr save_world_name_;
  ::google::protobuf::internal::ArenaStringPtr save_filename_;
  ::google::protobuf::internal::ArenaStringPtr open_filename_;
  ::gz::msgs::Header* header_;
  bool new_world_;
  bool stop_;
  bool clone_;
  ::google::protobuf::uint32 new_port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_gz_2fmsgs_2fserver_5fcontrol_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ServerControl

// .gz.msgs.Header header = 1;
inline bool ServerControl::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::gz::msgs::Header& ServerControl::_internal_header() const {
  return *header_;
}
inline const ::gz::msgs::Header& ServerControl::header() const {
  const ::gz::msgs::Header* p = header_;
  // @@protoc_insertion_point(field_get:gz.msgs.ServerControl.header)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::Header*>(
      &::gz::msgs::_Header_default_instance_);
}
inline ::gz::msgs::Header* ServerControl::release_header() {
  // @@protoc_insertion_point(field_release:gz.msgs.ServerControl.header)
  
  ::gz::msgs::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::gz::msgs::Header* ServerControl::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.msgs.ServerControl.header)
  return header_;
}
inline void ServerControl::set_allocated_header(::gz::msgs::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.ServerControl.header)
}

// string save_world_name = 2;
inline void ServerControl::clear_save_world_name() {
  save_world_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerControl::save_world_name() const {
  // @@protoc_insertion_point(field_get:gz.msgs.ServerControl.save_world_name)
  return save_world_name_.GetNoArena();
}
inline void ServerControl::set_save_world_name(const ::std::string& value) {
  
  save_world_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gz.msgs.ServerControl.save_world_name)
}
#if LANG_CXX11
inline void ServerControl::set_save_world_name(::std::string&& value) {
  
  save_world_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gz.msgs.ServerControl.save_world_name)
}
#endif
inline void ServerControl::set_save_world_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  save_world_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gz.msgs.ServerControl.save_world_name)
}
inline void ServerControl::set_save_world_name(const char* value, size_t size) {
  
  save_world_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gz.msgs.ServerControl.save_world_name)
}
inline ::std::string* ServerControl::mutable_save_world_name() {
  
  // @@protoc_insertion_point(field_mutable:gz.msgs.ServerControl.save_world_name)
  return save_world_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerControl::release_save_world_name() {
  // @@protoc_insertion_point(field_release:gz.msgs.ServerControl.save_world_name)
  
  return save_world_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerControl::set_allocated_save_world_name(::std::string* save_world_name) {
  if (save_world_name != NULL) {
    
  } else {
    
  }
  save_world_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), save_world_name);
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.ServerControl.save_world_name)
}

// string save_filename = 3;
inline void ServerControl::clear_save_filename() {
  save_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerControl::save_filename() const {
  // @@protoc_insertion_point(field_get:gz.msgs.ServerControl.save_filename)
  return save_filename_.GetNoArena();
}
inline void ServerControl::set_save_filename(const ::std::string& value) {
  
  save_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gz.msgs.ServerControl.save_filename)
}
#if LANG_CXX11
inline void ServerControl::set_save_filename(::std::string&& value) {
  
  save_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gz.msgs.ServerControl.save_filename)
}
#endif
inline void ServerControl::set_save_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  save_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gz.msgs.ServerControl.save_filename)
}
inline void ServerControl::set_save_filename(const char* value, size_t size) {
  
  save_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gz.msgs.ServerControl.save_filename)
}
inline ::std::string* ServerControl::mutable_save_filename() {
  
  // @@protoc_insertion_point(field_mutable:gz.msgs.ServerControl.save_filename)
  return save_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerControl::release_save_filename() {
  // @@protoc_insertion_point(field_release:gz.msgs.ServerControl.save_filename)
  
  return save_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerControl::set_allocated_save_filename(::std::string* save_filename) {
  if (save_filename != NULL) {
    
  } else {
    
  }
  save_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), save_filename);
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.ServerControl.save_filename)
}

// string open_filename = 4;
inline void ServerControl::clear_open_filename() {
  open_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ServerControl::open_filename() const {
  // @@protoc_insertion_point(field_get:gz.msgs.ServerControl.open_filename)
  return open_filename_.GetNoArena();
}
inline void ServerControl::set_open_filename(const ::std::string& value) {
  
  open_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gz.msgs.ServerControl.open_filename)
}
#if LANG_CXX11
inline void ServerControl::set_open_filename(::std::string&& value) {
  
  open_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gz.msgs.ServerControl.open_filename)
}
#endif
inline void ServerControl::set_open_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  open_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gz.msgs.ServerControl.open_filename)
}
inline void ServerControl::set_open_filename(const char* value, size_t size) {
  
  open_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gz.msgs.ServerControl.open_filename)
}
inline ::std::string* ServerControl::mutable_open_filename() {
  
  // @@protoc_insertion_point(field_mutable:gz.msgs.ServerControl.open_filename)
  return open_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ServerControl::release_open_filename() {
  // @@protoc_insertion_point(field_release:gz.msgs.ServerControl.open_filename)
  
  return open_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ServerControl::set_allocated_open_filename(::std::string* open_filename) {
  if (open_filename != NULL) {
    
  } else {
    
  }
  open_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), open_filename);
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.ServerControl.open_filename)
}

// bool new_world = 5;
inline void ServerControl::clear_new_world() {
  new_world_ = false;
}
inline bool ServerControl::new_world() const {
  // @@protoc_insertion_point(field_get:gz.msgs.ServerControl.new_world)
  return new_world_;
}
inline void ServerControl::set_new_world(bool value) {
  
  new_world_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.ServerControl.new_world)
}

// bool stop = 6;
inline void ServerControl::clear_stop() {
  stop_ = false;
}
inline bool ServerControl::stop() const {
  // @@protoc_insertion_point(field_get:gz.msgs.ServerControl.stop)
  return stop_;
}
inline void ServerControl::set_stop(bool value) {
  
  stop_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.ServerControl.stop)
}

// bool clone = 7;
inline void ServerControl::clear_clone() {
  clone_ = false;
}
inline bool ServerControl::clone() const {
  // @@protoc_insertion_point(field_get:gz.msgs.ServerControl.clone)
  return clone_;
}
inline void ServerControl::set_clone(bool value) {
  
  clone_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.ServerControl.clone)
}

// uint32 new_port = 8;
inline void ServerControl::clear_new_port() {
  new_port_ = 0u;
}
inline ::google::protobuf::uint32 ServerControl::new_port() const {
  // @@protoc_insertion_point(field_get:gz.msgs.ServerControl.new_port)
  return new_port_;
}
inline void ServerControl::set_new_port(::google::protobuf::uint32 value) {
  
  new_port_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.ServerControl.new_port)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gz

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_gz_2fmsgs_2fserver_5fcontrol_2eproto
