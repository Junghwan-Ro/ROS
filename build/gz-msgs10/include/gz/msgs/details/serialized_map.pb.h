// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gz/msgs/serialized_map.proto

#ifndef PROTOBUF_INCLUDED_gz_2fmsgs_2fserialized_5fmap_2eproto
#define PROTOBUF_INCLUDED_gz_2fmsgs_2fserialized_5fmap_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "gz/msgs/header.pb.h"
#include "gz/msgs/world_stats.pb.h"
#include "gz/msgs/serialized.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fserialized_5fmap_2eproto IGNITION_MSGS_VISIBLE

namespace protobuf_gz_2fmsgs_2fserialized_5fmap_2eproto {
// Internal implementation detail -- do not use these members.
struct IGNITION_MSGS_VISIBLE TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void IGNITION_MSGS_VISIBLE AddDescriptors();
}  // namespace protobuf_gz_2fmsgs_2fserialized_5fmap_2eproto
namespace gz {
namespace msgs {
class SerializedEntityMap;
class SerializedEntityMapDefaultTypeInternal;
IGNITION_MSGS_VISIBLE extern SerializedEntityMapDefaultTypeInternal _SerializedEntityMap_default_instance_;
class SerializedEntityMap_ComponentsEntry_DoNotUse;
class SerializedEntityMap_ComponentsEntry_DoNotUseDefaultTypeInternal;
IGNITION_MSGS_VISIBLE extern SerializedEntityMap_ComponentsEntry_DoNotUseDefaultTypeInternal _SerializedEntityMap_ComponentsEntry_DoNotUse_default_instance_;
class SerializedStateMap;
class SerializedStateMapDefaultTypeInternal;
IGNITION_MSGS_VISIBLE extern SerializedStateMapDefaultTypeInternal _SerializedStateMap_default_instance_;
class SerializedStateMap_EntitiesEntry_DoNotUse;
class SerializedStateMap_EntitiesEntry_DoNotUseDefaultTypeInternal;
IGNITION_MSGS_VISIBLE extern SerializedStateMap_EntitiesEntry_DoNotUseDefaultTypeInternal _SerializedStateMap_EntitiesEntry_DoNotUse_default_instance_;
class SerializedStepMap;
class SerializedStepMapDefaultTypeInternal;
IGNITION_MSGS_VISIBLE extern SerializedStepMapDefaultTypeInternal _SerializedStepMap_default_instance_;
}  // namespace msgs
}  // namespace gz
namespace google {
namespace protobuf {
template<> IGNITION_MSGS_VISIBLE ::gz::msgs::SerializedEntityMap* Arena::CreateMaybeMessage<::gz::msgs::SerializedEntityMap>(Arena*);
template<> IGNITION_MSGS_VISIBLE ::gz::msgs::SerializedEntityMap_ComponentsEntry_DoNotUse* Arena::CreateMaybeMessage<::gz::msgs::SerializedEntityMap_ComponentsEntry_DoNotUse>(Arena*);
template<> IGNITION_MSGS_VISIBLE ::gz::msgs::SerializedStateMap* Arena::CreateMaybeMessage<::gz::msgs::SerializedStateMap>(Arena*);
template<> IGNITION_MSGS_VISIBLE ::gz::msgs::SerializedStateMap_EntitiesEntry_DoNotUse* Arena::CreateMaybeMessage<::gz::msgs::SerializedStateMap_EntitiesEntry_DoNotUse>(Arena*);
template<> IGNITION_MSGS_VISIBLE ::gz::msgs::SerializedStepMap* Arena::CreateMaybeMessage<::gz::msgs::SerializedStepMap>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace gz {
namespace msgs {

// ===================================================================

class SerializedEntityMap_ComponentsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SerializedEntityMap_ComponentsEntry_DoNotUse, 
    ::google::protobuf::int64, ::gz::msgs::SerializedComponent,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<SerializedEntityMap_ComponentsEntry_DoNotUse, 
    ::google::protobuf::int64, ::gz::msgs::SerializedComponent,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SerializedEntityMap_ComponentsEntry_DoNotUse();
  SerializedEntityMap_ComponentsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SerializedEntityMap_ComponentsEntry_DoNotUse& other);
  static const SerializedEntityMap_ComponentsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SerializedEntityMap_ComponentsEntry_DoNotUse*>(&_SerializedEntityMap_ComponentsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class IGNITION_MSGS_VISIBLE SerializedEntityMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gz.msgs.SerializedEntityMap) */ {
 public:
  SerializedEntityMap();
  virtual ~SerializedEntityMap();

  SerializedEntityMap(const SerializedEntityMap& from);

  inline SerializedEntityMap& operator=(const SerializedEntityMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedEntityMap(SerializedEntityMap&& from) noexcept
    : SerializedEntityMap() {
    *this = ::std::move(from);
  }

  inline SerializedEntityMap& operator=(SerializedEntityMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedEntityMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedEntityMap* internal_default_instance() {
    return reinterpret_cast<const SerializedEntityMap*>(
               &_SerializedEntityMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(SerializedEntityMap* other);
  friend void swap(SerializedEntityMap& a, SerializedEntityMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedEntityMap* New() const final {
    return CreateMaybeMessage<SerializedEntityMap>(NULL);
  }

  SerializedEntityMap* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedEntityMap>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedEntityMap& from);
  void MergeFrom(const SerializedEntityMap& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedEntityMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<int64, .gz.msgs.SerializedComponent> components = 2;
  int components_size() const;
  void clear_components();
  static const int kComponentsFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::int64, ::gz::msgs::SerializedComponent >&
      components() const;
  ::google::protobuf::Map< ::google::protobuf::int64, ::gz::msgs::SerializedComponent >*
      mutable_components();

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // bool remove = 3;
  void clear_remove();
  static const int kRemoveFieldNumber = 3;
  bool remove() const;
  void set_remove(bool value);

  // @@protoc_insertion_point(class_scope:gz.msgs.SerializedEntityMap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      SerializedEntityMap_ComponentsEntry_DoNotUse,
      ::google::protobuf::int64, ::gz::msgs::SerializedComponent,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > components_;
  ::google::protobuf::uint64 id_;
  bool remove_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_gz_2fmsgs_2fserialized_5fmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SerializedStateMap_EntitiesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<SerializedStateMap_EntitiesEntry_DoNotUse, 
    ::google::protobuf::uint64, ::gz::msgs::SerializedEntityMap,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<SerializedStateMap_EntitiesEntry_DoNotUse, 
    ::google::protobuf::uint64, ::gz::msgs::SerializedEntityMap,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  SerializedStateMap_EntitiesEntry_DoNotUse();
  SerializedStateMap_EntitiesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const SerializedStateMap_EntitiesEntry_DoNotUse& other);
  static const SerializedStateMap_EntitiesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const SerializedStateMap_EntitiesEntry_DoNotUse*>(&_SerializedStateMap_EntitiesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class IGNITION_MSGS_VISIBLE SerializedStateMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gz.msgs.SerializedStateMap) */ {
 public:
  SerializedStateMap();
  virtual ~SerializedStateMap();

  SerializedStateMap(const SerializedStateMap& from);

  inline SerializedStateMap& operator=(const SerializedStateMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedStateMap(SerializedStateMap&& from) noexcept
    : SerializedStateMap() {
    *this = ::std::move(from);
  }

  inline SerializedStateMap& operator=(SerializedStateMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedStateMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedStateMap* internal_default_instance() {
    return reinterpret_cast<const SerializedStateMap*>(
               &_SerializedStateMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(SerializedStateMap* other);
  friend void swap(SerializedStateMap& a, SerializedStateMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedStateMap* New() const final {
    return CreateMaybeMessage<SerializedStateMap>(NULL);
  }

  SerializedStateMap* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedStateMap>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedStateMap& from);
  void MergeFrom(const SerializedStateMap& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedStateMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<uint64, .gz.msgs.SerializedEntityMap> entities = 2;
  int entities_size() const;
  void clear_entities();
  static const int kEntitiesFieldNumber = 2;
  const ::google::protobuf::Map< ::google::protobuf::uint64, ::gz::msgs::SerializedEntityMap >&
      entities() const;
  ::google::protobuf::Map< ::google::protobuf::uint64, ::gz::msgs::SerializedEntityMap >*
      mutable_entities();

  // .gz.msgs.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::gz::msgs::Header& _internal_header() const;
  public:
  const ::gz::msgs::Header& header() const;
  ::gz::msgs::Header* release_header();
  ::gz::msgs::Header* mutable_header();
  void set_allocated_header(::gz::msgs::Header* header);

  // bool has_one_time_component_changes = 3;
  void clear_has_one_time_component_changes();
  static const int kHasOneTimeComponentChangesFieldNumber = 3;
  bool has_one_time_component_changes() const;
  void set_has_one_time_component_changes(bool value);

  // @@protoc_insertion_point(class_scope:gz.msgs.SerializedStateMap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      SerializedStateMap_EntitiesEntry_DoNotUse,
      ::google::protobuf::uint64, ::gz::msgs::SerializedEntityMap,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > entities_;
  ::gz::msgs::Header* header_;
  bool has_one_time_component_changes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_gz_2fmsgs_2fserialized_5fmap_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IGNITION_MSGS_VISIBLE SerializedStepMap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gz.msgs.SerializedStepMap) */ {
 public:
  SerializedStepMap();
  virtual ~SerializedStepMap();

  SerializedStepMap(const SerializedStepMap& from);

  inline SerializedStepMap& operator=(const SerializedStepMap& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SerializedStepMap(SerializedStepMap&& from) noexcept
    : SerializedStepMap() {
    *this = ::std::move(from);
  }

  inline SerializedStepMap& operator=(SerializedStepMap&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedStepMap& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SerializedStepMap* internal_default_instance() {
    return reinterpret_cast<const SerializedStepMap*>(
               &_SerializedStepMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(SerializedStepMap* other);
  friend void swap(SerializedStepMap& a, SerializedStepMap& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SerializedStepMap* New() const final {
    return CreateMaybeMessage<SerializedStepMap>(NULL);
  }

  SerializedStepMap* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<SerializedStepMap>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const SerializedStepMap& from);
  void MergeFrom(const SerializedStepMap& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SerializedStepMap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .gz.msgs.WorldStatistics stats = 1;
  bool has_stats() const;
  void clear_stats();
  static const int kStatsFieldNumber = 1;
  private:
  const ::gz::msgs::WorldStatistics& _internal_stats() const;
  public:
  const ::gz::msgs::WorldStatistics& stats() const;
  ::gz::msgs::WorldStatistics* release_stats();
  ::gz::msgs::WorldStatistics* mutable_stats();
  void set_allocated_stats(::gz::msgs::WorldStatistics* stats);

  // .gz.msgs.SerializedStateMap state = 2;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 2;
  private:
  const ::gz::msgs::SerializedStateMap& _internal_state() const;
  public:
  const ::gz::msgs::SerializedStateMap& state() const;
  ::gz::msgs::SerializedStateMap* release_state();
  ::gz::msgs::SerializedStateMap* mutable_state();
  void set_allocated_state(::gz::msgs::SerializedStateMap* state);

  // @@protoc_insertion_point(class_scope:gz.msgs.SerializedStepMap)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::gz::msgs::WorldStatistics* stats_;
  ::gz::msgs::SerializedStateMap* state_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_gz_2fmsgs_2fserialized_5fmap_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SerializedEntityMap

// uint64 id = 1;
inline void SerializedEntityMap::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 SerializedEntityMap::id() const {
  // @@protoc_insertion_point(field_get:gz.msgs.SerializedEntityMap.id)
  return id_;
}
inline void SerializedEntityMap::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.SerializedEntityMap.id)
}

// map<int64, .gz.msgs.SerializedComponent> components = 2;
inline int SerializedEntityMap::components_size() const {
  return components_.size();
}
inline const ::google::protobuf::Map< ::google::protobuf::int64, ::gz::msgs::SerializedComponent >&
SerializedEntityMap::components() const {
  // @@protoc_insertion_point(field_map:gz.msgs.SerializedEntityMap.components)
  return components_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int64, ::gz::msgs::SerializedComponent >*
SerializedEntityMap::mutable_components() {
  // @@protoc_insertion_point(field_mutable_map:gz.msgs.SerializedEntityMap.components)
  return components_.MutableMap();
}

// bool remove = 3;
inline void SerializedEntityMap::clear_remove() {
  remove_ = false;
}
inline bool SerializedEntityMap::remove() const {
  // @@protoc_insertion_point(field_get:gz.msgs.SerializedEntityMap.remove)
  return remove_;
}
inline void SerializedEntityMap::set_remove(bool value) {
  
  remove_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.SerializedEntityMap.remove)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SerializedStateMap

// .gz.msgs.Header header = 1;
inline bool SerializedStateMap::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::gz::msgs::Header& SerializedStateMap::_internal_header() const {
  return *header_;
}
inline const ::gz::msgs::Header& SerializedStateMap::header() const {
  const ::gz::msgs::Header* p = header_;
  // @@protoc_insertion_point(field_get:gz.msgs.SerializedStateMap.header)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::Header*>(
      &::gz::msgs::_Header_default_instance_);
}
inline ::gz::msgs::Header* SerializedStateMap::release_header() {
  // @@protoc_insertion_point(field_release:gz.msgs.SerializedStateMap.header)
  
  ::gz::msgs::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::gz::msgs::Header* SerializedStateMap::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.msgs.SerializedStateMap.header)
  return header_;
}
inline void SerializedStateMap::set_allocated_header(::gz::msgs::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.SerializedStateMap.header)
}

// map<uint64, .gz.msgs.SerializedEntityMap> entities = 2;
inline int SerializedStateMap::entities_size() const {
  return entities_.size();
}
inline void SerializedStateMap::clear_entities() {
  entities_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::uint64, ::gz::msgs::SerializedEntityMap >&
SerializedStateMap::entities() const {
  // @@protoc_insertion_point(field_map:gz.msgs.SerializedStateMap.entities)
  return entities_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::uint64, ::gz::msgs::SerializedEntityMap >*
SerializedStateMap::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_map:gz.msgs.SerializedStateMap.entities)
  return entities_.MutableMap();
}

// bool has_one_time_component_changes = 3;
inline void SerializedStateMap::clear_has_one_time_component_changes() {
  has_one_time_component_changes_ = false;
}
inline bool SerializedStateMap::has_one_time_component_changes() const {
  // @@protoc_insertion_point(field_get:gz.msgs.SerializedStateMap.has_one_time_component_changes)
  return has_one_time_component_changes_;
}
inline void SerializedStateMap::set_has_one_time_component_changes(bool value) {
  
  has_one_time_component_changes_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.SerializedStateMap.has_one_time_component_changes)
}

// -------------------------------------------------------------------

// SerializedStepMap

// .gz.msgs.WorldStatistics stats = 1;
inline bool SerializedStepMap::has_stats() const {
  return this != internal_default_instance() && stats_ != NULL;
}
inline const ::gz::msgs::WorldStatistics& SerializedStepMap::_internal_stats() const {
  return *stats_;
}
inline const ::gz::msgs::WorldStatistics& SerializedStepMap::stats() const {
  const ::gz::msgs::WorldStatistics* p = stats_;
  // @@protoc_insertion_point(field_get:gz.msgs.SerializedStepMap.stats)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::WorldStatistics*>(
      &::gz::msgs::_WorldStatistics_default_instance_);
}
inline ::gz::msgs::WorldStatistics* SerializedStepMap::release_stats() {
  // @@protoc_insertion_point(field_release:gz.msgs.SerializedStepMap.stats)
  
  ::gz::msgs::WorldStatistics* temp = stats_;
  stats_ = NULL;
  return temp;
}
inline ::gz::msgs::WorldStatistics* SerializedStepMap::mutable_stats() {
  
  if (stats_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::WorldStatistics>(GetArenaNoVirtual());
    stats_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.msgs.SerializedStepMap.stats)
  return stats_;
}
inline void SerializedStepMap::set_allocated_stats(::gz::msgs::WorldStatistics* stats) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(stats_);
  }
  if (stats) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stats = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stats, submessage_arena);
    }
    
  } else {
    
  }
  stats_ = stats;
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.SerializedStepMap.stats)
}

// .gz.msgs.SerializedStateMap state = 2;
inline bool SerializedStepMap::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void SerializedStepMap::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::gz::msgs::SerializedStateMap& SerializedStepMap::_internal_state() const {
  return *state_;
}
inline const ::gz::msgs::SerializedStateMap& SerializedStepMap::state() const {
  const ::gz::msgs::SerializedStateMap* p = state_;
  // @@protoc_insertion_point(field_get:gz.msgs.SerializedStepMap.state)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::SerializedStateMap*>(
      &::gz::msgs::_SerializedStateMap_default_instance_);
}
inline ::gz::msgs::SerializedStateMap* SerializedStepMap::release_state() {
  // @@protoc_insertion_point(field_release:gz.msgs.SerializedStepMap.state)
  
  ::gz::msgs::SerializedStateMap* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::gz::msgs::SerializedStateMap* SerializedStepMap::mutable_state() {
  
  if (state_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::SerializedStateMap>(GetArenaNoVirtual());
    state_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.msgs.SerializedStepMap.state)
  return state_;
}
inline void SerializedStepMap::set_allocated_state(::gz::msgs::SerializedStateMap* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.SerializedStepMap.state)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gz

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_gz_2fmsgs_2fserialized_5fmap_2eproto
