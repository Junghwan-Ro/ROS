// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gz/msgs/model.proto

#ifndef PROTOBUF_INCLUDED_gz_2fmsgs_2fmodel_2eproto
#define PROTOBUF_INCLUDED_gz_2fmsgs_2fmodel_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "gz/msgs/axis_aligned_box.pb.h"
#include "gz/msgs/joint.pb.h"
#include "gz/msgs/link.pb.h"
#include "gz/msgs/pose.pb.h"
#include "gz/msgs/visual.pb.h"
#include "gz/msgs/vector3d.pb.h"
#include "gz/msgs/header.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fmodel_2eproto IGNITION_MSGS_VISIBLE

namespace protobuf_gz_2fmsgs_2fmodel_2eproto {
// Internal implementation detail -- do not use these members.
struct IGNITION_MSGS_VISIBLE TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void IGNITION_MSGS_VISIBLE AddDescriptors();
}  // namespace protobuf_gz_2fmsgs_2fmodel_2eproto
namespace gz {
namespace msgs {
class Model;
class ModelDefaultTypeInternal;
IGNITION_MSGS_VISIBLE extern ModelDefaultTypeInternal _Model_default_instance_;
}  // namespace msgs
}  // namespace gz
namespace google {
namespace protobuf {
template<> IGNITION_MSGS_VISIBLE ::gz::msgs::Model* Arena::CreateMaybeMessage<::gz::msgs::Model>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace gz {
namespace msgs {

// ===================================================================

class IGNITION_MSGS_VISIBLE Model : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gz.msgs.Model) */ {
 public:
  Model();
  virtual ~Model();

  Model(const Model& from);

  inline Model& operator=(const Model& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Model(Model&& from) noexcept
    : Model() {
    *this = ::std::move(from);
  }

  inline Model& operator=(Model&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Model& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Model* internal_default_instance() {
    return reinterpret_cast<const Model*>(
               &_Model_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Model* other);
  friend void swap(Model& a, Model& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Model* New() const final {
    return CreateMaybeMessage<Model>(NULL);
  }

  Model* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Model>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Model& from);
  void MergeFrom(const Model& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Model* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gz.msgs.Joint joint = 6;
  int joint_size() const;
  void clear_joint();
  static const int kJointFieldNumber = 6;
  ::gz::msgs::Joint* mutable_joint(int index);
  ::google::protobuf::RepeatedPtrField< ::gz::msgs::Joint >*
      mutable_joint();
  const ::gz::msgs::Joint& joint(int index) const;
  ::gz::msgs::Joint* add_joint();
  const ::google::protobuf::RepeatedPtrField< ::gz::msgs::Joint >&
      joint() const;

  // repeated .gz.msgs.Link link = 7;
  int link_size() const;
  void clear_link();
  static const int kLinkFieldNumber = 7;
  ::gz::msgs::Link* mutable_link(int index);
  ::google::protobuf::RepeatedPtrField< ::gz::msgs::Link >*
      mutable_link();
  const ::gz::msgs::Link& link(int index) const;
  ::gz::msgs::Link* add_link();
  const ::google::protobuf::RepeatedPtrField< ::gz::msgs::Link >&
      link() const;

  // repeated .gz.msgs.Visual visual = 9;
  int visual_size() const;
  void clear_visual();
  static const int kVisualFieldNumber = 9;
  ::gz::msgs::Visual* mutable_visual(int index);
  ::google::protobuf::RepeatedPtrField< ::gz::msgs::Visual >*
      mutable_visual();
  const ::gz::msgs::Visual& visual(int index) const;
  ::gz::msgs::Visual* add_visual();
  const ::google::protobuf::RepeatedPtrField< ::gz::msgs::Visual >&
      visual() const;

  // repeated .gz.msgs.Model model = 12;
  int model_size() const;
  void clear_model();
  static const int kModelFieldNumber = 12;
  ::gz::msgs::Model* mutable_model(int index);
  ::google::protobuf::RepeatedPtrField< ::gz::msgs::Model >*
      mutable_model();
  const ::gz::msgs::Model& model(int index) const;
  ::gz::msgs::Model* add_model();
  const ::google::protobuf::RepeatedPtrField< ::gz::msgs::Model >&
      model() const;

  // string name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .gz.msgs.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::gz::msgs::Header& _internal_header() const;
  public:
  const ::gz::msgs::Header& header() const;
  ::gz::msgs::Header* release_header();
  ::gz::msgs::Header* mutable_header();
  void set_allocated_header(::gz::msgs::Header* header);

  // .gz.msgs.Pose pose = 5;
  bool has_pose() const;
  void clear_pose();
  static const int kPoseFieldNumber = 5;
  private:
  const ::gz::msgs::Pose& _internal_pose() const;
  public:
  const ::gz::msgs::Pose& pose() const;
  ::gz::msgs::Pose* release_pose();
  ::gz::msgs::Pose* mutable_pose();
  void set_allocated_pose(::gz::msgs::Pose* pose);

  // .gz.msgs.Vector3d scale = 10;
  bool has_scale() const;
  void clear_scale();
  static const int kScaleFieldNumber = 10;
  private:
  const ::gz::msgs::Vector3d& _internal_scale() const;
  public:
  const ::gz::msgs::Vector3d& scale() const;
  ::gz::msgs::Vector3d* release_scale();
  ::gz::msgs::Vector3d* mutable_scale();
  void set_allocated_scale(::gz::msgs::Vector3d* scale);

  // .gz.msgs.AxisAlignedBox bounding_box = 13;
  bool has_bounding_box() const;
  void clear_bounding_box();
  static const int kBoundingBoxFieldNumber = 13;
  private:
  const ::gz::msgs::AxisAlignedBox& _internal_bounding_box() const;
  public:
  const ::gz::msgs::AxisAlignedBox& bounding_box() const;
  ::gz::msgs::AxisAlignedBox* release_bounding_box();
  ::gz::msgs::AxisAlignedBox* mutable_bounding_box();
  void set_allocated_bounding_box(::gz::msgs::AxisAlignedBox* bounding_box);

  // uint32 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // bool is_static = 4;
  void clear_is_static();
  static const int kIsStaticFieldNumber = 4;
  bool is_static() const;
  void set_is_static(bool value);

  // bool deleted = 8;
  void clear_deleted();
  static const int kDeletedFieldNumber = 8;
  bool deleted() const;
  void set_deleted(bool value);

  // bool self_collide = 11;
  void clear_self_collide();
  static const int kSelfCollideFieldNumber = 11;
  bool self_collide() const;
  void set_self_collide(bool value);

  // @@protoc_insertion_point(class_scope:gz.msgs.Model)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::gz::msgs::Joint > joint_;
  ::google::protobuf::RepeatedPtrField< ::gz::msgs::Link > link_;
  ::google::protobuf::RepeatedPtrField< ::gz::msgs::Visual > visual_;
  ::google::protobuf::RepeatedPtrField< ::gz::msgs::Model > model_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::gz::msgs::Header* header_;
  ::gz::msgs::Pose* pose_;
  ::gz::msgs::Vector3d* scale_;
  ::gz::msgs::AxisAlignedBox* bounding_box_;
  ::google::protobuf::uint32 id_;
  bool is_static_;
  bool deleted_;
  bool self_collide_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_gz_2fmsgs_2fmodel_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Model

// .gz.msgs.Header header = 1;
inline bool Model::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::gz::msgs::Header& Model::_internal_header() const {
  return *header_;
}
inline const ::gz::msgs::Header& Model::header() const {
  const ::gz::msgs::Header* p = header_;
  // @@protoc_insertion_point(field_get:gz.msgs.Model.header)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::Header*>(
      &::gz::msgs::_Header_default_instance_);
}
inline ::gz::msgs::Header* Model::release_header() {
  // @@protoc_insertion_point(field_release:gz.msgs.Model.header)
  
  ::gz::msgs::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::gz::msgs::Header* Model::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.msgs.Model.header)
  return header_;
}
inline void Model::set_allocated_header(::gz::msgs::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.Model.header)
}

// string name = 2;
inline void Model::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Model::name() const {
  // @@protoc_insertion_point(field_get:gz.msgs.Model.name)
  return name_.GetNoArena();
}
inline void Model::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gz.msgs.Model.name)
}
#if LANG_CXX11
inline void Model::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gz.msgs.Model.name)
}
#endif
inline void Model::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gz.msgs.Model.name)
}
inline void Model::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gz.msgs.Model.name)
}
inline ::std::string* Model::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:gz.msgs.Model.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Model::release_name() {
  // @@protoc_insertion_point(field_release:gz.msgs.Model.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Model::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.Model.name)
}

// uint32 id = 3;
inline void Model::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 Model::id() const {
  // @@protoc_insertion_point(field_get:gz.msgs.Model.id)
  return id_;
}
inline void Model::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.Model.id)
}

// bool is_static = 4;
inline void Model::clear_is_static() {
  is_static_ = false;
}
inline bool Model::is_static() const {
  // @@protoc_insertion_point(field_get:gz.msgs.Model.is_static)
  return is_static_;
}
inline void Model::set_is_static(bool value) {
  
  is_static_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.Model.is_static)
}

// .gz.msgs.Pose pose = 5;
inline bool Model::has_pose() const {
  return this != internal_default_instance() && pose_ != NULL;
}
inline const ::gz::msgs::Pose& Model::_internal_pose() const {
  return *pose_;
}
inline const ::gz::msgs::Pose& Model::pose() const {
  const ::gz::msgs::Pose* p = pose_;
  // @@protoc_insertion_point(field_get:gz.msgs.Model.pose)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::Pose*>(
      &::gz::msgs::_Pose_default_instance_);
}
inline ::gz::msgs::Pose* Model::release_pose() {
  // @@protoc_insertion_point(field_release:gz.msgs.Model.pose)
  
  ::gz::msgs::Pose* temp = pose_;
  pose_ = NULL;
  return temp;
}
inline ::gz::msgs::Pose* Model::mutable_pose() {
  
  if (pose_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::Pose>(GetArenaNoVirtual());
    pose_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.msgs.Model.pose)
  return pose_;
}
inline void Model::set_allocated_pose(::gz::msgs::Pose* pose) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pose_);
  }
  if (pose) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pose = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pose, submessage_arena);
    }
    
  } else {
    
  }
  pose_ = pose;
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.Model.pose)
}

// repeated .gz.msgs.Joint joint = 6;
inline int Model::joint_size() const {
  return joint_.size();
}
inline ::gz::msgs::Joint* Model::mutable_joint(int index) {
  // @@protoc_insertion_point(field_mutable:gz.msgs.Model.joint)
  return joint_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::gz::msgs::Joint >*
Model::mutable_joint() {
  // @@protoc_insertion_point(field_mutable_list:gz.msgs.Model.joint)
  return &joint_;
}
inline const ::gz::msgs::Joint& Model::joint(int index) const {
  // @@protoc_insertion_point(field_get:gz.msgs.Model.joint)
  return joint_.Get(index);
}
inline ::gz::msgs::Joint* Model::add_joint() {
  // @@protoc_insertion_point(field_add:gz.msgs.Model.joint)
  return joint_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gz::msgs::Joint >&
Model::joint() const {
  // @@protoc_insertion_point(field_list:gz.msgs.Model.joint)
  return joint_;
}

// repeated .gz.msgs.Link link = 7;
inline int Model::link_size() const {
  return link_.size();
}
inline ::gz::msgs::Link* Model::mutable_link(int index) {
  // @@protoc_insertion_point(field_mutable:gz.msgs.Model.link)
  return link_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::gz::msgs::Link >*
Model::mutable_link() {
  // @@protoc_insertion_point(field_mutable_list:gz.msgs.Model.link)
  return &link_;
}
inline const ::gz::msgs::Link& Model::link(int index) const {
  // @@protoc_insertion_point(field_get:gz.msgs.Model.link)
  return link_.Get(index);
}
inline ::gz::msgs::Link* Model::add_link() {
  // @@protoc_insertion_point(field_add:gz.msgs.Model.link)
  return link_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gz::msgs::Link >&
Model::link() const {
  // @@protoc_insertion_point(field_list:gz.msgs.Model.link)
  return link_;
}

// bool deleted = 8;
inline void Model::clear_deleted() {
  deleted_ = false;
}
inline bool Model::deleted() const {
  // @@protoc_insertion_point(field_get:gz.msgs.Model.deleted)
  return deleted_;
}
inline void Model::set_deleted(bool value) {
  
  deleted_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.Model.deleted)
}

// repeated .gz.msgs.Visual visual = 9;
inline int Model::visual_size() const {
  return visual_.size();
}
inline ::gz::msgs::Visual* Model::mutable_visual(int index) {
  // @@protoc_insertion_point(field_mutable:gz.msgs.Model.visual)
  return visual_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::gz::msgs::Visual >*
Model::mutable_visual() {
  // @@protoc_insertion_point(field_mutable_list:gz.msgs.Model.visual)
  return &visual_;
}
inline const ::gz::msgs::Visual& Model::visual(int index) const {
  // @@protoc_insertion_point(field_get:gz.msgs.Model.visual)
  return visual_.Get(index);
}
inline ::gz::msgs::Visual* Model::add_visual() {
  // @@protoc_insertion_point(field_add:gz.msgs.Model.visual)
  return visual_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gz::msgs::Visual >&
Model::visual() const {
  // @@protoc_insertion_point(field_list:gz.msgs.Model.visual)
  return visual_;
}

// .gz.msgs.Vector3d scale = 10;
inline bool Model::has_scale() const {
  return this != internal_default_instance() && scale_ != NULL;
}
inline const ::gz::msgs::Vector3d& Model::_internal_scale() const {
  return *scale_;
}
inline const ::gz::msgs::Vector3d& Model::scale() const {
  const ::gz::msgs::Vector3d* p = scale_;
  // @@protoc_insertion_point(field_get:gz.msgs.Model.scale)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::Vector3d*>(
      &::gz::msgs::_Vector3d_default_instance_);
}
inline ::gz::msgs::Vector3d* Model::release_scale() {
  // @@protoc_insertion_point(field_release:gz.msgs.Model.scale)
  
  ::gz::msgs::Vector3d* temp = scale_;
  scale_ = NULL;
  return temp;
}
inline ::gz::msgs::Vector3d* Model::mutable_scale() {
  
  if (scale_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::Vector3d>(GetArenaNoVirtual());
    scale_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.msgs.Model.scale)
  return scale_;
}
inline void Model::set_allocated_scale(::gz::msgs::Vector3d* scale) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(scale_);
  }
  if (scale) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scale = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scale, submessage_arena);
    }
    
  } else {
    
  }
  scale_ = scale;
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.Model.scale)
}

// bool self_collide = 11;
inline void Model::clear_self_collide() {
  self_collide_ = false;
}
inline bool Model::self_collide() const {
  // @@protoc_insertion_point(field_get:gz.msgs.Model.self_collide)
  return self_collide_;
}
inline void Model::set_self_collide(bool value) {
  
  self_collide_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.Model.self_collide)
}

// repeated .gz.msgs.Model model = 12;
inline int Model::model_size() const {
  return model_.size();
}
inline void Model::clear_model() {
  model_.Clear();
}
inline ::gz::msgs::Model* Model::mutable_model(int index) {
  // @@protoc_insertion_point(field_mutable:gz.msgs.Model.model)
  return model_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::gz::msgs::Model >*
Model::mutable_model() {
  // @@protoc_insertion_point(field_mutable_list:gz.msgs.Model.model)
  return &model_;
}
inline const ::gz::msgs::Model& Model::model(int index) const {
  // @@protoc_insertion_point(field_get:gz.msgs.Model.model)
  return model_.Get(index);
}
inline ::gz::msgs::Model* Model::add_model() {
  // @@protoc_insertion_point(field_add:gz.msgs.Model.model)
  return model_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gz::msgs::Model >&
Model::model() const {
  // @@protoc_insertion_point(field_list:gz.msgs.Model.model)
  return model_;
}

// .gz.msgs.AxisAlignedBox bounding_box = 13;
inline bool Model::has_bounding_box() const {
  return this != internal_default_instance() && bounding_box_ != NULL;
}
inline const ::gz::msgs::AxisAlignedBox& Model::_internal_bounding_box() const {
  return *bounding_box_;
}
inline const ::gz::msgs::AxisAlignedBox& Model::bounding_box() const {
  const ::gz::msgs::AxisAlignedBox* p = bounding_box_;
  // @@protoc_insertion_point(field_get:gz.msgs.Model.bounding_box)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::AxisAlignedBox*>(
      &::gz::msgs::_AxisAlignedBox_default_instance_);
}
inline ::gz::msgs::AxisAlignedBox* Model::release_bounding_box() {
  // @@protoc_insertion_point(field_release:gz.msgs.Model.bounding_box)
  
  ::gz::msgs::AxisAlignedBox* temp = bounding_box_;
  bounding_box_ = NULL;
  return temp;
}
inline ::gz::msgs::AxisAlignedBox* Model::mutable_bounding_box() {
  
  if (bounding_box_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::AxisAlignedBox>(GetArenaNoVirtual());
    bounding_box_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.msgs.Model.bounding_box)
  return bounding_box_;
}
inline void Model::set_allocated_bounding_box(::gz::msgs::AxisAlignedBox* bounding_box) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bounding_box_);
  }
  if (bounding_box) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bounding_box = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bounding_box, submessage_arena);
    }
    
  } else {
    
  }
  bounding_box_ = bounding_box;
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.Model.bounding_box)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gz

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_gz_2fmsgs_2fmodel_2eproto
