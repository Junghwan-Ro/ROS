// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gz/msgs/actor.proto

#include "gz/msgs/actor.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
#include "gz/msgs/Factory.hh"
GZ_REGISTER_STATIC_MSG("gz_msgs.Actor", Actor)
// @@protoc_insertion_point(includes)

namespace protobuf_gz_2fmsgs_2factor_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2factor_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Actor_Animation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2factor_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Actor_Trajectory;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2factor_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Actor_Waypoint;
}  // namespace protobuf_gz_2fmsgs_2factor_2eproto
namespace protobuf_gz_2fmsgs_2fentity_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fentity_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Entity;
}  // namespace protobuf_gz_2fmsgs_2fentity_2eproto
namespace protobuf_gz_2fmsgs_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fheader_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Header;
}  // namespace protobuf_gz_2fmsgs_2fheader_2eproto
namespace protobuf_gz_2fmsgs_2fpose_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fpose_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Pose;
}  // namespace protobuf_gz_2fmsgs_2fpose_2eproto
namespace gz {
namespace msgs {
class Actor_AnimationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Actor_Animation>
      _instance;
} _Actor_Animation_default_instance_;
class Actor_WaypointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Actor_Waypoint>
      _instance;
} _Actor_Waypoint_default_instance_;
class Actor_TrajectoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Actor_Trajectory>
      _instance;
} _Actor_Trajectory_default_instance_;
class ActorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Actor>
      _instance;
} _Actor_default_instance_;
}  // namespace msgs
}  // namespace gz
namespace protobuf_gz_2fmsgs_2factor_2eproto {
static void InitDefaultsActor_Animation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_Actor_Animation_default_instance_;
    new (ptr) ::gz::msgs::Actor_Animation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::Actor_Animation::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<0> scc_info_Actor_Animation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsActor_Animation}, {}};

static void InitDefaultsActor_Waypoint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_Actor_Waypoint_default_instance_;
    new (ptr) ::gz::msgs::Actor_Waypoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::Actor_Waypoint::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<1> scc_info_Actor_Waypoint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsActor_Waypoint}, {
      &protobuf_gz_2fmsgs_2fpose_2eproto::scc_info_Pose.base,}};

static void InitDefaultsActor_Trajectory() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_Actor_Trajectory_default_instance_;
    new (ptr) ::gz::msgs::Actor_Trajectory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::Actor_Trajectory::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<1> scc_info_Actor_Trajectory =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsActor_Trajectory}, {
      &protobuf_gz_2fmsgs_2factor_2eproto::scc_info_Actor_Waypoint.base,}};

static void InitDefaultsActor() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_Actor_default_instance_;
    new (ptr) ::gz::msgs::Actor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::Actor::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<5> scc_info_Actor =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsActor}, {
      &protobuf_gz_2fmsgs_2fheader_2eproto::scc_info_Header.base,
      &protobuf_gz_2fmsgs_2fentity_2eproto::scc_info_Entity.base,
      &protobuf_gz_2fmsgs_2fpose_2eproto::scc_info_Pose.base,
      &protobuf_gz_2fmsgs_2factor_2eproto::scc_info_Actor_Animation.base,
      &protobuf_gz_2fmsgs_2factor_2eproto::scc_info_Actor_Trajectory.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Actor_Animation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Actor_Waypoint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Actor_Trajectory.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Actor.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor_Animation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor_Animation, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor_Animation, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor_Animation, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor_Animation, interpolate_x_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor_Waypoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor_Waypoint, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor_Waypoint, pose_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor_Trajectory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor_Trajectory, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor_Trajectory, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor_Trajectory, tension_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor_Trajectory, waypoints_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor, entity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor, pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor, skin_filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor, skin_scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor, animations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor, script_loop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor, script_delay_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor, script_auto_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor, trajectories_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Actor, parent_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gz::msgs::Actor_Animation)},
  { 9, -1, sizeof(::gz::msgs::Actor_Waypoint)},
  { 16, -1, sizeof(::gz::msgs::Actor_Trajectory)},
  { 25, -1, sizeof(::gz::msgs::Actor)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_Actor_Animation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_Actor_Waypoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_Actor_Trajectory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_Actor_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "gz/msgs/actor.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023gz/msgs/actor.proto\022\007gz.msgs\032\024gz/msgs/"
      "entity.proto\032\024gz/msgs/header.proto\032\022gz/m"
      "sgs/pose.proto\"\314\004\n\005Actor\022\037\n\006header\030\001 \001(\013"
      "2\017.gz.msgs.Header\022\037\n\006entity\030\002 \001(\0132\017.gz.m"
      "sgs.Entity\022\033\n\004pose\030\003 \001(\0132\r.gz.msgs.Pose\022"
      "\025\n\rskin_filename\030\004 \001(\t\022\022\n\nskin_scale\030\005 \001"
      "(\002\022,\n\nanimations\030\006 \003(\0132\030.gz.msgs.Actor.A"
      "nimation\022\023\n\013script_loop\030\007 \001(\010\022\032\n\022script_"
      "delay_start\030\010 \001(\002\022\031\n\021script_auto_start\030\t"
      " \001(\010\022/\n\014trajectories\030\n \003(\0132\031.gz.msgs.Act"
      "or.Trajectory\022\037\n\006parent\030\013 \001(\0132\017.gz.msgs."
      "Entity\032Q\n\tAnimation\022\014\n\004name\030\001 \001(\t\022\020\n\010fil"
      "ename\030\002 \001(\t\022\r\n\005scale\030\003 \001(\002\022\025\n\rinterpolat"
      "e_x\030\004 \001(\010\0325\n\010Waypoint\022\014\n\004time\030\001 \001(\002\022\033\n\004p"
      "ose\030\002 \001(\0132\r.gz.msgs.Pose\032c\n\nTrajectory\022\n"
      "\n\002id\030\001 \001(\r\022\014\n\004type\030\002 \001(\t\022\017\n\007tension\030\003 \001("
      "\002\022*\n\twaypoints\030\004 \003(\0132\027.gz.msgs.Actor.Way"
      "pointB\032\n\013com.gz.msgsB\013ActorProtosb\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 721);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gz/msgs/actor.proto", &protobuf_RegisterTypes);
  ::protobuf_gz_2fmsgs_2fentity_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2fheader_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2fpose_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gz_2fmsgs_2factor_2eproto
namespace gz {
namespace msgs {

// ===================================================================

void Actor_Animation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Actor_Animation::kNameFieldNumber;
const int Actor_Animation::kFilenameFieldNumber;
const int Actor_Animation::kScaleFieldNumber;
const int Actor_Animation::kInterpolateXFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Actor_Animation::Actor_Animation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2factor_2eproto::scc_info_Actor_Animation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.Actor.Animation)
}
Actor_Animation::Actor_Animation(const Actor_Animation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  ::memcpy(&scale_, &from.scale_,
    static_cast<size_t>(reinterpret_cast<char*>(&interpolate_x_) -
    reinterpret_cast<char*>(&scale_)) + sizeof(interpolate_x_));
  // @@protoc_insertion_point(copy_constructor:gz.msgs.Actor.Animation)
}

void Actor_Animation::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scale_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interpolate_x_) -
      reinterpret_cast<char*>(&scale_)) + sizeof(interpolate_x_));
}

Actor_Animation::~Actor_Animation() {
  // @@protoc_insertion_point(destructor:gz.msgs.Actor.Animation)
  SharedDtor();
}

void Actor_Animation::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Actor_Animation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Actor_Animation::descriptor() {
  ::protobuf_gz_2fmsgs_2factor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2factor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Actor_Animation& Actor_Animation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2factor_2eproto::scc_info_Actor_Animation.base);
  return *internal_default_instance();
}


void Actor_Animation::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.Actor.Animation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&scale_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interpolate_x_) -
      reinterpret_cast<char*>(&scale_)) + sizeof(interpolate_x_));
  _internal_metadata_.Clear();
}

bool Actor_Animation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.Actor.Animation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.Actor.Animation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string filename = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.Actor.Animation.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float scale = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool interpolate_x = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &interpolate_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.Actor.Animation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.Actor.Animation)
  return false;
#undef DO_
}

void Actor_Animation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.Actor.Animation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Actor.Animation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string filename = 2;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Actor.Animation.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filename(), output);
  }

  // float scale = 3;
  if (this->scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->scale(), output);
  }

  // bool interpolate_x = 4;
  if (this->interpolate_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->interpolate_x(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.Actor.Animation)
}

::google::protobuf::uint8* Actor_Animation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.Actor.Animation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Actor.Animation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string filename = 2;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Actor.Animation.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filename(), target);
  }

  // float scale = 3;
  if (this->scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->scale(), target);
  }

  // bool interpolate_x = 4;
  if (this->interpolate_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->interpolate_x(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.Actor.Animation)
  return target;
}

size_t Actor_Animation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.Actor.Animation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string filename = 2;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // float scale = 3;
  if (this->scale() != 0) {
    total_size += 1 + 4;
  }

  // bool interpolate_x = 4;
  if (this->interpolate_x() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Actor_Animation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.Actor.Animation)
  GOOGLE_DCHECK_NE(&from, this);
  const Actor_Animation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Actor_Animation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.Actor.Animation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.Actor.Animation)
    MergeFrom(*source);
  }
}

void Actor_Animation::MergeFrom(const Actor_Animation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.Actor.Animation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.scale() != 0) {
    set_scale(from.scale());
  }
  if (from.interpolate_x() != 0) {
    set_interpolate_x(from.interpolate_x());
  }
}

void Actor_Animation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.Actor.Animation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Actor_Animation::CopyFrom(const Actor_Animation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.Actor.Animation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Actor_Animation::IsInitialized() const {
  return true;
}

void Actor_Animation::Swap(Actor_Animation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Actor_Animation::InternalSwap(Actor_Animation* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  filename_.Swap(&other->filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(scale_, other->scale_);
  swap(interpolate_x_, other->interpolate_x_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Actor_Animation::GetMetadata() const {
  protobuf_gz_2fmsgs_2factor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2factor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Actor_Waypoint::InitAsDefaultInstance() {
  ::gz::msgs::_Actor_Waypoint_default_instance_._instance.get_mutable()->pose_ = const_cast< ::gz::msgs::Pose*>(
      ::gz::msgs::Pose::internal_default_instance());
}
void Actor_Waypoint::clear_pose() {
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Actor_Waypoint::kTimeFieldNumber;
const int Actor_Waypoint::kPoseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Actor_Waypoint::Actor_Waypoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2factor_2eproto::scc_info_Actor_Waypoint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.Actor.Waypoint)
}
Actor_Waypoint::Actor_Waypoint(const Actor_Waypoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pose()) {
    pose_ = new ::gz::msgs::Pose(*from.pose_);
  } else {
    pose_ = NULL;
  }
  time_ = from.time_;
  // @@protoc_insertion_point(copy_constructor:gz.msgs.Actor.Waypoint)
}

void Actor_Waypoint::SharedCtor() {
  ::memset(&pose_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&pose_)) + sizeof(time_));
}

Actor_Waypoint::~Actor_Waypoint() {
  // @@protoc_insertion_point(destructor:gz.msgs.Actor.Waypoint)
  SharedDtor();
}

void Actor_Waypoint::SharedDtor() {
  if (this != internal_default_instance()) delete pose_;
}

void Actor_Waypoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Actor_Waypoint::descriptor() {
  ::protobuf_gz_2fmsgs_2factor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2factor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Actor_Waypoint& Actor_Waypoint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2factor_2eproto::scc_info_Actor_Waypoint.base);
  return *internal_default_instance();
}


void Actor_Waypoint::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.Actor.Waypoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
  time_ = 0;
  _internal_metadata_.Clear();
}

bool Actor_Waypoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.Actor.Waypoint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Pose pose = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.Actor.Waypoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.Actor.Waypoint)
  return false;
#undef DO_
}

void Actor_Waypoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.Actor.Waypoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float time = 1;
  if (this->time() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->time(), output);
  }

  // .gz.msgs.Pose pose = 2;
  if (this->has_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pose(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.Actor.Waypoint)
}

::google::protobuf::uint8* Actor_Waypoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.Actor.Waypoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float time = 1;
  if (this->time() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->time(), target);
  }

  // .gz.msgs.Pose pose = 2;
  if (this->has_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pose(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.Actor.Waypoint)
  return target;
}

size_t Actor_Waypoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.Actor.Waypoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .gz.msgs.Pose pose = 2;
  if (this->has_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pose_);
  }

  // float time = 1;
  if (this->time() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Actor_Waypoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.Actor.Waypoint)
  GOOGLE_DCHECK_NE(&from, this);
  const Actor_Waypoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Actor_Waypoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.Actor.Waypoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.Actor.Waypoint)
    MergeFrom(*source);
  }
}

void Actor_Waypoint::MergeFrom(const Actor_Waypoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.Actor.Waypoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pose()) {
    mutable_pose()->::gz::msgs::Pose::MergeFrom(from.pose());
  }
  if (from.time() != 0) {
    set_time(from.time());
  }
}

void Actor_Waypoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.Actor.Waypoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Actor_Waypoint::CopyFrom(const Actor_Waypoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.Actor.Waypoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Actor_Waypoint::IsInitialized() const {
  return true;
}

void Actor_Waypoint::Swap(Actor_Waypoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Actor_Waypoint::InternalSwap(Actor_Waypoint* other) {
  using std::swap;
  swap(pose_, other->pose_);
  swap(time_, other->time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Actor_Waypoint::GetMetadata() const {
  protobuf_gz_2fmsgs_2factor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2factor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Actor_Trajectory::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Actor_Trajectory::kIdFieldNumber;
const int Actor_Trajectory::kTypeFieldNumber;
const int Actor_Trajectory::kTensionFieldNumber;
const int Actor_Trajectory::kWaypointsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Actor_Trajectory::Actor_Trajectory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2factor_2eproto::scc_info_Actor_Trajectory.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.Actor.Trajectory)
}
Actor_Trajectory::Actor_Trajectory(const Actor_Trajectory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      waypoints_(from.waypoints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&tension_) -
    reinterpret_cast<char*>(&id_)) + sizeof(tension_));
  // @@protoc_insertion_point(copy_constructor:gz.msgs.Actor.Trajectory)
}

void Actor_Trajectory::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tension_) -
      reinterpret_cast<char*>(&id_)) + sizeof(tension_));
}

Actor_Trajectory::~Actor_Trajectory() {
  // @@protoc_insertion_point(destructor:gz.msgs.Actor.Trajectory)
  SharedDtor();
}

void Actor_Trajectory::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Actor_Trajectory::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Actor_Trajectory::descriptor() {
  ::protobuf_gz_2fmsgs_2factor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2factor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Actor_Trajectory& Actor_Trajectory::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2factor_2eproto::scc_info_Actor_Trajectory.base);
  return *internal_default_instance();
}


void Actor_Trajectory::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.Actor.Trajectory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  waypoints_.Clear();
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tension_) -
      reinterpret_cast<char*>(&id_)) + sizeof(tension_));
  _internal_metadata_.Clear();
}

bool Actor_Trajectory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.Actor.Trajectory)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.Actor.Trajectory.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float tension = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &tension_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gz.msgs.Actor.Waypoint waypoints = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_waypoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.Actor.Trajectory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.Actor.Trajectory)
  return false;
#undef DO_
}

void Actor_Trajectory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.Actor.Trajectory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Actor.Trajectory.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // float tension = 3;
  if (this->tension() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->tension(), output);
  }

  // repeated .gz.msgs.Actor.Waypoint waypoints = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->waypoints_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->waypoints(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.Actor.Trajectory)
}

::google::protobuf::uint8* Actor_Trajectory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.Actor.Trajectory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Actor.Trajectory.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // float tension = 3;
  if (this->tension() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->tension(), target);
  }

  // repeated .gz.msgs.Actor.Waypoint waypoints = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->waypoints_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->waypoints(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.Actor.Trajectory)
  return target;
}

size_t Actor_Trajectory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.Actor.Trajectory)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gz.msgs.Actor.Waypoint waypoints = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->waypoints_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->waypoints(static_cast<int>(i)));
    }
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // float tension = 3;
  if (this->tension() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Actor_Trajectory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.Actor.Trajectory)
  GOOGLE_DCHECK_NE(&from, this);
  const Actor_Trajectory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Actor_Trajectory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.Actor.Trajectory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.Actor.Trajectory)
    MergeFrom(*source);
  }
}

void Actor_Trajectory::MergeFrom(const Actor_Trajectory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.Actor.Trajectory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  waypoints_.MergeFrom(from.waypoints_);
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.tension() != 0) {
    set_tension(from.tension());
  }
}

void Actor_Trajectory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.Actor.Trajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Actor_Trajectory::CopyFrom(const Actor_Trajectory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.Actor.Trajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Actor_Trajectory::IsInitialized() const {
  return true;
}

void Actor_Trajectory::Swap(Actor_Trajectory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Actor_Trajectory::InternalSwap(Actor_Trajectory* other) {
  using std::swap;
  CastToBase(&waypoints_)->InternalSwap(CastToBase(&other->waypoints_));
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(tension_, other->tension_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Actor_Trajectory::GetMetadata() const {
  protobuf_gz_2fmsgs_2factor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2factor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Actor::InitAsDefaultInstance() {
  ::gz::msgs::_Actor_default_instance_._instance.get_mutable()->header_ = const_cast< ::gz::msgs::Header*>(
      ::gz::msgs::Header::internal_default_instance());
  ::gz::msgs::_Actor_default_instance_._instance.get_mutable()->entity_ = const_cast< ::gz::msgs::Entity*>(
      ::gz::msgs::Entity::internal_default_instance());
  ::gz::msgs::_Actor_default_instance_._instance.get_mutable()->pose_ = const_cast< ::gz::msgs::Pose*>(
      ::gz::msgs::Pose::internal_default_instance());
  ::gz::msgs::_Actor_default_instance_._instance.get_mutable()->parent_ = const_cast< ::gz::msgs::Entity*>(
      ::gz::msgs::Entity::internal_default_instance());
}
void Actor::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void Actor::clear_entity() {
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
}
void Actor::clear_pose() {
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
}
void Actor::clear_parent() {
  if (GetArenaNoVirtual() == NULL && parent_ != NULL) {
    delete parent_;
  }
  parent_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Actor::kHeaderFieldNumber;
const int Actor::kEntityFieldNumber;
const int Actor::kPoseFieldNumber;
const int Actor::kSkinFilenameFieldNumber;
const int Actor::kSkinScaleFieldNumber;
const int Actor::kAnimationsFieldNumber;
const int Actor::kScriptLoopFieldNumber;
const int Actor::kScriptDelayStartFieldNumber;
const int Actor::kScriptAutoStartFieldNumber;
const int Actor::kTrajectoriesFieldNumber;
const int Actor::kParentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Actor::Actor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2factor_2eproto::scc_info_Actor.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.Actor)
}
Actor::Actor(const Actor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      animations_(from.animations_),
      trajectories_(from.trajectories_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  skin_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.skin_filename().size() > 0) {
    skin_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skin_filename_);
  }
  if (from.has_header()) {
    header_ = new ::gz::msgs::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_entity()) {
    entity_ = new ::gz::msgs::Entity(*from.entity_);
  } else {
    entity_ = NULL;
  }
  if (from.has_pose()) {
    pose_ = new ::gz::msgs::Pose(*from.pose_);
  } else {
    pose_ = NULL;
  }
  if (from.has_parent()) {
    parent_ = new ::gz::msgs::Entity(*from.parent_);
  } else {
    parent_ = NULL;
  }
  ::memcpy(&skin_scale_, &from.skin_scale_,
    static_cast<size_t>(reinterpret_cast<char*>(&script_auto_start_) -
    reinterpret_cast<char*>(&skin_scale_)) + sizeof(script_auto_start_));
  // @@protoc_insertion_point(copy_constructor:gz.msgs.Actor)
}

void Actor::SharedCtor() {
  skin_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&script_auto_start_) -
      reinterpret_cast<char*>(&header_)) + sizeof(script_auto_start_));
}

Actor::~Actor() {
  // @@protoc_insertion_point(destructor:gz.msgs.Actor)
  SharedDtor();
}

void Actor::SharedDtor() {
  skin_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete entity_;
  if (this != internal_default_instance()) delete pose_;
  if (this != internal_default_instance()) delete parent_;
}

void Actor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Actor::descriptor() {
  ::protobuf_gz_2fmsgs_2factor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2factor_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Actor& Actor::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2factor_2eproto::scc_info_Actor.base);
  return *internal_default_instance();
}


void Actor::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.Actor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  animations_.Clear();
  trajectories_.Clear();
  skin_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && entity_ != NULL) {
    delete entity_;
  }
  entity_ = NULL;
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
  if (GetArenaNoVirtual() == NULL && parent_ != NULL) {
    delete parent_;
  }
  parent_ = NULL;
  ::memset(&skin_scale_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&script_auto_start_) -
      reinterpret_cast<char*>(&skin_scale_)) + sizeof(script_auto_start_));
  _internal_metadata_.Clear();
}

bool Actor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.Actor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gz.msgs.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Entity entity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Pose pose = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string skin_filename = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_skin_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->skin_filename().data(), static_cast<int>(this->skin_filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.Actor.skin_filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float skin_scale = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &skin_scale_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gz.msgs.Actor.Animation animations = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_animations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool script_loop = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &script_loop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float script_delay_start = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &script_delay_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool script_auto_start = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &script_auto_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gz.msgs.Actor.Trajectory trajectories = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_trajectories()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Entity parent = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.Actor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.Actor)
  return false;
#undef DO_
}

void Actor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.Actor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .gz.msgs.Entity entity = 2;
  if (this->has_entity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_entity(), output);
  }

  // .gz.msgs.Pose pose = 3;
  if (this->has_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_pose(), output);
  }

  // string skin_filename = 4;
  if (this->skin_filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->skin_filename().data(), static_cast<int>(this->skin_filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Actor.skin_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->skin_filename(), output);
  }

  // float skin_scale = 5;
  if (this->skin_scale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->skin_scale(), output);
  }

  // repeated .gz.msgs.Actor.Animation animations = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->animations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->animations(static_cast<int>(i)),
      output);
  }

  // bool script_loop = 7;
  if (this->script_loop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->script_loop(), output);
  }

  // float script_delay_start = 8;
  if (this->script_delay_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->script_delay_start(), output);
  }

  // bool script_auto_start = 9;
  if (this->script_auto_start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->script_auto_start(), output);
  }

  // repeated .gz.msgs.Actor.Trajectory trajectories = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trajectories_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->trajectories(static_cast<int>(i)),
      output);
  }

  // .gz.msgs.Entity parent = 11;
  if (this->has_parent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_parent(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.Actor)
}

::google::protobuf::uint8* Actor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.Actor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .gz.msgs.Entity entity = 2;
  if (this->has_entity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_entity(), deterministic, target);
  }

  // .gz.msgs.Pose pose = 3;
  if (this->has_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_pose(), deterministic, target);
  }

  // string skin_filename = 4;
  if (this->skin_filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->skin_filename().data(), static_cast<int>(this->skin_filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Actor.skin_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->skin_filename(), target);
  }

  // float skin_scale = 5;
  if (this->skin_scale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->skin_scale(), target);
  }

  // repeated .gz.msgs.Actor.Animation animations = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->animations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->animations(static_cast<int>(i)), deterministic, target);
  }

  // bool script_loop = 7;
  if (this->script_loop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->script_loop(), target);
  }

  // float script_delay_start = 8;
  if (this->script_delay_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->script_delay_start(), target);
  }

  // bool script_auto_start = 9;
  if (this->script_auto_start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->script_auto_start(), target);
  }

  // repeated .gz.msgs.Actor.Trajectory trajectories = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trajectories_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->trajectories(static_cast<int>(i)), deterministic, target);
  }

  // .gz.msgs.Entity parent = 11;
  if (this->has_parent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_parent(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.Actor)
  return target;
}

size_t Actor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.Actor)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gz.msgs.Actor.Animation animations = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->animations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->animations(static_cast<int>(i)));
    }
  }

  // repeated .gz.msgs.Actor.Trajectory trajectories = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->trajectories_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->trajectories(static_cast<int>(i)));
    }
  }

  // string skin_filename = 4;
  if (this->skin_filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->skin_filename());
  }

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .gz.msgs.Entity entity = 2;
  if (this->has_entity()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *entity_);
  }

  // .gz.msgs.Pose pose = 3;
  if (this->has_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pose_);
  }

  // .gz.msgs.Entity parent = 11;
  if (this->has_parent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *parent_);
  }

  // float skin_scale = 5;
  if (this->skin_scale() != 0) {
    total_size += 1 + 4;
  }

  // float script_delay_start = 8;
  if (this->script_delay_start() != 0) {
    total_size += 1 + 4;
  }

  // bool script_loop = 7;
  if (this->script_loop() != 0) {
    total_size += 1 + 1;
  }

  // bool script_auto_start = 9;
  if (this->script_auto_start() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Actor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.Actor)
  GOOGLE_DCHECK_NE(&from, this);
  const Actor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Actor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.Actor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.Actor)
    MergeFrom(*source);
  }
}

void Actor::MergeFrom(const Actor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.Actor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  animations_.MergeFrom(from.animations_);
  trajectories_.MergeFrom(from.trajectories_);
  if (from.skin_filename().size() > 0) {

    skin_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.skin_filename_);
  }
  if (from.has_header()) {
    mutable_header()->::gz::msgs::Header::MergeFrom(from.header());
  }
  if (from.has_entity()) {
    mutable_entity()->::gz::msgs::Entity::MergeFrom(from.entity());
  }
  if (from.has_pose()) {
    mutable_pose()->::gz::msgs::Pose::MergeFrom(from.pose());
  }
  if (from.has_parent()) {
    mutable_parent()->::gz::msgs::Entity::MergeFrom(from.parent());
  }
  if (from.skin_scale() != 0) {
    set_skin_scale(from.skin_scale());
  }
  if (from.script_delay_start() != 0) {
    set_script_delay_start(from.script_delay_start());
  }
  if (from.script_loop() != 0) {
    set_script_loop(from.script_loop());
  }
  if (from.script_auto_start() != 0) {
    set_script_auto_start(from.script_auto_start());
  }
}

void Actor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.Actor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Actor::CopyFrom(const Actor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.Actor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Actor::IsInitialized() const {
  return true;
}

void Actor::Swap(Actor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Actor::InternalSwap(Actor* other) {
  using std::swap;
  CastToBase(&animations_)->InternalSwap(CastToBase(&other->animations_));
  CastToBase(&trajectories_)->InternalSwap(CastToBase(&other->trajectories_));
  skin_filename_.Swap(&other->skin_filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(header_, other->header_);
  swap(entity_, other->entity_);
  swap(pose_, other->pose_);
  swap(parent_, other->parent_);
  swap(skin_scale_, other->skin_scale_);
  swap(script_delay_start_, other->script_delay_start_);
  swap(script_loop_, other->script_loop_);
  swap(script_auto_start_, other->script_auto_start_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Actor::GetMetadata() const {
  protobuf_gz_2fmsgs_2factor_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2factor_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgs
}  // namespace gz
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::Actor_Animation* Arena::CreateMaybeMessage< ::gz::msgs::Actor_Animation >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::Actor_Animation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::Actor_Waypoint* Arena::CreateMaybeMessage< ::gz::msgs::Actor_Waypoint >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::Actor_Waypoint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::Actor_Trajectory* Arena::CreateMaybeMessage< ::gz::msgs::Actor_Trajectory >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::Actor_Trajectory >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::Actor* Arena::CreateMaybeMessage< ::gz::msgs::Actor >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::Actor >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
