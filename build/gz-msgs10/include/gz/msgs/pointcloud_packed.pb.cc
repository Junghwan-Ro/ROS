// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gz/msgs/pointcloud_packed.proto

#include "gz/msgs/pointcloud_packed.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
#include "gz/msgs/Factory.hh"
GZ_REGISTER_STATIC_MSG("gz_msgs.PointCloudPacked", PointCloudPacked)
// @@protoc_insertion_point(includes)

namespace protobuf_gz_2fmsgs_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fheader_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Header;
}  // namespace protobuf_gz_2fmsgs_2fheader_2eproto
namespace protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PointCloudPacked_Field;
}  // namespace protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto
namespace gz {
namespace msgs {
class PointCloudPacked_FieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PointCloudPacked_Field>
      _instance;
} _PointCloudPacked_Field_default_instance_;
class PointCloudPackedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PointCloudPacked>
      _instance;
} _PointCloudPacked_default_instance_;
}  // namespace msgs
}  // namespace gz
namespace protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto {
static void InitDefaultsPointCloudPacked_Field() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_PointCloudPacked_Field_default_instance_;
    new (ptr) ::gz::msgs::PointCloudPacked_Field();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::PointCloudPacked_Field::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<0> scc_info_PointCloudPacked_Field =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPointCloudPacked_Field}, {}};

static void InitDefaultsPointCloudPacked() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_PointCloudPacked_default_instance_;
    new (ptr) ::gz::msgs::PointCloudPacked();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::PointCloudPacked::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<2> scc_info_PointCloudPacked =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPointCloudPacked}, {
      &protobuf_gz_2fmsgs_2fheader_2eproto::scc_info_Header.base,
      &protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto::scc_info_PointCloudPacked_Field.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PointCloudPacked_Field.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PointCloudPacked.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::PointCloudPacked_Field, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::PointCloudPacked_Field, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::PointCloudPacked_Field, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::PointCloudPacked_Field, datatype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::PointCloudPacked_Field, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::PointCloudPacked, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::PointCloudPacked, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::PointCloudPacked, field_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::PointCloudPacked, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::PointCloudPacked, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::PointCloudPacked, is_bigendian_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::PointCloudPacked, point_step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::PointCloudPacked, row_step_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::PointCloudPacked, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::PointCloudPacked, is_dense_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gz::msgs::PointCloudPacked_Field)},
  { 9, -1, sizeof(::gz::msgs::PointCloudPacked)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_PointCloudPacked_Field_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_PointCloudPacked_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "gz/msgs/pointcloud_packed.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\037gz/msgs/pointcloud_packed.proto\022\007gz.ms"
      "gs\032\024gz/msgs/header.proto\"\272\003\n\020PointCloudP"
      "acked\022\037\n\006header\030\001 \001(\0132\017.gz.msgs.Header\022."
      "\n\005field\030\002 \003(\0132\037.gz.msgs.PointCloudPacked"
      ".Field\022\016\n\006height\030\003 \001(\r\022\r\n\005width\030\004 \001(\r\022\024\n"
      "\014is_bigendian\030\005 \001(\010\022\022\n\npoint_step\030\006 \001(\r\022"
      "\020\n\010row_step\030\007 \001(\r\022\014\n\004data\030\010 \001(\014\022\020\n\010is_de"
      "nse\030\t \001(\010\032\331\001\n\005Field\022\014\n\004name\030\001 \001(\t\022\016\n\006off"
      "set\030\002 \001(\r\022:\n\010datatype\030\003 \001(\0162(.gz.msgs.Po"
      "intCloudPacked.Field.DataType\022\r\n\005count\030\004"
      " \001(\r\"g\n\010DataType\022\010\n\004INT8\020\000\022\t\n\005UINT8\020\001\022\t\n"
      "\005INT16\020\002\022\n\n\006UINT16\020\003\022\t\n\005INT32\020\004\022\n\n\006UINT3"
      "2\020\005\022\013\n\007FLOAT32\020\006\022\013\n\007FLOAT64\020\007B%\n\013com.gz."
      "msgsB\026PointCloudPackedProtosb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 556);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gz/msgs/pointcloud_packed.proto", &protobuf_RegisterTypes);
  ::protobuf_gz_2fmsgs_2fheader_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto
namespace gz {
namespace msgs {
const ::google::protobuf::EnumDescriptor* PointCloudPacked_Field_DataType_descriptor() {
  protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto::file_level_enum_descriptors[0];
}
bool PointCloudPacked_Field_DataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const PointCloudPacked_Field_DataType PointCloudPacked_Field::INT8;
const PointCloudPacked_Field_DataType PointCloudPacked_Field::UINT8;
const PointCloudPacked_Field_DataType PointCloudPacked_Field::INT16;
const PointCloudPacked_Field_DataType PointCloudPacked_Field::UINT16;
const PointCloudPacked_Field_DataType PointCloudPacked_Field::INT32;
const PointCloudPacked_Field_DataType PointCloudPacked_Field::UINT32;
const PointCloudPacked_Field_DataType PointCloudPacked_Field::FLOAT32;
const PointCloudPacked_Field_DataType PointCloudPacked_Field::FLOAT64;
const PointCloudPacked_Field_DataType PointCloudPacked_Field::DataType_MIN;
const PointCloudPacked_Field_DataType PointCloudPacked_Field::DataType_MAX;
const int PointCloudPacked_Field::DataType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void PointCloudPacked_Field::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointCloudPacked_Field::kNameFieldNumber;
const int PointCloudPacked_Field::kOffsetFieldNumber;
const int PointCloudPacked_Field::kDatatypeFieldNumber;
const int PointCloudPacked_Field::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointCloudPacked_Field::PointCloudPacked_Field()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto::scc_info_PointCloudPacked_Field.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.PointCloudPacked.Field)
}
PointCloudPacked_Field::PointCloudPacked_Field(const PointCloudPacked_Field& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:gz.msgs.PointCloudPacked.Field)
}

void PointCloudPacked_Field::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(count_));
}

PointCloudPacked_Field::~PointCloudPacked_Field() {
  // @@protoc_insertion_point(destructor:gz.msgs.PointCloudPacked.Field)
  SharedDtor();
}

void PointCloudPacked_Field::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PointCloudPacked_Field::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PointCloudPacked_Field::descriptor() {
  ::protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PointCloudPacked_Field& PointCloudPacked_Field::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto::scc_info_PointCloudPacked_Field.base);
  return *internal_default_instance();
}


void PointCloudPacked_Field::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.PointCloudPacked.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool PointCloudPacked_Field::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.PointCloudPacked.Field)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.PointCloudPacked.Field.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.PointCloudPacked.Field.DataType datatype = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_datatype(static_cast< ::gz::msgs::PointCloudPacked_Field_DataType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.PointCloudPacked.Field)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.PointCloudPacked.Field)
  return false;
#undef DO_
}

void PointCloudPacked_Field::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.PointCloudPacked.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.PointCloudPacked.Field.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->offset(), output);
  }

  // .gz.msgs.PointCloudPacked.Field.DataType datatype = 3;
  if (this->datatype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->datatype(), output);
  }

  // uint32 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.PointCloudPacked.Field)
}

::google::protobuf::uint8* PointCloudPacked_Field::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.PointCloudPacked.Field)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.PointCloudPacked.Field.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->offset(), target);
  }

  // .gz.msgs.PointCloudPacked.Field.DataType datatype = 3;
  if (this->datatype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->datatype(), target);
  }

  // uint32 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.PointCloudPacked.Field)
  return target;
}

size_t PointCloudPacked_Field::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.PointCloudPacked.Field)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // uint32 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offset());
  }

  // .gz.msgs.PointCloudPacked.Field.DataType datatype = 3;
  if (this->datatype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->datatype());
  }

  // uint32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PointCloudPacked_Field::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.PointCloudPacked.Field)
  GOOGLE_DCHECK_NE(&from, this);
  const PointCloudPacked_Field* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PointCloudPacked_Field>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.PointCloudPacked.Field)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.PointCloudPacked.Field)
    MergeFrom(*source);
  }
}

void PointCloudPacked_Field::MergeFrom(const PointCloudPacked_Field& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.PointCloudPacked.Field)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.datatype() != 0) {
    set_datatype(from.datatype());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void PointCloudPacked_Field::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.PointCloudPacked.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointCloudPacked_Field::CopyFrom(const PointCloudPacked_Field& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.PointCloudPacked.Field)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointCloudPacked_Field::IsInitialized() const {
  return true;
}

void PointCloudPacked_Field::Swap(PointCloudPacked_Field* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointCloudPacked_Field::InternalSwap(PointCloudPacked_Field* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(offset_, other->offset_);
  swap(datatype_, other->datatype_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PointCloudPacked_Field::GetMetadata() const {
  protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PointCloudPacked::InitAsDefaultInstance() {
  ::gz::msgs::_PointCloudPacked_default_instance_._instance.get_mutable()->header_ = const_cast< ::gz::msgs::Header*>(
      ::gz::msgs::Header::internal_default_instance());
}
void PointCloudPacked::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PointCloudPacked::kHeaderFieldNumber;
const int PointCloudPacked::kFieldFieldNumber;
const int PointCloudPacked::kHeightFieldNumber;
const int PointCloudPacked::kWidthFieldNumber;
const int PointCloudPacked::kIsBigendianFieldNumber;
const int PointCloudPacked::kPointStepFieldNumber;
const int PointCloudPacked::kRowStepFieldNumber;
const int PointCloudPacked::kDataFieldNumber;
const int PointCloudPacked::kIsDenseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PointCloudPacked::PointCloudPacked()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto::scc_info_PointCloudPacked.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.PointCloudPacked)
}
PointCloudPacked::PointCloudPacked(const PointCloudPacked& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      field_(from.field_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_header()) {
    header_ = new ::gz::msgs::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&height_, &from.height_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_dense_) -
    reinterpret_cast<char*>(&height_)) + sizeof(is_dense_));
  // @@protoc_insertion_point(copy_constructor:gz.msgs.PointCloudPacked)
}

void PointCloudPacked::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_dense_) -
      reinterpret_cast<char*>(&header_)) + sizeof(is_dense_));
}

PointCloudPacked::~PointCloudPacked() {
  // @@protoc_insertion_point(destructor:gz.msgs.PointCloudPacked)
  SharedDtor();
}

void PointCloudPacked::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void PointCloudPacked::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PointCloudPacked::descriptor() {
  ::protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PointCloudPacked& PointCloudPacked::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto::scc_info_PointCloudPacked.base);
  return *internal_default_instance();
}


void PointCloudPacked::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.PointCloudPacked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field_.Clear();
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&height_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&is_dense_) -
      reinterpret_cast<char*>(&height_)) + sizeof(is_dense_));
  _internal_metadata_.Clear();
}

bool PointCloudPacked::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.PointCloudPacked)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gz.msgs.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gz.msgs.PointCloudPacked.Field field = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_bigendian = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_bigendian_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 point_step = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &point_step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 row_step = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &row_step_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_dense = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_dense_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.PointCloudPacked)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.PointCloudPacked)
  return false;
#undef DO_
}

void PointCloudPacked::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.PointCloudPacked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // repeated .gz.msgs.PointCloudPacked.Field field = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->field(static_cast<int>(i)),
      output);
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->height(), output);
  }

  // uint32 width = 4;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->width(), output);
  }

  // bool is_bigendian = 5;
  if (this->is_bigendian() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_bigendian(), output);
  }

  // uint32 point_step = 6;
  if (this->point_step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->point_step(), output);
  }

  // uint32 row_step = 7;
  if (this->row_step() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->row_step(), output);
  }

  // bytes data = 8;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->data(), output);
  }

  // bool is_dense = 9;
  if (this->is_dense() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_dense(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.PointCloudPacked)
}

::google::protobuf::uint8* PointCloudPacked::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.PointCloudPacked)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // repeated .gz.msgs.PointCloudPacked.Field field = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->field(static_cast<int>(i)), deterministic, target);
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->height(), target);
  }

  // uint32 width = 4;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->width(), target);
  }

  // bool is_bigendian = 5;
  if (this->is_bigendian() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_bigendian(), target);
  }

  // uint32 point_step = 6;
  if (this->point_step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->point_step(), target);
  }

  // uint32 row_step = 7;
  if (this->row_step() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->row_step(), target);
  }

  // bytes data = 8;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->data(), target);
  }

  // bool is_dense = 9;
  if (this->is_dense() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_dense(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.PointCloudPacked)
  return target;
}

size_t PointCloudPacked::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.PointCloudPacked)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gz.msgs.PointCloudPacked.Field field = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->field(static_cast<int>(i)));
    }
  }

  // bytes data = 8;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // uint32 height = 3;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  // uint32 width = 4;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  // uint32 point_step = 6;
  if (this->point_step() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->point_step());
  }

  // uint32 row_step = 7;
  if (this->row_step() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->row_step());
  }

  // bool is_bigendian = 5;
  if (this->is_bigendian() != 0) {
    total_size += 1 + 1;
  }

  // bool is_dense = 9;
  if (this->is_dense() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PointCloudPacked::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.PointCloudPacked)
  GOOGLE_DCHECK_NE(&from, this);
  const PointCloudPacked* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PointCloudPacked>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.PointCloudPacked)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.PointCloudPacked)
    MergeFrom(*source);
  }
}

void PointCloudPacked::MergeFrom(const PointCloudPacked& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.PointCloudPacked)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  field_.MergeFrom(from.field_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_header()) {
    mutable_header()->::gz::msgs::Header::MergeFrom(from.header());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.point_step() != 0) {
    set_point_step(from.point_step());
  }
  if (from.row_step() != 0) {
    set_row_step(from.row_step());
  }
  if (from.is_bigendian() != 0) {
    set_is_bigendian(from.is_bigendian());
  }
  if (from.is_dense() != 0) {
    set_is_dense(from.is_dense());
  }
}

void PointCloudPacked::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.PointCloudPacked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PointCloudPacked::CopyFrom(const PointCloudPacked& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.PointCloudPacked)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PointCloudPacked::IsInitialized() const {
  return true;
}

void PointCloudPacked::Swap(PointCloudPacked* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PointCloudPacked::InternalSwap(PointCloudPacked* other) {
  using std::swap;
  CastToBase(&field_)->InternalSwap(CastToBase(&other->field_));
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(header_, other->header_);
  swap(height_, other->height_);
  swap(width_, other->width_);
  swap(point_step_, other->point_step_);
  swap(row_step_, other->row_step_);
  swap(is_bigendian_, other->is_bigendian_);
  swap(is_dense_, other->is_dense_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PointCloudPacked::GetMetadata() const {
  protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fpointcloud_5fpacked_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgs
}  // namespace gz
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::PointCloudPacked_Field* Arena::CreateMaybeMessage< ::gz::msgs::PointCloudPacked_Field >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::PointCloudPacked_Field >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::PointCloudPacked* Arena::CreateMaybeMessage< ::gz::msgs::PointCloudPacked >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::PointCloudPacked >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
