// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gz/msgs/visual.proto

#include "gz/msgs/visual.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
#include "gz/msgs/Factory.hh"
GZ_REGISTER_STATIC_MSG("gz_msgs.Visual", Visual)
// @@protoc_insertion_point(includes)

namespace protobuf_gz_2fmsgs_2fgeometry_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fgeometry_2eproto ::google::protobuf::internal::SCCInfo<13> scc_info_Geometry;
}  // namespace protobuf_gz_2fmsgs_2fgeometry_2eproto
namespace protobuf_gz_2fmsgs_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fheader_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Header;
}  // namespace protobuf_gz_2fmsgs_2fheader_2eproto
namespace protobuf_gz_2fmsgs_2fmaterial_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fmaterial_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Material;
}  // namespace protobuf_gz_2fmsgs_2fmaterial_2eproto
namespace protobuf_gz_2fmsgs_2fplugin_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fplugin_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Plugin;
}  // namespace protobuf_gz_2fmsgs_2fplugin_2eproto
namespace protobuf_gz_2fmsgs_2fpose_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fpose_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Pose;
}  // namespace protobuf_gz_2fmsgs_2fpose_2eproto
namespace protobuf_gz_2fmsgs_2fvector3d_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fvector3d_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Vector3d;
}  // namespace protobuf_gz_2fmsgs_2fvector3d_2eproto
namespace protobuf_gz_2fmsgs_2fvisual_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fvisual_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Visual_Meta;
}  // namespace protobuf_gz_2fmsgs_2fvisual_2eproto
namespace gz {
namespace msgs {
class Visual_MetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Visual_Meta>
      _instance;
} _Visual_Meta_default_instance_;
class VisualDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Visual>
      _instance;
} _Visual_default_instance_;
}  // namespace msgs
}  // namespace gz
namespace protobuf_gz_2fmsgs_2fvisual_2eproto {
static void InitDefaultsVisual_Meta() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_Visual_Meta_default_instance_;
    new (ptr) ::gz::msgs::Visual_Meta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::Visual_Meta::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<0> scc_info_Visual_Meta =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsVisual_Meta}, {}};

static void InitDefaultsVisual() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_Visual_default_instance_;
    new (ptr) ::gz::msgs::Visual();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::Visual::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<7> scc_info_Visual =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsVisual}, {
      &protobuf_gz_2fmsgs_2fheader_2eproto::scc_info_Header.base,
      &protobuf_gz_2fmsgs_2fpose_2eproto::scc_info_Pose.base,
      &protobuf_gz_2fmsgs_2fgeometry_2eproto::scc_info_Geometry.base,
      &protobuf_gz_2fmsgs_2fmaterial_2eproto::scc_info_Material.base,
      &protobuf_gz_2fmsgs_2fplugin_2eproto::scc_info_Plugin.base,
      &protobuf_gz_2fmsgs_2fvector3d_2eproto::scc_info_Vector3d.base,
      &protobuf_gz_2fmsgs_2fvisual_2eproto::scc_info_Visual_Meta.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Visual_Meta.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Visual.base);
}

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual_Meta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual_Meta, layer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, parent_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, parent_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, cast_shadows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, transparency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, laser_retro_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, geometry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, material_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, visible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, delete_me_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, is_static_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, plugin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Visual, type_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gz::msgs::Visual_Meta)},
  { 6, -1, sizeof(::gz::msgs::Visual)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_Visual_Meta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_Visual_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "gz/msgs/visual.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024gz/msgs/visual.proto\022\007gz.msgs\032\024gz/msgs"
      "/header.proto\032\022gz/msgs/pose.proto\032\026gz/ms"
      "gs/geometry.proto\032\026gz/msgs/material.prot"
      "o\032\024gz/msgs/plugin.proto\032\026gz/msgs/vector3"
      "d.proto\"\322\004\n\006Visual\022\037\n\006header\030\001 \001(\0132\017.gz."
      "msgs.Header\022\014\n\004name\030\002 \001(\t\022\n\n\002id\030\003 \001(\r\022\023\n"
      "\013parent_name\030\004 \001(\t\022\021\n\tparent_id\030\005 \001(\r\022\024\n"
      "\014cast_shadows\030\006 \001(\010\022\024\n\014transparency\030\007 \001("
      "\001\022\023\n\013laser_retro\030\010 \001(\001\022\033\n\004pose\030\t \001(\0132\r.g"
      "z.msgs.Pose\022#\n\010geometry\030\n \001(\0132\021.gz.msgs."
      "Geometry\022#\n\010material\030\013 \001(\0132\021.gz.msgs.Mat"
      "erial\022\017\n\007visible\030\014 \001(\010\022\021\n\tdelete_me\030\r \001("
      "\010\022\021\n\tis_static\030\016 \001(\010\022\037\n\006plugin\030\017 \003(\0132\017.g"
      "z.msgs.Plugin\022 \n\005scale\030\020 \001(\0132\021.gz.msgs.V"
      "ector3d\022\"\n\004meta\030\021 \001(\0132\024.gz.msgs.Visual.M"
      "eta\022\"\n\004type\030\022 \001(\0162\024.gz.msgs.Visual.Type\032"
      "\025\n\004Meta\022\r\n\005layer\030\001 \001(\005\"d\n\004Type\022\n\n\006ENTITY"
      "\020\000\022\t\n\005MODEL\020\001\022\010\n\004LINK\020\002\022\n\n\006VISUAL\020\003\022\r\n\tC"
      "OLLISION\020\004\022\n\n\006SENSOR\020\005\022\007\n\003GUI\020\006\022\013\n\007PHYSI"
      "CS\020\007B\033\n\013com.gz.msgsB\014VisualProtosb\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 801);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gz/msgs/visual.proto", &protobuf_RegisterTypes);
  ::protobuf_gz_2fmsgs_2fheader_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2fpose_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2fgeometry_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2fmaterial_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2fplugin_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2fvector3d_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gz_2fmsgs_2fvisual_2eproto
namespace gz {
namespace msgs {
const ::google::protobuf::EnumDescriptor* Visual_Type_descriptor() {
  protobuf_gz_2fmsgs_2fvisual_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gz_2fmsgs_2fvisual_2eproto::file_level_enum_descriptors[0];
}
bool Visual_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Visual_Type Visual::ENTITY;
const Visual_Type Visual::MODEL;
const Visual_Type Visual::LINK;
const Visual_Type Visual::VISUAL;
const Visual_Type Visual::COLLISION;
const Visual_Type Visual::SENSOR;
const Visual_Type Visual::GUI;
const Visual_Type Visual::PHYSICS;
const Visual_Type Visual::Type_MIN;
const Visual_Type Visual::Type_MAX;
const int Visual::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Visual_Meta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Visual_Meta::kLayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Visual_Meta::Visual_Meta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2fvisual_2eproto::scc_info_Visual_Meta.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.Visual.Meta)
}
Visual_Meta::Visual_Meta(const Visual_Meta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  layer_ = from.layer_;
  // @@protoc_insertion_point(copy_constructor:gz.msgs.Visual.Meta)
}

void Visual_Meta::SharedCtor() {
  layer_ = 0;
}

Visual_Meta::~Visual_Meta() {
  // @@protoc_insertion_point(destructor:gz.msgs.Visual.Meta)
  SharedDtor();
}

void Visual_Meta::SharedDtor() {
}

void Visual_Meta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Visual_Meta::descriptor() {
  ::protobuf_gz_2fmsgs_2fvisual_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fvisual_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Visual_Meta& Visual_Meta::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2fvisual_2eproto::scc_info_Visual_Meta.base);
  return *internal_default_instance();
}


void Visual_Meta::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.Visual.Meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  layer_ = 0;
  _internal_metadata_.Clear();
}

bool Visual_Meta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.Visual.Meta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 layer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &layer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.Visual.Meta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.Visual.Meta)
  return false;
#undef DO_
}

void Visual_Meta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.Visual.Meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 layer = 1;
  if (this->layer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->layer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.Visual.Meta)
}

::google::protobuf::uint8* Visual_Meta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.Visual.Meta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 layer = 1;
  if (this->layer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->layer(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.Visual.Meta)
  return target;
}

size_t Visual_Meta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.Visual.Meta)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 layer = 1;
  if (this->layer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->layer());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Visual_Meta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.Visual.Meta)
  GOOGLE_DCHECK_NE(&from, this);
  const Visual_Meta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Visual_Meta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.Visual.Meta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.Visual.Meta)
    MergeFrom(*source);
  }
}

void Visual_Meta::MergeFrom(const Visual_Meta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.Visual.Meta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.layer() != 0) {
    set_layer(from.layer());
  }
}

void Visual_Meta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.Visual.Meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Visual_Meta::CopyFrom(const Visual_Meta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.Visual.Meta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Visual_Meta::IsInitialized() const {
  return true;
}

void Visual_Meta::Swap(Visual_Meta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Visual_Meta::InternalSwap(Visual_Meta* other) {
  using std::swap;
  swap(layer_, other->layer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Visual_Meta::GetMetadata() const {
  protobuf_gz_2fmsgs_2fvisual_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fvisual_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Visual::InitAsDefaultInstance() {
  ::gz::msgs::_Visual_default_instance_._instance.get_mutable()->header_ = const_cast< ::gz::msgs::Header*>(
      ::gz::msgs::Header::internal_default_instance());
  ::gz::msgs::_Visual_default_instance_._instance.get_mutable()->pose_ = const_cast< ::gz::msgs::Pose*>(
      ::gz::msgs::Pose::internal_default_instance());
  ::gz::msgs::_Visual_default_instance_._instance.get_mutable()->geometry_ = const_cast< ::gz::msgs::Geometry*>(
      ::gz::msgs::Geometry::internal_default_instance());
  ::gz::msgs::_Visual_default_instance_._instance.get_mutable()->material_ = const_cast< ::gz::msgs::Material*>(
      ::gz::msgs::Material::internal_default_instance());
  ::gz::msgs::_Visual_default_instance_._instance.get_mutable()->scale_ = const_cast< ::gz::msgs::Vector3d*>(
      ::gz::msgs::Vector3d::internal_default_instance());
  ::gz::msgs::_Visual_default_instance_._instance.get_mutable()->meta_ = const_cast< ::gz::msgs::Visual_Meta*>(
      ::gz::msgs::Visual_Meta::internal_default_instance());
}
void Visual::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void Visual::clear_pose() {
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
}
void Visual::clear_geometry() {
  if (GetArenaNoVirtual() == NULL && geometry_ != NULL) {
    delete geometry_;
  }
  geometry_ = NULL;
}
void Visual::clear_material() {
  if (GetArenaNoVirtual() == NULL && material_ != NULL) {
    delete material_;
  }
  material_ = NULL;
}
void Visual::clear_plugin() {
  plugin_.Clear();
}
void Visual::clear_scale() {
  if (GetArenaNoVirtual() == NULL && scale_ != NULL) {
    delete scale_;
  }
  scale_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Visual::kHeaderFieldNumber;
const int Visual::kNameFieldNumber;
const int Visual::kIdFieldNumber;
const int Visual::kParentNameFieldNumber;
const int Visual::kParentIdFieldNumber;
const int Visual::kCastShadowsFieldNumber;
const int Visual::kTransparencyFieldNumber;
const int Visual::kLaserRetroFieldNumber;
const int Visual::kPoseFieldNumber;
const int Visual::kGeometryFieldNumber;
const int Visual::kMaterialFieldNumber;
const int Visual::kVisibleFieldNumber;
const int Visual::kDeleteMeFieldNumber;
const int Visual::kIsStaticFieldNumber;
const int Visual::kPluginFieldNumber;
const int Visual::kScaleFieldNumber;
const int Visual::kMetaFieldNumber;
const int Visual::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Visual::Visual()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2fvisual_2eproto::scc_info_Visual.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.Visual)
}
Visual::Visual(const Visual& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      plugin_(from.plugin_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  parent_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent_name().size() > 0) {
    parent_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_name_);
  }
  if (from.has_header()) {
    header_ = new ::gz::msgs::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_pose()) {
    pose_ = new ::gz::msgs::Pose(*from.pose_);
  } else {
    pose_ = NULL;
  }
  if (from.has_geometry()) {
    geometry_ = new ::gz::msgs::Geometry(*from.geometry_);
  } else {
    geometry_ = NULL;
  }
  if (from.has_material()) {
    material_ = new ::gz::msgs::Material(*from.material_);
  } else {
    material_ = NULL;
  }
  if (from.has_scale()) {
    scale_ = new ::gz::msgs::Vector3d(*from.scale_);
  } else {
    scale_ = NULL;
  }
  if (from.has_meta()) {
    meta_ = new ::gz::msgs::Visual_Meta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:gz.msgs.Visual)
}

void Visual::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&header_)) + sizeof(type_));
}

Visual::~Visual() {
  // @@protoc_insertion_point(destructor:gz.msgs.Visual)
  SharedDtor();
}

void Visual::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete pose_;
  if (this != internal_default_instance()) delete geometry_;
  if (this != internal_default_instance()) delete material_;
  if (this != internal_default_instance()) delete scale_;
  if (this != internal_default_instance()) delete meta_;
}

void Visual::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Visual::descriptor() {
  ::protobuf_gz_2fmsgs_2fvisual_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fvisual_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Visual& Visual::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2fvisual_2eproto::scc_info_Visual.base);
  return *internal_default_instance();
}


void Visual::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.Visual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plugin_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
  if (GetArenaNoVirtual() == NULL && geometry_ != NULL) {
    delete geometry_;
  }
  geometry_ = NULL;
  if (GetArenaNoVirtual() == NULL && material_ != NULL) {
    delete material_;
  }
  material_ = NULL;
  if (GetArenaNoVirtual() == NULL && scale_ != NULL) {
    delete scale_;
  }
  scale_ = NULL;
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool Visual::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.Visual)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gz.msgs.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.Visual.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent_name().data(), static_cast<int>(this->parent_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.Visual.parent_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 parent_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &parent_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool cast_shadows = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cast_shadows_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double transparency = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u /* 57 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &transparency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double laser_retro = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(65u /* 65 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &laser_retro_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Pose pose = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Geometry geometry = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_geometry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Material material = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_material()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool visible = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &visible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool delete_me = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &delete_me_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool is_static = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_static_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gz.msgs.Plugin plugin = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_plugin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Vector3d scale = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scale()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Visual.Meta meta = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Visual.Type type = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::gz::msgs::Visual_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.Visual)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.Visual)
  return false;
#undef DO_
}

void Visual::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.Visual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Visual.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // uint32 id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->id(), output);
  }

  // string parent_name = 4;
  if (this->parent_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_name().data(), static_cast<int>(this->parent_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Visual.parent_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->parent_name(), output);
  }

  // uint32 parent_id = 5;
  if (this->parent_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->parent_id(), output);
  }

  // bool cast_shadows = 6;
  if (this->cast_shadows() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->cast_shadows(), output);
  }

  // double transparency = 7;
  if (this->transparency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->transparency(), output);
  }

  // double laser_retro = 8;
  if (this->laser_retro() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(8, this->laser_retro(), output);
  }

  // .gz.msgs.Pose pose = 9;
  if (this->has_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_pose(), output);
  }

  // .gz.msgs.Geometry geometry = 10;
  if (this->has_geometry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_geometry(), output);
  }

  // .gz.msgs.Material material = 11;
  if (this->has_material()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_material(), output);
  }

  // bool visible = 12;
  if (this->visible() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->visible(), output);
  }

  // bool delete_me = 13;
  if (this->delete_me() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->delete_me(), output);
  }

  // bool is_static = 14;
  if (this->is_static() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->is_static(), output);
  }

  // repeated .gz.msgs.Plugin plugin = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plugin_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->plugin(static_cast<int>(i)),
      output);
  }

  // .gz.msgs.Vector3d scale = 16;
  if (this->has_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->_internal_scale(), output);
  }

  // .gz.msgs.Visual.Meta meta = 17;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_meta(), output);
  }

  // .gz.msgs.Visual.Type type = 18;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      18, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.Visual)
}

::google::protobuf::uint8* Visual::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.Visual)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Visual.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // uint32 id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->id(), target);
  }

  // string parent_name = 4;
  if (this->parent_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent_name().data(), static_cast<int>(this->parent_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Visual.parent_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->parent_name(), target);
  }

  // uint32 parent_id = 5;
  if (this->parent_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->parent_id(), target);
  }

  // bool cast_shadows = 6;
  if (this->cast_shadows() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->cast_shadows(), target);
  }

  // double transparency = 7;
  if (this->transparency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->transparency(), target);
  }

  // double laser_retro = 8;
  if (this->laser_retro() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(8, this->laser_retro(), target);
  }

  // .gz.msgs.Pose pose = 9;
  if (this->has_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_pose(), deterministic, target);
  }

  // .gz.msgs.Geometry geometry = 10;
  if (this->has_geometry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_geometry(), deterministic, target);
  }

  // .gz.msgs.Material material = 11;
  if (this->has_material()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_material(), deterministic, target);
  }

  // bool visible = 12;
  if (this->visible() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->visible(), target);
  }

  // bool delete_me = 13;
  if (this->delete_me() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->delete_me(), target);
  }

  // bool is_static = 14;
  if (this->is_static() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->is_static(), target);
  }

  // repeated .gz.msgs.Plugin plugin = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->plugin_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->plugin(static_cast<int>(i)), deterministic, target);
  }

  // .gz.msgs.Vector3d scale = 16;
  if (this->has_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16, this->_internal_scale(), deterministic, target);
  }

  // .gz.msgs.Visual.Meta meta = 17;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_meta(), deterministic, target);
  }

  // .gz.msgs.Visual.Type type = 18;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      18, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.Visual)
  return target;
}

size_t Visual::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.Visual)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gz.msgs.Plugin plugin = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->plugin_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->plugin(static_cast<int>(i)));
    }
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string parent_name = 4;
  if (this->parent_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent_name());
  }

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .gz.msgs.Pose pose = 9;
  if (this->has_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pose_);
  }

  // .gz.msgs.Geometry geometry = 10;
  if (this->has_geometry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *geometry_);
  }

  // .gz.msgs.Material material = 11;
  if (this->has_material()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *material_);
  }

  // .gz.msgs.Vector3d scale = 16;
  if (this->has_scale()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scale_);
  }

  // .gz.msgs.Visual.Meta meta = 17;
  if (this->has_meta()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // uint32 id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  // uint32 parent_id = 5;
  if (this->parent_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->parent_id());
  }

  // double transparency = 7;
  if (this->transparency() != 0) {
    total_size += 1 + 8;
  }

  // double laser_retro = 8;
  if (this->laser_retro() != 0) {
    total_size += 1 + 8;
  }

  // bool cast_shadows = 6;
  if (this->cast_shadows() != 0) {
    total_size += 1 + 1;
  }

  // bool visible = 12;
  if (this->visible() != 0) {
    total_size += 1 + 1;
  }

  // bool delete_me = 13;
  if (this->delete_me() != 0) {
    total_size += 1 + 1;
  }

  // bool is_static = 14;
  if (this->is_static() != 0) {
    total_size += 1 + 1;
  }

  // .gz.msgs.Visual.Type type = 18;
  if (this->type() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Visual::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.Visual)
  GOOGLE_DCHECK_NE(&from, this);
  const Visual* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Visual>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.Visual)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.Visual)
    MergeFrom(*source);
  }
}

void Visual::MergeFrom(const Visual& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.Visual)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  plugin_.MergeFrom(from.plugin_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.parent_name().size() > 0) {

    parent_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_name_);
  }
  if (from.has_header()) {
    mutable_header()->::gz::msgs::Header::MergeFrom(from.header());
  }
  if (from.has_pose()) {
    mutable_pose()->::gz::msgs::Pose::MergeFrom(from.pose());
  }
  if (from.has_geometry()) {
    mutable_geometry()->::gz::msgs::Geometry::MergeFrom(from.geometry());
  }
  if (from.has_material()) {
    mutable_material()->::gz::msgs::Material::MergeFrom(from.material());
  }
  if (from.has_scale()) {
    mutable_scale()->::gz::msgs::Vector3d::MergeFrom(from.scale());
  }
  if (from.has_meta()) {
    mutable_meta()->::gz::msgs::Visual_Meta::MergeFrom(from.meta());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.parent_id() != 0) {
    set_parent_id(from.parent_id());
  }
  if (from.transparency() != 0) {
    set_transparency(from.transparency());
  }
  if (from.laser_retro() != 0) {
    set_laser_retro(from.laser_retro());
  }
  if (from.cast_shadows() != 0) {
    set_cast_shadows(from.cast_shadows());
  }
  if (from.visible() != 0) {
    set_visible(from.visible());
  }
  if (from.delete_me() != 0) {
    set_delete_me(from.delete_me());
  }
  if (from.is_static() != 0) {
    set_is_static(from.is_static());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Visual::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.Visual)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Visual::CopyFrom(const Visual& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.Visual)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Visual::IsInitialized() const {
  return true;
}

void Visual::Swap(Visual* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Visual::InternalSwap(Visual* other) {
  using std::swap;
  CastToBase(&plugin_)->InternalSwap(CastToBase(&other->plugin_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_name_.Swap(&other->parent_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(header_, other->header_);
  swap(pose_, other->pose_);
  swap(geometry_, other->geometry_);
  swap(material_, other->material_);
  swap(scale_, other->scale_);
  swap(meta_, other->meta_);
  swap(id_, other->id_);
  swap(parent_id_, other->parent_id_);
  swap(transparency_, other->transparency_);
  swap(laser_retro_, other->laser_retro_);
  swap(cast_shadows_, other->cast_shadows_);
  swap(visible_, other->visible_);
  swap(delete_me_, other->delete_me_);
  swap(is_static_, other->is_static_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Visual::GetMetadata() const {
  protobuf_gz_2fmsgs_2fvisual_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fvisual_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgs
}  // namespace gz
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::Visual_Meta* Arena::CreateMaybeMessage< ::gz::msgs::Visual_Meta >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::Visual_Meta >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::Visual* Arena::CreateMaybeMessage< ::gz::msgs::Visual >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::Visual >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
