// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gz/msgs/marker.proto

#include "gz/msgs/marker.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
#include "gz/msgs/Factory.hh"
GZ_REGISTER_STATIC_MSG("gz_msgs.Marker", Marker)
// @@protoc_insertion_point(includes)

namespace protobuf_gz_2fmsgs_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fheader_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Header;
}  // namespace protobuf_gz_2fmsgs_2fheader_2eproto
namespace protobuf_gz_2fmsgs_2fmaterial_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fmaterial_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Material;
}  // namespace protobuf_gz_2fmsgs_2fmaterial_2eproto
namespace protobuf_gz_2fmsgs_2fpose_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fpose_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Pose;
}  // namespace protobuf_gz_2fmsgs_2fpose_2eproto
namespace protobuf_gz_2fmsgs_2ftime_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2ftime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Time;
}  // namespace protobuf_gz_2fmsgs_2ftime_2eproto
namespace protobuf_gz_2fmsgs_2fvector3d_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fvector3d_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Vector3d;
}  // namespace protobuf_gz_2fmsgs_2fvector3d_2eproto
namespace gz {
namespace msgs {
class MarkerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Marker>
      _instance;
} _Marker_default_instance_;
}  // namespace msgs
}  // namespace gz
namespace protobuf_gz_2fmsgs_2fmarker_2eproto {
static void InitDefaultsMarker() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_Marker_default_instance_;
    new (ptr) ::gz::msgs::Marker();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::Marker::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<5> scc_info_Marker =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsMarker}, {
      &protobuf_gz_2fmsgs_2fheader_2eproto::scc_info_Header.base,
      &protobuf_gz_2fmsgs_2ftime_2eproto::scc_info_Time.base,
      &protobuf_gz_2fmsgs_2fpose_2eproto::scc_info_Pose.base,
      &protobuf_gz_2fmsgs_2fvector3d_2eproto::scc_info_Vector3d.base,
      &protobuf_gz_2fmsgs_2fmaterial_2eproto::scc_info_Material.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Marker.base);
}

::google::protobuf::Metadata file_level_metadata[1];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, ns_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, layer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, lifetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, pose_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, material_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, visibility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::Marker, materials_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gz::msgs::Marker)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_Marker_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "gz/msgs/marker.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024gz/msgs/marker.proto\022\007gz.msgs\032\022gz/msgs"
      "/time.proto\032\022gz/msgs/pose.proto\032\026gz/msgs"
      "/vector3d.proto\032\026gz/msgs/material.proto\032"
      "\024gz/msgs/header.proto\"\363\005\n\006Marker\022\037\n\006head"
      "er\030\001 \001(\0132\017.gz.msgs.Header\022&\n\006action\030\002 \001("
      "\0162\026.gz.msgs.Marker.Action\022\n\n\002ns\030\003 \001(\t\022\n\n"
      "\002id\030\004 \001(\004\022\r\n\005layer\030\005 \001(\005\022\"\n\004type\030\006 \001(\0162\024"
      ".gz.msgs.Marker.Type\022\037\n\010lifetime\030\007 \001(\0132\r"
      ".gz.msgs.Time\022\033\n\004pose\030\010 \001(\0132\r.gz.msgs.Po"
      "se\022 \n\005scale\030\t \001(\0132\021.gz.msgs.Vector3d\022#\n\010"
      "material\030\n \001(\0132\021.gz.msgs.Material\022 \n\005poi"
      "nt\030\013 \003(\0132\021.gz.msgs.Vector3d\022\014\n\004text\030\014 \001("
      "\t\022\016\n\006parent\030\r \001(\t\022.\n\nvisibility\030\016 \001(\0162\032."
      "gz.msgs.Marker.Visibility\022$\n\tmaterials\030\017"
      " \003(\0132\021.gz.msgs.Material\"\334\001\n\004Type\022\010\n\004NONE"
      "\020\000\022\007\n\003BOX\020\001\022\014\n\010CYLINDER\020\002\022\r\n\tLINE_LIST\020\004"
      "\022\016\n\nLINE_STRIP\020\003\022\n\n\006POINTS\020\005\022\n\n\006SPHERE\020\006"
      "\022\010\n\004TEXT\020\007\022\020\n\014TRIANGLE_FAN\020\010\022\021\n\rTRIANGLE"
      "_LIST\020\t\022\022\n\016TRIANGLE_STRIP\020\n\022\010\n\004CONE\020\013\022\t\n"
      "\005ARROW\020\014\022\010\n\004AXIS\020\r\022\013\n\007CAPSULE\020\016\022\r\n\tELLIP"
      "SOID\020\017\"\036\n\nVisibility\022\007\n\003GUI\020\000\022\007\n\003ALL\020\001\";"
      "\n\006Action\022\016\n\nADD_MODIFY\020\000\022\021\n\rDELETE_MARKE"
      "R\020\001\022\016\n\nDELETE_ALL\020\002B\033\n\013com.gz.msgsB\014Mark"
      "erProtosb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 936);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gz/msgs/marker.proto", &protobuf_RegisterTypes);
  ::protobuf_gz_2fmsgs_2ftime_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2fpose_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2fvector3d_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2fmaterial_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2fheader_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gz_2fmsgs_2fmarker_2eproto
namespace gz {
namespace msgs {
const ::google::protobuf::EnumDescriptor* Marker_Type_descriptor() {
  protobuf_gz_2fmsgs_2fmarker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gz_2fmsgs_2fmarker_2eproto::file_level_enum_descriptors[0];
}
bool Marker_Type_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Marker_Type Marker::NONE;
const Marker_Type Marker::BOX;
const Marker_Type Marker::CYLINDER;
const Marker_Type Marker::LINE_LIST;
const Marker_Type Marker::LINE_STRIP;
const Marker_Type Marker::POINTS;
const Marker_Type Marker::SPHERE;
const Marker_Type Marker::TEXT;
const Marker_Type Marker::TRIANGLE_FAN;
const Marker_Type Marker::TRIANGLE_LIST;
const Marker_Type Marker::TRIANGLE_STRIP;
const Marker_Type Marker::CONE;
const Marker_Type Marker::ARROW;
const Marker_Type Marker::AXIS;
const Marker_Type Marker::CAPSULE;
const Marker_Type Marker::ELLIPSOID;
const Marker_Type Marker::Type_MIN;
const Marker_Type Marker::Type_MAX;
const int Marker::Type_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Marker_Visibility_descriptor() {
  protobuf_gz_2fmsgs_2fmarker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gz_2fmsgs_2fmarker_2eproto::file_level_enum_descriptors[1];
}
bool Marker_Visibility_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Marker_Visibility Marker::GUI;
const Marker_Visibility Marker::ALL;
const Marker_Visibility Marker::Visibility_MIN;
const Marker_Visibility Marker::Visibility_MAX;
const int Marker::Visibility_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Marker_Action_descriptor() {
  protobuf_gz_2fmsgs_2fmarker_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gz_2fmsgs_2fmarker_2eproto::file_level_enum_descriptors[2];
}
bool Marker_Action_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Marker_Action Marker::ADD_MODIFY;
const Marker_Action Marker::DELETE_MARKER;
const Marker_Action Marker::DELETE_ALL;
const Marker_Action Marker::Action_MIN;
const Marker_Action Marker::Action_MAX;
const int Marker::Action_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Marker::InitAsDefaultInstance() {
  ::gz::msgs::_Marker_default_instance_._instance.get_mutable()->header_ = const_cast< ::gz::msgs::Header*>(
      ::gz::msgs::Header::internal_default_instance());
  ::gz::msgs::_Marker_default_instance_._instance.get_mutable()->lifetime_ = const_cast< ::gz::msgs::Time*>(
      ::gz::msgs::Time::internal_default_instance());
  ::gz::msgs::_Marker_default_instance_._instance.get_mutable()->pose_ = const_cast< ::gz::msgs::Pose*>(
      ::gz::msgs::Pose::internal_default_instance());
  ::gz::msgs::_Marker_default_instance_._instance.get_mutable()->scale_ = const_cast< ::gz::msgs::Vector3d*>(
      ::gz::msgs::Vector3d::internal_default_instance());
  ::gz::msgs::_Marker_default_instance_._instance.get_mutable()->material_ = const_cast< ::gz::msgs::Material*>(
      ::gz::msgs::Material::internal_default_instance());
}
void Marker::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
void Marker::clear_lifetime() {
  if (GetArenaNoVirtual() == NULL && lifetime_ != NULL) {
    delete lifetime_;
  }
  lifetime_ = NULL;
}
void Marker::clear_pose() {
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
}
void Marker::clear_scale() {
  if (GetArenaNoVirtual() == NULL && scale_ != NULL) {
    delete scale_;
  }
  scale_ = NULL;
}
void Marker::clear_material() {
  if (GetArenaNoVirtual() == NULL && material_ != NULL) {
    delete material_;
  }
  material_ = NULL;
}
void Marker::clear_point() {
  point_.Clear();
}
void Marker::clear_materials() {
  materials_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Marker::kHeaderFieldNumber;
const int Marker::kActionFieldNumber;
const int Marker::kNsFieldNumber;
const int Marker::kIdFieldNumber;
const int Marker::kLayerFieldNumber;
const int Marker::kTypeFieldNumber;
const int Marker::kLifetimeFieldNumber;
const int Marker::kPoseFieldNumber;
const int Marker::kScaleFieldNumber;
const int Marker::kMaterialFieldNumber;
const int Marker::kPointFieldNumber;
const int Marker::kTextFieldNumber;
const int Marker::kParentFieldNumber;
const int Marker::kVisibilityFieldNumber;
const int Marker::kMaterialsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Marker::Marker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2fmarker_2eproto::scc_info_Marker.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.Marker)
}
Marker::Marker(const Marker& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      point_(from.point_),
      materials_(from.materials_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ns_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ns().size() > 0) {
    ns_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ns_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent().size() > 0) {
    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_header()) {
    header_ = new ::gz::msgs::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_lifetime()) {
    lifetime_ = new ::gz::msgs::Time(*from.lifetime_);
  } else {
    lifetime_ = NULL;
  }
  if (from.has_pose()) {
    pose_ = new ::gz::msgs::Pose(*from.pose_);
  } else {
    pose_ = NULL;
  }
  if (from.has_scale()) {
    scale_ = new ::gz::msgs::Vector3d(*from.scale_);
  } else {
    scale_ = NULL;
  }
  if (from.has_material()) {
    material_ = new ::gz::msgs::Material(*from.material_);
  } else {
    material_ = NULL;
  }
  ::memcpy(&action_, &from.action_,
    static_cast<size_t>(reinterpret_cast<char*>(&visibility_) -
    reinterpret_cast<char*>(&action_)) + sizeof(visibility_));
  // @@protoc_insertion_point(copy_constructor:gz.msgs.Marker)
}

void Marker::SharedCtor() {
  ns_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visibility_) -
      reinterpret_cast<char*>(&header_)) + sizeof(visibility_));
}

Marker::~Marker() {
  // @@protoc_insertion_point(destructor:gz.msgs.Marker)
  SharedDtor();
}

void Marker::SharedDtor() {
  ns_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete lifetime_;
  if (this != internal_default_instance()) delete pose_;
  if (this != internal_default_instance()) delete scale_;
  if (this != internal_default_instance()) delete material_;
}

void Marker::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Marker::descriptor() {
  ::protobuf_gz_2fmsgs_2fmarker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fmarker_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Marker& Marker::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2fmarker_2eproto::scc_info_Marker.base);
  return *internal_default_instance();
}


void Marker::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.Marker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  point_.Clear();
  materials_.Clear();
  ns_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && lifetime_ != NULL) {
    delete lifetime_;
  }
  lifetime_ = NULL;
  if (GetArenaNoVirtual() == NULL && pose_ != NULL) {
    delete pose_;
  }
  pose_ = NULL;
  if (GetArenaNoVirtual() == NULL && scale_ != NULL) {
    delete scale_;
  }
  scale_ = NULL;
  if (GetArenaNoVirtual() == NULL && material_ != NULL) {
    delete material_;
  }
  material_ = NULL;
  ::memset(&action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&visibility_) -
      reinterpret_cast<char*>(&action_)) + sizeof(visibility_));
  _internal_metadata_.Clear();
}

bool Marker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.Marker)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gz.msgs.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Marker.Action action = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_action(static_cast< ::gz::msgs::Marker_Action >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ns = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ns()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ns().data(), static_cast<int>(this->ns().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.Marker.ns"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 layer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &layer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Marker.Type type = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::gz::msgs::Marker_Type >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Time lifetime = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lifetime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Pose pose = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pose()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Vector3d scale = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scale()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Material material = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_material()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gz.msgs.Vector3d point = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.Marker.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string parent = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_parent()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->parent().data(), static_cast<int>(this->parent().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.Marker.parent"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Marker.Visibility visibility = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_visibility(static_cast< ::gz::msgs::Marker_Visibility >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gz.msgs.Material materials = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_materials()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.Marker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.Marker)
  return false;
#undef DO_
}

void Marker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.Marker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .gz.msgs.Marker.Action action = 2;
  if (this->action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->action(), output);
  }

  // string ns = 3;
  if (this->ns().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ns().data(), static_cast<int>(this->ns().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Marker.ns");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ns(), output);
  }

  // uint64 id = 4;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->id(), output);
  }

  // int32 layer = 5;
  if (this->layer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->layer(), output);
  }

  // .gz.msgs.Marker.Type type = 6;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->type(), output);
  }

  // .gz.msgs.Time lifetime = 7;
  if (this->has_lifetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_lifetime(), output);
  }

  // .gz.msgs.Pose pose = 8;
  if (this->has_pose()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_pose(), output);
  }

  // .gz.msgs.Vector3d scale = 9;
  if (this->has_scale()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_scale(), output);
  }

  // .gz.msgs.Material material = 10;
  if (this->has_material()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_material(), output);
  }

  // repeated .gz.msgs.Vector3d point = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->point(static_cast<int>(i)),
      output);
  }

  // string text = 12;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Marker.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->text(), output);
  }

  // string parent = 13;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Marker.parent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->parent(), output);
  }

  // .gz.msgs.Marker.Visibility visibility = 14;
  if (this->visibility() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      14, this->visibility(), output);
  }

  // repeated .gz.msgs.Material materials = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->materials_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->materials(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.Marker)
}

::google::protobuf::uint8* Marker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.Marker)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .gz.msgs.Marker.Action action = 2;
  if (this->action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->action(), target);
  }

  // string ns = 3;
  if (this->ns().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ns().data(), static_cast<int>(this->ns().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Marker.ns");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ns(), target);
  }

  // uint64 id = 4;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->id(), target);
  }

  // int32 layer = 5;
  if (this->layer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->layer(), target);
  }

  // .gz.msgs.Marker.Type type = 6;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->type(), target);
  }

  // .gz.msgs.Time lifetime = 7;
  if (this->has_lifetime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_lifetime(), deterministic, target);
  }

  // .gz.msgs.Pose pose = 8;
  if (this->has_pose()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_pose(), deterministic, target);
  }

  // .gz.msgs.Vector3d scale = 9;
  if (this->has_scale()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_scale(), deterministic, target);
  }

  // .gz.msgs.Material material = 10;
  if (this->has_material()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_material(), deterministic, target);
  }

  // repeated .gz.msgs.Vector3d point = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->point(static_cast<int>(i)), deterministic, target);
  }

  // string text = 12;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Marker.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->text(), target);
  }

  // string parent = 13;
  if (this->parent().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->parent().data(), static_cast<int>(this->parent().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.Marker.parent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->parent(), target);
  }

  // .gz.msgs.Marker.Visibility visibility = 14;
  if (this->visibility() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      14, this->visibility(), target);
  }

  // repeated .gz.msgs.Material materials = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->materials_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->materials(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.Marker)
  return target;
}

size_t Marker::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.Marker)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gz.msgs.Vector3d point = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->point(static_cast<int>(i)));
    }
  }

  // repeated .gz.msgs.Material materials = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->materials_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->materials(static_cast<int>(i)));
    }
  }

  // string ns = 3;
  if (this->ns().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ns());
  }

  // string text = 12;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string parent = 13;
  if (this->parent().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->parent());
  }

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .gz.msgs.Time lifetime = 7;
  if (this->has_lifetime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lifetime_);
  }

  // .gz.msgs.Pose pose = 8;
  if (this->has_pose()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pose_);
  }

  // .gz.msgs.Vector3d scale = 9;
  if (this->has_scale()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scale_);
  }

  // .gz.msgs.Material material = 10;
  if (this->has_material()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *material_);
  }

  // .gz.msgs.Marker.Action action = 2;
  if (this->action() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->action());
  }

  // int32 layer = 5;
  if (this->layer() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->layer());
  }

  // uint64 id = 4;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // .gz.msgs.Marker.Type type = 6;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // .gz.msgs.Marker.Visibility visibility = 14;
  if (this->visibility() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->visibility());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Marker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.Marker)
  GOOGLE_DCHECK_NE(&from, this);
  const Marker* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Marker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.Marker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.Marker)
    MergeFrom(*source);
  }
}

void Marker::MergeFrom(const Marker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.Marker)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_.MergeFrom(from.point_);
  materials_.MergeFrom(from.materials_);
  if (from.ns().size() > 0) {

    ns_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ns_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.parent().size() > 0) {

    parent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_);
  }
  if (from.has_header()) {
    mutable_header()->::gz::msgs::Header::MergeFrom(from.header());
  }
  if (from.has_lifetime()) {
    mutable_lifetime()->::gz::msgs::Time::MergeFrom(from.lifetime());
  }
  if (from.has_pose()) {
    mutable_pose()->::gz::msgs::Pose::MergeFrom(from.pose());
  }
  if (from.has_scale()) {
    mutable_scale()->::gz::msgs::Vector3d::MergeFrom(from.scale());
  }
  if (from.has_material()) {
    mutable_material()->::gz::msgs::Material::MergeFrom(from.material());
  }
  if (from.action() != 0) {
    set_action(from.action());
  }
  if (from.layer() != 0) {
    set_layer(from.layer());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.visibility() != 0) {
    set_visibility(from.visibility());
  }
}

void Marker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.Marker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Marker::CopyFrom(const Marker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.Marker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Marker::IsInitialized() const {
  return true;
}

void Marker::Swap(Marker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Marker::InternalSwap(Marker* other) {
  using std::swap;
  CastToBase(&point_)->InternalSwap(CastToBase(&other->point_));
  CastToBase(&materials_)->InternalSwap(CastToBase(&other->materials_));
  ns_.Swap(&other->ns_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_.Swap(&other->parent_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(header_, other->header_);
  swap(lifetime_, other->lifetime_);
  swap(pose_, other->pose_);
  swap(scale_, other->scale_);
  swap(material_, other->material_);
  swap(action_, other->action_);
  swap(layer_, other->layer_);
  swap(id_, other->id_);
  swap(type_, other->type_);
  swap(visibility_, other->visibility_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Marker::GetMetadata() const {
  protobuf_gz_2fmsgs_2fmarker_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fmarker_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgs
}  // namespace gz
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::Marker* Arena::CreateMaybeMessage< ::gz::msgs::Marker >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::Marker >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
