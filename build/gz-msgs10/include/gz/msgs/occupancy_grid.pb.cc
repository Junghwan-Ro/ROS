// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gz/msgs/occupancy_grid.proto

#include "gz/msgs/occupancy_grid.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
#include "gz/msgs/Factory.hh"
GZ_REGISTER_STATIC_MSG("gz_msgs.OccupancyGrid", OccupancyGrid)
// @@protoc_insertion_point(includes)

namespace protobuf_gz_2fmsgs_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fheader_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Header;
}  // namespace protobuf_gz_2fmsgs_2fheader_2eproto
namespace protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_OccupancyGrid_MapMetaInfo;
}  // namespace protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto
namespace protobuf_gz_2fmsgs_2fpose_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fpose_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Pose;
}  // namespace protobuf_gz_2fmsgs_2fpose_2eproto
namespace protobuf_gz_2fmsgs_2ftime_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2ftime_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Time;
}  // namespace protobuf_gz_2fmsgs_2ftime_2eproto
namespace gz {
namespace msgs {
class OccupancyGrid_MapMetaInfoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OccupancyGrid_MapMetaInfo>
      _instance;
} _OccupancyGrid_MapMetaInfo_default_instance_;
class OccupancyGridDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OccupancyGrid>
      _instance;
} _OccupancyGrid_default_instance_;
}  // namespace msgs
}  // namespace gz
namespace protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto {
static void InitDefaultsOccupancyGrid_MapMetaInfo() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_OccupancyGrid_MapMetaInfo_default_instance_;
    new (ptr) ::gz::msgs::OccupancyGrid_MapMetaInfo();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::OccupancyGrid_MapMetaInfo::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<2> scc_info_OccupancyGrid_MapMetaInfo =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsOccupancyGrid_MapMetaInfo}, {
      &protobuf_gz_2fmsgs_2ftime_2eproto::scc_info_Time.base,
      &protobuf_gz_2fmsgs_2fpose_2eproto::scc_info_Pose.base,}};

static void InitDefaultsOccupancyGrid() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_OccupancyGrid_default_instance_;
    new (ptr) ::gz::msgs::OccupancyGrid();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::OccupancyGrid::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<2> scc_info_OccupancyGrid =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsOccupancyGrid}, {
      &protobuf_gz_2fmsgs_2fheader_2eproto::scc_info_Header.base,
      &protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto::scc_info_OccupancyGrid_MapMetaInfo.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_OccupancyGrid_MapMetaInfo.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OccupancyGrid.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::OccupancyGrid_MapMetaInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::OccupancyGrid_MapMetaInfo, map_load_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::OccupancyGrid_MapMetaInfo, resolution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::OccupancyGrid_MapMetaInfo, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::OccupancyGrid_MapMetaInfo, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::OccupancyGrid_MapMetaInfo, origin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::OccupancyGrid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::OccupancyGrid, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::OccupancyGrid, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::OccupancyGrid, data_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gz::msgs::OccupancyGrid_MapMetaInfo)},
  { 10, -1, sizeof(::gz::msgs::OccupancyGrid)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_OccupancyGrid_MapMetaInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_OccupancyGrid_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "gz/msgs/occupancy_grid.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034gz/msgs/occupancy_grid.proto\022\007gz.msgs\032"
      "\024gz/msgs/header.proto\032\022gz/msgs/pose.prot"
      "o\032\022gz/msgs/time.proto\"\370\001\n\rOccupancyGrid\022"
      "\037\n\006header\030\001 \001(\0132\017.gz.msgs.Header\0220\n\004info"
      "\030\002 \001(\0132\".gz.msgs.OccupancyGrid.MapMetaIn"
      "fo\022\014\n\004data\030\003 \001(\014\032\205\001\n\013MapMetaInfo\022$\n\rmap_"
      "load_time\030\001 \001(\0132\r.gz.msgs.Time\022\022\n\nresolu"
      "tion\030\002 \001(\001\022\r\n\005width\030\003 \001(\r\022\016\n\006height\030\004 \001("
      "\r\022\035\n\006origin\030\005 \001(\0132\r.gz.msgs.PoseB\"\n\013com."
      "gz.msgsB\023OccpuancyGridProtosb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 396);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gz/msgs/occupancy_grid.proto", &protobuf_RegisterTypes);
  ::protobuf_gz_2fmsgs_2fheader_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2fpose_2eproto::AddDescriptors();
  ::protobuf_gz_2fmsgs_2ftime_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto
namespace gz {
namespace msgs {

// ===================================================================

void OccupancyGrid_MapMetaInfo::InitAsDefaultInstance() {
  ::gz::msgs::_OccupancyGrid_MapMetaInfo_default_instance_._instance.get_mutable()->map_load_time_ = const_cast< ::gz::msgs::Time*>(
      ::gz::msgs::Time::internal_default_instance());
  ::gz::msgs::_OccupancyGrid_MapMetaInfo_default_instance_._instance.get_mutable()->origin_ = const_cast< ::gz::msgs::Pose*>(
      ::gz::msgs::Pose::internal_default_instance());
}
void OccupancyGrid_MapMetaInfo::clear_map_load_time() {
  if (GetArenaNoVirtual() == NULL && map_load_time_ != NULL) {
    delete map_load_time_;
  }
  map_load_time_ = NULL;
}
void OccupancyGrid_MapMetaInfo::clear_origin() {
  if (GetArenaNoVirtual() == NULL && origin_ != NULL) {
    delete origin_;
  }
  origin_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OccupancyGrid_MapMetaInfo::kMapLoadTimeFieldNumber;
const int OccupancyGrid_MapMetaInfo::kResolutionFieldNumber;
const int OccupancyGrid_MapMetaInfo::kWidthFieldNumber;
const int OccupancyGrid_MapMetaInfo::kHeightFieldNumber;
const int OccupancyGrid_MapMetaInfo::kOriginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OccupancyGrid_MapMetaInfo::OccupancyGrid_MapMetaInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto::scc_info_OccupancyGrid_MapMetaInfo.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.OccupancyGrid.MapMetaInfo)
}
OccupancyGrid_MapMetaInfo::OccupancyGrid_MapMetaInfo(const OccupancyGrid_MapMetaInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_map_load_time()) {
    map_load_time_ = new ::gz::msgs::Time(*from.map_load_time_);
  } else {
    map_load_time_ = NULL;
  }
  if (from.has_origin()) {
    origin_ = new ::gz::msgs::Pose(*from.origin_);
  } else {
    origin_ = NULL;
  }
  ::memcpy(&resolution_, &from.resolution_,
    static_cast<size_t>(reinterpret_cast<char*>(&height_) -
    reinterpret_cast<char*>(&resolution_)) + sizeof(height_));
  // @@protoc_insertion_point(copy_constructor:gz.msgs.OccupancyGrid.MapMetaInfo)
}

void OccupancyGrid_MapMetaInfo::SharedCtor() {
  ::memset(&map_load_time_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&map_load_time_)) + sizeof(height_));
}

OccupancyGrid_MapMetaInfo::~OccupancyGrid_MapMetaInfo() {
  // @@protoc_insertion_point(destructor:gz.msgs.OccupancyGrid.MapMetaInfo)
  SharedDtor();
}

void OccupancyGrid_MapMetaInfo::SharedDtor() {
  if (this != internal_default_instance()) delete map_load_time_;
  if (this != internal_default_instance()) delete origin_;
}

void OccupancyGrid_MapMetaInfo::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OccupancyGrid_MapMetaInfo::descriptor() {
  ::protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OccupancyGrid_MapMetaInfo& OccupancyGrid_MapMetaInfo::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto::scc_info_OccupancyGrid_MapMetaInfo.base);
  return *internal_default_instance();
}


void OccupancyGrid_MapMetaInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.OccupancyGrid.MapMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && map_load_time_ != NULL) {
    delete map_load_time_;
  }
  map_load_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && origin_ != NULL) {
    delete origin_;
  }
  origin_ = NULL;
  ::memset(&resolution_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&resolution_)) + sizeof(height_));
  _internal_metadata_.Clear();
}

bool OccupancyGrid_MapMetaInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.OccupancyGrid.MapMetaInfo)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gz.msgs.Time map_load_time = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_map_load_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double resolution = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &resolution_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 width = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.Pose origin = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_origin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.OccupancyGrid.MapMetaInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.OccupancyGrid.MapMetaInfo)
  return false;
#undef DO_
}

void OccupancyGrid_MapMetaInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.OccupancyGrid.MapMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Time map_load_time = 1;
  if (this->has_map_load_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_map_load_time(), output);
  }

  // double resolution = 2;
  if (this->resolution() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->resolution(), output);
  }

  // uint32 width = 3;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->width(), output);
  }

  // uint32 height = 4;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->height(), output);
  }

  // .gz.msgs.Pose origin = 5;
  if (this->has_origin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_origin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.OccupancyGrid.MapMetaInfo)
}

::google::protobuf::uint8* OccupancyGrid_MapMetaInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.OccupancyGrid.MapMetaInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Time map_load_time = 1;
  if (this->has_map_load_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_map_load_time(), deterministic, target);
  }

  // double resolution = 2;
  if (this->resolution() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->resolution(), target);
  }

  // uint32 width = 3;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->width(), target);
  }

  // uint32 height = 4;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->height(), target);
  }

  // .gz.msgs.Pose origin = 5;
  if (this->has_origin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_origin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.OccupancyGrid.MapMetaInfo)
  return target;
}

size_t OccupancyGrid_MapMetaInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.OccupancyGrid.MapMetaInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .gz.msgs.Time map_load_time = 1;
  if (this->has_map_load_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *map_load_time_);
  }

  // .gz.msgs.Pose origin = 5;
  if (this->has_origin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *origin_);
  }

  // double resolution = 2;
  if (this->resolution() != 0) {
    total_size += 1 + 8;
  }

  // uint32 width = 3;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->width());
  }

  // uint32 height = 4;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OccupancyGrid_MapMetaInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.OccupancyGrid.MapMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const OccupancyGrid_MapMetaInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OccupancyGrid_MapMetaInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.OccupancyGrid.MapMetaInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.OccupancyGrid.MapMetaInfo)
    MergeFrom(*source);
  }
}

void OccupancyGrid_MapMetaInfo::MergeFrom(const OccupancyGrid_MapMetaInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.OccupancyGrid.MapMetaInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_map_load_time()) {
    mutable_map_load_time()->::gz::msgs::Time::MergeFrom(from.map_load_time());
  }
  if (from.has_origin()) {
    mutable_origin()->::gz::msgs::Pose::MergeFrom(from.origin());
  }
  if (from.resolution() != 0) {
    set_resolution(from.resolution());
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void OccupancyGrid_MapMetaInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.OccupancyGrid.MapMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OccupancyGrid_MapMetaInfo::CopyFrom(const OccupancyGrid_MapMetaInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.OccupancyGrid.MapMetaInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OccupancyGrid_MapMetaInfo::IsInitialized() const {
  return true;
}

void OccupancyGrid_MapMetaInfo::Swap(OccupancyGrid_MapMetaInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OccupancyGrid_MapMetaInfo::InternalSwap(OccupancyGrid_MapMetaInfo* other) {
  using std::swap;
  swap(map_load_time_, other->map_load_time_);
  swap(origin_, other->origin_);
  swap(resolution_, other->resolution_);
  swap(width_, other->width_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OccupancyGrid_MapMetaInfo::GetMetadata() const {
  protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OccupancyGrid::InitAsDefaultInstance() {
  ::gz::msgs::_OccupancyGrid_default_instance_._instance.get_mutable()->header_ = const_cast< ::gz::msgs::Header*>(
      ::gz::msgs::Header::internal_default_instance());
  ::gz::msgs::_OccupancyGrid_default_instance_._instance.get_mutable()->info_ = const_cast< ::gz::msgs::OccupancyGrid_MapMetaInfo*>(
      ::gz::msgs::OccupancyGrid_MapMetaInfo::internal_default_instance());
}
void OccupancyGrid::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OccupancyGrid::kHeaderFieldNumber;
const int OccupancyGrid::kInfoFieldNumber;
const int OccupancyGrid::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OccupancyGrid::OccupancyGrid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto::scc_info_OccupancyGrid.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.OccupancyGrid)
}
OccupancyGrid::OccupancyGrid(const OccupancyGrid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_header()) {
    header_ = new ::gz::msgs::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_info()) {
    info_ = new ::gz::msgs::OccupancyGrid_MapMetaInfo(*from.info_);
  } else {
    info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gz.msgs.OccupancyGrid)
}

void OccupancyGrid::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&info_) -
      reinterpret_cast<char*>(&header_)) + sizeof(info_));
}

OccupancyGrid::~OccupancyGrid() {
  // @@protoc_insertion_point(destructor:gz.msgs.OccupancyGrid)
  SharedDtor();
}

void OccupancyGrid::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete info_;
}

void OccupancyGrid::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OccupancyGrid::descriptor() {
  ::protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OccupancyGrid& OccupancyGrid::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto::scc_info_OccupancyGrid.base);
  return *internal_default_instance();
}


void OccupancyGrid::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.OccupancyGrid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
  _internal_metadata_.Clear();
}

bool OccupancyGrid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.OccupancyGrid)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gz.msgs.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gz.msgs.OccupancyGrid.MapMetaInfo info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.OccupancyGrid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.OccupancyGrid)
  return false;
#undef DO_
}

void OccupancyGrid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.OccupancyGrid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // .gz.msgs.OccupancyGrid.MapMetaInfo info = 2;
  if (this->has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_info(), output);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.OccupancyGrid)
}

::google::protobuf::uint8* OccupancyGrid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.OccupancyGrid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // .gz.msgs.OccupancyGrid.MapMetaInfo info = 2;
  if (this->has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_info(), deterministic, target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.OccupancyGrid)
  return target;
}

size_t OccupancyGrid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.OccupancyGrid)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .gz.msgs.OccupancyGrid.MapMetaInfo info = 2;
  if (this->has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OccupancyGrid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.OccupancyGrid)
  GOOGLE_DCHECK_NE(&from, this);
  const OccupancyGrid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OccupancyGrid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.OccupancyGrid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.OccupancyGrid)
    MergeFrom(*source);
  }
}

void OccupancyGrid::MergeFrom(const OccupancyGrid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.OccupancyGrid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_header()) {
    mutable_header()->::gz::msgs::Header::MergeFrom(from.header());
  }
  if (from.has_info()) {
    mutable_info()->::gz::msgs::OccupancyGrid_MapMetaInfo::MergeFrom(from.info());
  }
}

void OccupancyGrid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.OccupancyGrid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OccupancyGrid::CopyFrom(const OccupancyGrid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.OccupancyGrid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OccupancyGrid::IsInitialized() const {
  return true;
}

void OccupancyGrid::Swap(OccupancyGrid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OccupancyGrid::InternalSwap(OccupancyGrid* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(header_, other->header_);
  swap(info_, other->info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OccupancyGrid::GetMetadata() const {
  protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgs
}  // namespace gz
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::OccupancyGrid_MapMetaInfo* Arena::CreateMaybeMessage< ::gz::msgs::OccupancyGrid_MapMetaInfo >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::OccupancyGrid_MapMetaInfo >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::OccupancyGrid* Arena::CreateMaybeMessage< ::gz::msgs::OccupancyGrid >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::OccupancyGrid >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
