// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gz/msgs/log_control.proto

#include "gz/msgs/log_control.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
#include "gz/msgs/Factory.hh"
GZ_REGISTER_STATIC_MSG("gz_msgs.LogControl", LogControl)
// @@protoc_insertion_point(includes)

namespace protobuf_gz_2fmsgs_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fheader_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Header;
}  // namespace protobuf_gz_2fmsgs_2fheader_2eproto
namespace gz {
namespace msgs {
class LogControlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogControl>
      _instance;
} _LogControl_default_instance_;
}  // namespace msgs
}  // namespace gz
namespace protobuf_gz_2fmsgs_2flog_5fcontrol_2eproto {
static void InitDefaultsLogControl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_LogControl_default_instance_;
    new (ptr) ::gz::msgs::LogControl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::LogControl::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<1> scc_info_LogControl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsLogControl}, {
      &protobuf_gz_2fmsgs_2fheader_2eproto::scc_info_Header.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_LogControl.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::LogControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::LogControl, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::LogControl, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::LogControl, stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::LogControl, paused_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::LogControl, base_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::LogControl, encoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::LogControl, record_resources_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gz::msgs::LogControl)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_LogControl_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "gz/msgs/log_control.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031gz/msgs/log_control.proto\022\007gz.msgs\032\024gz"
      "/msgs/header.proto\"\231\001\n\nLogControl\022\037\n\006hea"
      "der\030\001 \001(\0132\017.gz.msgs.Header\022\r\n\005start\030\002 \001("
      "\010\022\014\n\004stop\030\003 \001(\010\022\016\n\006paused\030\004 \001(\010\022\021\n\tbase_"
      "path\030\005 \001(\t\022\020\n\010encoding\030\006 \001(\t\022\030\n\020record_r"
      "esources\030\007 \001(\tB\037\n\013com.gz.msgsB\020LogContro"
      "lProtosb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 255);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gz/msgs/log_control.proto", &protobuf_RegisterTypes);
  ::protobuf_gz_2fmsgs_2fheader_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gz_2fmsgs_2flog_5fcontrol_2eproto
namespace gz {
namespace msgs {

// ===================================================================

void LogControl::InitAsDefaultInstance() {
  ::gz::msgs::_LogControl_default_instance_._instance.get_mutable()->header_ = const_cast< ::gz::msgs::Header*>(
      ::gz::msgs::Header::internal_default_instance());
}
void LogControl::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogControl::kHeaderFieldNumber;
const int LogControl::kStartFieldNumber;
const int LogControl::kStopFieldNumber;
const int LogControl::kPausedFieldNumber;
const int LogControl::kBasePathFieldNumber;
const int LogControl::kEncodingFieldNumber;
const int LogControl::kRecordResourcesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogControl::LogControl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2flog_5fcontrol_2eproto::scc_info_LogControl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.LogControl)
}
LogControl::LogControl(const LogControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  base_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.base_path().size() > 0) {
    base_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_path_);
  }
  encoding_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.encoding().size() > 0) {
    encoding_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encoding_);
  }
  record_resources_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.record_resources().size() > 0) {
    record_resources_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_resources_);
  }
  if (from.has_header()) {
    header_ = new ::gz::msgs::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&start_, &from.start_,
    static_cast<size_t>(reinterpret_cast<char*>(&paused_) -
    reinterpret_cast<char*>(&start_)) + sizeof(paused_));
  // @@protoc_insertion_point(copy_constructor:gz.msgs.LogControl)
}

void LogControl::SharedCtor() {
  base_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encoding_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  record_resources_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&paused_) -
      reinterpret_cast<char*>(&header_)) + sizeof(paused_));
}

LogControl::~LogControl() {
  // @@protoc_insertion_point(destructor:gz.msgs.LogControl)
  SharedDtor();
}

void LogControl::SharedDtor() {
  base_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encoding_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  record_resources_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void LogControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogControl::descriptor() {
  ::protobuf_gz_2fmsgs_2flog_5fcontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2flog_5fcontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogControl& LogControl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2flog_5fcontrol_2eproto::scc_info_LogControl.base);
  return *internal_default_instance();
}


void LogControl::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.LogControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  base_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  encoding_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  record_resources_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&start_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&paused_) -
      reinterpret_cast<char*>(&start_)) + sizeof(paused_));
  _internal_metadata_.Clear();
}

bool LogControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.LogControl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gz.msgs.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stop = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool paused = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &paused_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string base_path = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_base_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->base_path().data(), static_cast<int>(this->base_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.LogControl.base_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string encoding = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_encoding()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->encoding().data(), static_cast<int>(this->encoding().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.LogControl.encoding"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string record_resources = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_record_resources()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->record_resources().data(), static_cast<int>(this->record_resources().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.LogControl.record_resources"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.LogControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.LogControl)
  return false;
#undef DO_
}

void LogControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.LogControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // bool start = 2;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->start(), output);
  }

  // bool stop = 3;
  if (this->stop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->stop(), output);
  }

  // bool paused = 4;
  if (this->paused() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->paused(), output);
  }

  // string base_path = 5;
  if (this->base_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_path().data(), static_cast<int>(this->base_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.LogControl.base_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->base_path(), output);
  }

  // string encoding = 6;
  if (this->encoding().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->encoding().data(), static_cast<int>(this->encoding().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.LogControl.encoding");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->encoding(), output);
  }

  // string record_resources = 7;
  if (this->record_resources().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->record_resources().data(), static_cast<int>(this->record_resources().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.LogControl.record_resources");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->record_resources(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.LogControl)
}

::google::protobuf::uint8* LogControl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.LogControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // bool start = 2;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->start(), target);
  }

  // bool stop = 3;
  if (this->stop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->stop(), target);
  }

  // bool paused = 4;
  if (this->paused() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->paused(), target);
  }

  // string base_path = 5;
  if (this->base_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->base_path().data(), static_cast<int>(this->base_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.LogControl.base_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->base_path(), target);
  }

  // string encoding = 6;
  if (this->encoding().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->encoding().data(), static_cast<int>(this->encoding().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.LogControl.encoding");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->encoding(), target);
  }

  // string record_resources = 7;
  if (this->record_resources().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->record_resources().data(), static_cast<int>(this->record_resources().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.LogControl.record_resources");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->record_resources(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.LogControl)
  return target;
}

size_t LogControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.LogControl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string base_path = 5;
  if (this->base_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->base_path());
  }

  // string encoding = 6;
  if (this->encoding().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->encoding());
  }

  // string record_resources = 7;
  if (this->record_resources().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->record_resources());
  }

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // bool start = 2;
  if (this->start() != 0) {
    total_size += 1 + 1;
  }

  // bool stop = 3;
  if (this->stop() != 0) {
    total_size += 1 + 1;
  }

  // bool paused = 4;
  if (this->paused() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.LogControl)
  GOOGLE_DCHECK_NE(&from, this);
  const LogControl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogControl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.LogControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.LogControl)
    MergeFrom(*source);
  }
}

void LogControl::MergeFrom(const LogControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.LogControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.base_path().size() > 0) {

    base_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.base_path_);
  }
  if (from.encoding().size() > 0) {

    encoding_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encoding_);
  }
  if (from.record_resources().size() > 0) {

    record_resources_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.record_resources_);
  }
  if (from.has_header()) {
    mutable_header()->::gz::msgs::Header::MergeFrom(from.header());
  }
  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.stop() != 0) {
    set_stop(from.stop());
  }
  if (from.paused() != 0) {
    set_paused(from.paused());
  }
}

void LogControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.LogControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogControl::CopyFrom(const LogControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.LogControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogControl::IsInitialized() const {
  return true;
}

void LogControl::Swap(LogControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogControl::InternalSwap(LogControl* other) {
  using std::swap;
  base_path_.Swap(&other->base_path_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  encoding_.Swap(&other->encoding_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  record_resources_.Swap(&other->record_resources_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(header_, other->header_);
  swap(start_, other->start_);
  swap(stop_, other->stop_);
  swap(paused_, other->paused_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogControl::GetMetadata() const {
  protobuf_gz_2fmsgs_2flog_5fcontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2flog_5fcontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgs
}  // namespace gz
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::LogControl* Arena::CreateMaybeMessage< ::gz::msgs::LogControl >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::LogControl >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
