// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gz/msgs/server_control.proto

#include "gz/msgs/server_control.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
#include "gz/msgs/Factory.hh"
GZ_REGISTER_STATIC_MSG("gz_msgs.ServerControl", ServerControl)
// @@protoc_insertion_point(includes)

namespace protobuf_gz_2fmsgs_2fheader_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fheader_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Header;
}  // namespace protobuf_gz_2fmsgs_2fheader_2eproto
namespace gz {
namespace msgs {
class ServerControlDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerControl>
      _instance;
} _ServerControl_default_instance_;
}  // namespace msgs
}  // namespace gz
namespace protobuf_gz_2fmsgs_2fserver_5fcontrol_2eproto {
static void InitDefaultsServerControl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gz::msgs::_ServerControl_default_instance_;
    new (ptr) ::gz::msgs::ServerControl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gz::msgs::ServerControl::InitAsDefaultInstance();
}

IGNITION_MSGS_VISIBLE ::google::protobuf::internal::SCCInfo<1> scc_info_ServerControl =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsServerControl}, {
      &protobuf_gz_2fmsgs_2fheader_2eproto::scc_info_Header.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_ServerControl.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::ServerControl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::ServerControl, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::ServerControl, save_world_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::ServerControl, save_filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::ServerControl, open_filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::ServerControl, new_world_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::ServerControl, stop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::ServerControl, clone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gz::msgs::ServerControl, new_port_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gz::msgs::ServerControl)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gz::msgs::_ServerControl_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "gz/msgs/server_control.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034gz/msgs/server_control.proto\022\007gz.msgs\032"
      "\024gz/msgs/header.proto\"\271\001\n\rServerControl\022"
      "\037\n\006header\030\001 \001(\0132\017.gz.msgs.Header\022\027\n\017save"
      "_world_name\030\002 \001(\t\022\025\n\rsave_filename\030\003 \001(\t"
      "\022\025\n\ropen_filename\030\004 \001(\t\022\021\n\tnew_world\030\005 \001"
      "(\010\022\014\n\004stop\030\006 \001(\010\022\r\n\005clone\030\007 \001(\010\022\020\n\010new_p"
      "ort\030\010 \001(\rB\"\n\013com.gz.msgsB\023ServerControlP"
      "rotosb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 293);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gz/msgs/server_control.proto", &protobuf_RegisterTypes);
  ::protobuf_gz_2fmsgs_2fheader_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_gz_2fmsgs_2fserver_5fcontrol_2eproto
namespace gz {
namespace msgs {

// ===================================================================

void ServerControl::InitAsDefaultInstance() {
  ::gz::msgs::_ServerControl_default_instance_._instance.get_mutable()->header_ = const_cast< ::gz::msgs::Header*>(
      ::gz::msgs::Header::internal_default_instance());
}
void ServerControl::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerControl::kHeaderFieldNumber;
const int ServerControl::kSaveWorldNameFieldNumber;
const int ServerControl::kSaveFilenameFieldNumber;
const int ServerControl::kOpenFilenameFieldNumber;
const int ServerControl::kNewWorldFieldNumber;
const int ServerControl::kStopFieldNumber;
const int ServerControl::kCloneFieldNumber;
const int ServerControl::kNewPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerControl::ServerControl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_gz_2fmsgs_2fserver_5fcontrol_2eproto::scc_info_ServerControl.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gz.msgs.ServerControl)
}
ServerControl::ServerControl(const ServerControl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  save_world_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.save_world_name().size() > 0) {
    save_world_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.save_world_name_);
  }
  save_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.save_filename().size() > 0) {
    save_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.save_filename_);
  }
  open_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.open_filename().size() > 0) {
    open_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.open_filename_);
  }
  if (from.has_header()) {
    header_ = new ::gz::msgs::Header(*from.header_);
  } else {
    header_ = NULL;
  }
  ::memcpy(&new_world_, &from.new_world_,
    static_cast<size_t>(reinterpret_cast<char*>(&new_port_) -
    reinterpret_cast<char*>(&new_world_)) + sizeof(new_port_));
  // @@protoc_insertion_point(copy_constructor:gz.msgs.ServerControl)
}

void ServerControl::SharedCtor() {
  save_world_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_port_) -
      reinterpret_cast<char*>(&header_)) + sizeof(new_port_));
}

ServerControl::~ServerControl() {
  // @@protoc_insertion_point(destructor:gz.msgs.ServerControl)
  SharedDtor();
}

void ServerControl::SharedDtor() {
  save_world_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void ServerControl::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerControl::descriptor() {
  ::protobuf_gz_2fmsgs_2fserver_5fcontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fserver_5fcontrol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerControl& ServerControl::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_gz_2fmsgs_2fserver_5fcontrol_2eproto::scc_info_ServerControl.base);
  return *internal_default_instance();
}


void ServerControl::Clear() {
// @@protoc_insertion_point(message_clear_start:gz.msgs.ServerControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  save_world_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  save_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  open_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  ::memset(&new_world_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&new_port_) -
      reinterpret_cast<char*>(&new_world_)) + sizeof(new_port_));
  _internal_metadata_.Clear();
}

bool ServerControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gz.msgs.ServerControl)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gz.msgs.Header header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string save_world_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_save_world_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->save_world_name().data(), static_cast<int>(this->save_world_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.ServerControl.save_world_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string save_filename = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_save_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->save_filename().data(), static_cast<int>(this->save_filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.ServerControl.save_filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string open_filename = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_open_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->open_filename().data(), static_cast<int>(this->open_filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gz.msgs.ServerControl.open_filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool new_world = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &new_world_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stop = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stop_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool clone = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clone_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 new_port = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gz.msgs.ServerControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gz.msgs.ServerControl)
  return false;
#undef DO_
}

void ServerControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gz.msgs.ServerControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // string save_world_name = 2;
  if (this->save_world_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->save_world_name().data(), static_cast<int>(this->save_world_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.ServerControl.save_world_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->save_world_name(), output);
  }

  // string save_filename = 3;
  if (this->save_filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->save_filename().data(), static_cast<int>(this->save_filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.ServerControl.save_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->save_filename(), output);
  }

  // string open_filename = 4;
  if (this->open_filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->open_filename().data(), static_cast<int>(this->open_filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.ServerControl.open_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->open_filename(), output);
  }

  // bool new_world = 5;
  if (this->new_world() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->new_world(), output);
  }

  // bool stop = 6;
  if (this->stop() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->stop(), output);
  }

  // bool clone = 7;
  if (this->clone() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->clone(), output);
  }

  // uint32 new_port = 8;
  if (this->new_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->new_port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gz.msgs.ServerControl)
}

::google::protobuf::uint8* ServerControl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gz.msgs.ServerControl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // string save_world_name = 2;
  if (this->save_world_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->save_world_name().data(), static_cast<int>(this->save_world_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.ServerControl.save_world_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->save_world_name(), target);
  }

  // string save_filename = 3;
  if (this->save_filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->save_filename().data(), static_cast<int>(this->save_filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.ServerControl.save_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->save_filename(), target);
  }

  // string open_filename = 4;
  if (this->open_filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->open_filename().data(), static_cast<int>(this->open_filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gz.msgs.ServerControl.open_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->open_filename(), target);
  }

  // bool new_world = 5;
  if (this->new_world() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->new_world(), target);
  }

  // bool stop = 6;
  if (this->stop() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->stop(), target);
  }

  // bool clone = 7;
  if (this->clone() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->clone(), target);
  }

  // uint32 new_port = 8;
  if (this->new_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->new_port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gz.msgs.ServerControl)
  return target;
}

size_t ServerControl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gz.msgs.ServerControl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string save_world_name = 2;
  if (this->save_world_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->save_world_name());
  }

  // string save_filename = 3;
  if (this->save_filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->save_filename());
  }

  // string open_filename = 4;
  if (this->open_filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->open_filename());
  }

  // .gz.msgs.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // bool new_world = 5;
  if (this->new_world() != 0) {
    total_size += 1 + 1;
  }

  // bool stop = 6;
  if (this->stop() != 0) {
    total_size += 1 + 1;
  }

  // bool clone = 7;
  if (this->clone() != 0) {
    total_size += 1 + 1;
  }

  // uint32 new_port = 8;
  if (this->new_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->new_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gz.msgs.ServerControl)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerControl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerControl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gz.msgs.ServerControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gz.msgs.ServerControl)
    MergeFrom(*source);
  }
}

void ServerControl::MergeFrom(const ServerControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gz.msgs.ServerControl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.save_world_name().size() > 0) {

    save_world_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.save_world_name_);
  }
  if (from.save_filename().size() > 0) {

    save_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.save_filename_);
  }
  if (from.open_filename().size() > 0) {

    open_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.open_filename_);
  }
  if (from.has_header()) {
    mutable_header()->::gz::msgs::Header::MergeFrom(from.header());
  }
  if (from.new_world() != 0) {
    set_new_world(from.new_world());
  }
  if (from.stop() != 0) {
    set_stop(from.stop());
  }
  if (from.clone() != 0) {
    set_clone(from.clone());
  }
  if (from.new_port() != 0) {
    set_new_port(from.new_port());
  }
}

void ServerControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gz.msgs.ServerControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerControl::CopyFrom(const ServerControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gz.msgs.ServerControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerControl::IsInitialized() const {
  return true;
}

void ServerControl::Swap(ServerControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerControl::InternalSwap(ServerControl* other) {
  using std::swap;
  save_world_name_.Swap(&other->save_world_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  save_filename_.Swap(&other->save_filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  open_filename_.Swap(&other->open_filename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(header_, other->header_);
  swap(new_world_, other->new_world_);
  swap(stop_, other->stop_);
  swap(clone_, other->clone_);
  swap(new_port_, other->new_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerControl::GetMetadata() const {
  protobuf_gz_2fmsgs_2fserver_5fcontrol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_gz_2fmsgs_2fserver_5fcontrol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msgs
}  // namespace gz
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gz::msgs::ServerControl* Arena::CreateMaybeMessage< ::gz::msgs::ServerControl >(Arena* arena) {
  return Arena::CreateInternal< ::gz::msgs::ServerControl >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
