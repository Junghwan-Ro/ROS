# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gz/msgs/particle_emitter.proto

require 'google/protobuf'

require 'gz/msgs/boolean_pb'
require 'gz/msgs/color_pb'
require 'gz/msgs/float_pb'
require 'gz/msgs/header_pb'
require 'gz/msgs/material_pb'
require 'gz/msgs/pose_pb'
require 'gz/msgs/stringmsg_pb'
require 'gz/msgs/vector3d_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "gz.msgs.ParticleEmitter" do
    optional :header, :message, 1, "gz.msgs.Header"
    optional :name, :string, 2
    optional :id, :uint32, 3
    optional :type, :enum, 4, "gz.msgs.ParticleEmitter.EmitterType"
    optional :pose, :message, 5, "gz.msgs.Pose"
    optional :size, :message, 6, "gz.msgs.Vector3d"
    optional :rate, :message, 7, "gz.msgs.Float"
    optional :duration, :message, 8, "gz.msgs.Float"
    optional :emitting, :message, 9, "gz.msgs.Boolean"
    optional :particle_size, :message, 10, "gz.msgs.Vector3d"
    optional :lifetime, :message, 11, "gz.msgs.Float"
    optional :material, :message, 12, "gz.msgs.Material"
    optional :min_velocity, :message, 13, "gz.msgs.Float"
    optional :max_velocity, :message, 14, "gz.msgs.Float"
    optional :color_start, :message, 15, "gz.msgs.Color"
    optional :color_end, :message, 16, "gz.msgs.Color"
    optional :scale_rate, :message, 17, "gz.msgs.Float"
    optional :color_range_image, :message, 18, "gz.msgs.StringMsg"
    optional :topic, :message, 19, "gz.msgs.StringMsg"
    optional :particle_scatter_ratio, :message, 20, "gz.msgs.Float"
  end
  add_enum "gz.msgs.ParticleEmitter.EmitterType" do
    value :POINT, 0
    value :BOX, 1
    value :CYLINDER, 2
    value :ELLIPSOID, 3
  end
end

module Gz
  module Msgs
    ParticleEmitter = Google::Protobuf::DescriptorPool.generated_pool.lookup("gz.msgs.ParticleEmitter").msgclass
    ParticleEmitter::EmitterType = Google::Protobuf::DescriptorPool.generated_pool.lookup("gz.msgs.ParticleEmitter.EmitterType").enummodule
  end
end
