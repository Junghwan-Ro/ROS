<?xml version='1.0' encoding='UTF-8'?>
<xsd:schema xmlns:xsd='http://www.w3.org/2001/XMLSchema'>
  <xsd:annotation>
    <xsd:documentation xml:lang='en'>
      <![CDATA[A position (x,y,z) and orientation (roll, pitch yaw) with respect
  to the frame named in the relative_to attribute.]]>
    </xsd:documentation>
  </xsd:annotation>
  <xsd:include schemaLocation='http://sdformat.org/schemas/types.xsd'/>
  <xsd:element name='pose'>
    <xsd:complexType>
      <xsd:attribute name='relative_to' type='xsd:string'  >
        <xsd:annotation>
          <xsd:documentation xml:lang='en'>
            <![CDATA[
      If specified, this pose is expressed in the named frame. The named frame
      must be declared within the same scope (world/model) as the element that
      has its pose specified by this tag.

      If missing, the pose is expressed in the frame of the parent XML element
      of the element that contains the pose. For exceptions to this rule and
      more details on the default behavior, see
      http://sdformat.org/tutorials?tut=pose_frame_semantics.

      Note that @relative_to merely affects an element's initial pose and
      does not affect the element's dynamic movement thereafter.

      New in v1.8: @relative_to may use frames of nested scopes. In this case,
      the frame is specified using `::` as delimiter to define the scope of the
      frame, e.g. `nested_model_A::nested_model_B::awesome_frame`.
    ]]>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:attribute>
    </xsd:complexType>
  </xsd:element>
</xsd:schema>
