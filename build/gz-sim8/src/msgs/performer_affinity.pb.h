// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: performer_affinity.proto

#ifndef PROTOBUF_INCLUDED_performer_5faffinity_2eproto
#define PROTOBUF_INCLUDED_performer_5faffinity_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "gz/msgs/entity.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_performer_5faffinity_2eproto 

namespace protobuf_performer_5faffinity_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_performer_5faffinity_2eproto
namespace gz {
namespace sim {
namespace private_msgs {
class PerformerAffinities;
class PerformerAffinitiesDefaultTypeInternal;
extern PerformerAffinitiesDefaultTypeInternal _PerformerAffinities_default_instance_;
class PerformerAffinity;
class PerformerAffinityDefaultTypeInternal;
extern PerformerAffinityDefaultTypeInternal _PerformerAffinity_default_instance_;
}  // namespace private_msgs
}  // namespace sim
}  // namespace gz
namespace google {
namespace protobuf {
template<> ::gz::sim::private_msgs::PerformerAffinities* Arena::CreateMaybeMessage<::gz::sim::private_msgs::PerformerAffinities>(Arena*);
template<> ::gz::sim::private_msgs::PerformerAffinity* Arena::CreateMaybeMessage<::gz::sim::private_msgs::PerformerAffinity>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace gz {
namespace sim {
namespace private_msgs {

// ===================================================================

class PerformerAffinity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gz.sim.private_msgs.PerformerAffinity) */ {
 public:
  PerformerAffinity();
  virtual ~PerformerAffinity();

  PerformerAffinity(const PerformerAffinity& from);

  inline PerformerAffinity& operator=(const PerformerAffinity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PerformerAffinity(PerformerAffinity&& from) noexcept
    : PerformerAffinity() {
    *this = ::std::move(from);
  }

  inline PerformerAffinity& operator=(PerformerAffinity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PerformerAffinity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PerformerAffinity* internal_default_instance() {
    return reinterpret_cast<const PerformerAffinity*>(
               &_PerformerAffinity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PerformerAffinity* other);
  friend void swap(PerformerAffinity& a, PerformerAffinity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PerformerAffinity* New() const final {
    return CreateMaybeMessage<PerformerAffinity>(NULL);
  }

  PerformerAffinity* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PerformerAffinity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PerformerAffinity& from);
  void MergeFrom(const PerformerAffinity& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PerformerAffinity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string secondary_prefix = 2;
  void clear_secondary_prefix();
  static const int kSecondaryPrefixFieldNumber = 2;
  const ::std::string& secondary_prefix() const;
  void set_secondary_prefix(const ::std::string& value);
  #if LANG_CXX11
  void set_secondary_prefix(::std::string&& value);
  #endif
  void set_secondary_prefix(const char* value);
  void set_secondary_prefix(const char* value, size_t size);
  ::std::string* mutable_secondary_prefix();
  ::std::string* release_secondary_prefix();
  void set_allocated_secondary_prefix(::std::string* secondary_prefix);

  // .gz.msgs.Entity entity = 1;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  private:
  const ::gz::msgs::Entity& _internal_entity() const;
  public:
  const ::gz::msgs::Entity& entity() const;
  ::gz::msgs::Entity* release_entity();
  ::gz::msgs::Entity* mutable_entity();
  void set_allocated_entity(::gz::msgs::Entity* entity);

  // @@protoc_insertion_point(class_scope:gz.sim.private_msgs.PerformerAffinity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr secondary_prefix_;
  ::gz::msgs::Entity* entity_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_performer_5faffinity_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PerformerAffinities : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gz.sim.private_msgs.PerformerAffinities) */ {
 public:
  PerformerAffinities();
  virtual ~PerformerAffinities();

  PerformerAffinities(const PerformerAffinities& from);

  inline PerformerAffinities& operator=(const PerformerAffinities& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PerformerAffinities(PerformerAffinities&& from) noexcept
    : PerformerAffinities() {
    *this = ::std::move(from);
  }

  inline PerformerAffinities& operator=(PerformerAffinities&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PerformerAffinities& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PerformerAffinities* internal_default_instance() {
    return reinterpret_cast<const PerformerAffinities*>(
               &_PerformerAffinities_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PerformerAffinities* other);
  friend void swap(PerformerAffinities& a, PerformerAffinities& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PerformerAffinities* New() const final {
    return CreateMaybeMessage<PerformerAffinities>(NULL);
  }

  PerformerAffinities* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PerformerAffinities>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PerformerAffinities& from);
  void MergeFrom(const PerformerAffinities& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PerformerAffinities* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gz.sim.private_msgs.PerformerAffinity affinity = 1;
  int affinity_size() const;
  void clear_affinity();
  static const int kAffinityFieldNumber = 1;
  ::gz::sim::private_msgs::PerformerAffinity* mutable_affinity(int index);
  ::google::protobuf::RepeatedPtrField< ::gz::sim::private_msgs::PerformerAffinity >*
      mutable_affinity();
  const ::gz::sim::private_msgs::PerformerAffinity& affinity(int index) const;
  ::gz::sim::private_msgs::PerformerAffinity* add_affinity();
  const ::google::protobuf::RepeatedPtrField< ::gz::sim::private_msgs::PerformerAffinity >&
      affinity() const;

  // @@protoc_insertion_point(class_scope:gz.sim.private_msgs.PerformerAffinities)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::gz::sim::private_msgs::PerformerAffinity > affinity_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_performer_5faffinity_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PerformerAffinity

// .gz.msgs.Entity entity = 1;
inline bool PerformerAffinity::has_entity() const {
  return this != internal_default_instance() && entity_ != NULL;
}
inline const ::gz::msgs::Entity& PerformerAffinity::_internal_entity() const {
  return *entity_;
}
inline const ::gz::msgs::Entity& PerformerAffinity::entity() const {
  const ::gz::msgs::Entity* p = entity_;
  // @@protoc_insertion_point(field_get:gz.sim.private_msgs.PerformerAffinity.entity)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::Entity*>(
      &::gz::msgs::_Entity_default_instance_);
}
inline ::gz::msgs::Entity* PerformerAffinity::release_entity() {
  // @@protoc_insertion_point(field_release:gz.sim.private_msgs.PerformerAffinity.entity)
  
  ::gz::msgs::Entity* temp = entity_;
  entity_ = NULL;
  return temp;
}
inline ::gz::msgs::Entity* PerformerAffinity::mutable_entity() {
  
  if (entity_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::Entity>(GetArenaNoVirtual());
    entity_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.sim.private_msgs.PerformerAffinity.entity)
  return entity_;
}
inline void PerformerAffinity::set_allocated_entity(::gz::msgs::Entity* entity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(entity_);
  }
  if (entity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      entity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, entity, submessage_arena);
    }
    
  } else {
    
  }
  entity_ = entity;
  // @@protoc_insertion_point(field_set_allocated:gz.sim.private_msgs.PerformerAffinity.entity)
}

// string secondary_prefix = 2;
inline void PerformerAffinity::clear_secondary_prefix() {
  secondary_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PerformerAffinity::secondary_prefix() const {
  // @@protoc_insertion_point(field_get:gz.sim.private_msgs.PerformerAffinity.secondary_prefix)
  return secondary_prefix_.GetNoArena();
}
inline void PerformerAffinity::set_secondary_prefix(const ::std::string& value) {
  
  secondary_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gz.sim.private_msgs.PerformerAffinity.secondary_prefix)
}
#if LANG_CXX11
inline void PerformerAffinity::set_secondary_prefix(::std::string&& value) {
  
  secondary_prefix_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gz.sim.private_msgs.PerformerAffinity.secondary_prefix)
}
#endif
inline void PerformerAffinity::set_secondary_prefix(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  secondary_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gz.sim.private_msgs.PerformerAffinity.secondary_prefix)
}
inline void PerformerAffinity::set_secondary_prefix(const char* value, size_t size) {
  
  secondary_prefix_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gz.sim.private_msgs.PerformerAffinity.secondary_prefix)
}
inline ::std::string* PerformerAffinity::mutable_secondary_prefix() {
  
  // @@protoc_insertion_point(field_mutable:gz.sim.private_msgs.PerformerAffinity.secondary_prefix)
  return secondary_prefix_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PerformerAffinity::release_secondary_prefix() {
  // @@protoc_insertion_point(field_release:gz.sim.private_msgs.PerformerAffinity.secondary_prefix)
  
  return secondary_prefix_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PerformerAffinity::set_allocated_secondary_prefix(::std::string* secondary_prefix) {
  if (secondary_prefix != NULL) {
    
  } else {
    
  }
  secondary_prefix_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), secondary_prefix);
  // @@protoc_insertion_point(field_set_allocated:gz.sim.private_msgs.PerformerAffinity.secondary_prefix)
}

// -------------------------------------------------------------------

// PerformerAffinities

// repeated .gz.sim.private_msgs.PerformerAffinity affinity = 1;
inline int PerformerAffinities::affinity_size() const {
  return affinity_.size();
}
inline void PerformerAffinities::clear_affinity() {
  affinity_.Clear();
}
inline ::gz::sim::private_msgs::PerformerAffinity* PerformerAffinities::mutable_affinity(int index) {
  // @@protoc_insertion_point(field_mutable:gz.sim.private_msgs.PerformerAffinities.affinity)
  return affinity_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::gz::sim::private_msgs::PerformerAffinity >*
PerformerAffinities::mutable_affinity() {
  // @@protoc_insertion_point(field_mutable_list:gz.sim.private_msgs.PerformerAffinities.affinity)
  return &affinity_;
}
inline const ::gz::sim::private_msgs::PerformerAffinity& PerformerAffinities::affinity(int index) const {
  // @@protoc_insertion_point(field_get:gz.sim.private_msgs.PerformerAffinities.affinity)
  return affinity_.Get(index);
}
inline ::gz::sim::private_msgs::PerformerAffinity* PerformerAffinities::add_affinity() {
  // @@protoc_insertion_point(field_add:gz.sim.private_msgs.PerformerAffinities.affinity)
  return affinity_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::gz::sim::private_msgs::PerformerAffinity >&
PerformerAffinities::affinity() const {
  // @@protoc_insertion_point(field_list:gz.sim.private_msgs.PerformerAffinities.affinity)
  return affinity_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace private_msgs
}  // namespace sim
}  // namespace gz

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_performer_5faffinity_2eproto
