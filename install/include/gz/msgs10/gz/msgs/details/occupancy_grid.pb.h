// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gz/msgs/occupancy_grid.proto

#ifndef PROTOBUF_INCLUDED_gz_2fmsgs_2foccupancy_5fgrid_2eproto
#define PROTOBUF_INCLUDED_gz_2fmsgs_2foccupancy_5fgrid_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "gz/msgs/header.pb.h"
#include "gz/msgs/pose.pb.h"
#include "gz/msgs/time.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto IGNITION_MSGS_VISIBLE

namespace protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto {
// Internal implementation detail -- do not use these members.
struct IGNITION_MSGS_VISIBLE TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void IGNITION_MSGS_VISIBLE AddDescriptors();
}  // namespace protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto
namespace gz {
namespace msgs {
class OccupancyGrid;
class OccupancyGridDefaultTypeInternal;
IGNITION_MSGS_VISIBLE extern OccupancyGridDefaultTypeInternal _OccupancyGrid_default_instance_;
class OccupancyGrid_MapMetaInfo;
class OccupancyGrid_MapMetaInfoDefaultTypeInternal;
IGNITION_MSGS_VISIBLE extern OccupancyGrid_MapMetaInfoDefaultTypeInternal _OccupancyGrid_MapMetaInfo_default_instance_;
}  // namespace msgs
}  // namespace gz
namespace google {
namespace protobuf {
template<> IGNITION_MSGS_VISIBLE ::gz::msgs::OccupancyGrid* Arena::CreateMaybeMessage<::gz::msgs::OccupancyGrid>(Arena*);
template<> IGNITION_MSGS_VISIBLE ::gz::msgs::OccupancyGrid_MapMetaInfo* Arena::CreateMaybeMessage<::gz::msgs::OccupancyGrid_MapMetaInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace gz {
namespace msgs {

// ===================================================================

class IGNITION_MSGS_VISIBLE OccupancyGrid_MapMetaInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gz.msgs.OccupancyGrid.MapMetaInfo) */ {
 public:
  OccupancyGrid_MapMetaInfo();
  virtual ~OccupancyGrid_MapMetaInfo();

  OccupancyGrid_MapMetaInfo(const OccupancyGrid_MapMetaInfo& from);

  inline OccupancyGrid_MapMetaInfo& operator=(const OccupancyGrid_MapMetaInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OccupancyGrid_MapMetaInfo(OccupancyGrid_MapMetaInfo&& from) noexcept
    : OccupancyGrid_MapMetaInfo() {
    *this = ::std::move(from);
  }

  inline OccupancyGrid_MapMetaInfo& operator=(OccupancyGrid_MapMetaInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OccupancyGrid_MapMetaInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OccupancyGrid_MapMetaInfo* internal_default_instance() {
    return reinterpret_cast<const OccupancyGrid_MapMetaInfo*>(
               &_OccupancyGrid_MapMetaInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(OccupancyGrid_MapMetaInfo* other);
  friend void swap(OccupancyGrid_MapMetaInfo& a, OccupancyGrid_MapMetaInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OccupancyGrid_MapMetaInfo* New() const final {
    return CreateMaybeMessage<OccupancyGrid_MapMetaInfo>(NULL);
  }

  OccupancyGrid_MapMetaInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OccupancyGrid_MapMetaInfo>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OccupancyGrid_MapMetaInfo& from);
  void MergeFrom(const OccupancyGrid_MapMetaInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OccupancyGrid_MapMetaInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .gz.msgs.Time map_load_time = 1;
  bool has_map_load_time() const;
  void clear_map_load_time();
  static const int kMapLoadTimeFieldNumber = 1;
  private:
  const ::gz::msgs::Time& _internal_map_load_time() const;
  public:
  const ::gz::msgs::Time& map_load_time() const;
  ::gz::msgs::Time* release_map_load_time();
  ::gz::msgs::Time* mutable_map_load_time();
  void set_allocated_map_load_time(::gz::msgs::Time* map_load_time);

  // .gz.msgs.Pose origin = 5;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 5;
  private:
  const ::gz::msgs::Pose& _internal_origin() const;
  public:
  const ::gz::msgs::Pose& origin() const;
  ::gz::msgs::Pose* release_origin();
  ::gz::msgs::Pose* mutable_origin();
  void set_allocated_origin(::gz::msgs::Pose* origin);

  // double resolution = 2;
  void clear_resolution();
  static const int kResolutionFieldNumber = 2;
  double resolution() const;
  void set_resolution(double value);

  // uint32 width = 3;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // uint32 height = 4;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gz.msgs.OccupancyGrid.MapMetaInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::gz::msgs::Time* map_load_time_;
  ::gz::msgs::Pose* origin_;
  double resolution_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IGNITION_MSGS_VISIBLE OccupancyGrid : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gz.msgs.OccupancyGrid) */ {
 public:
  OccupancyGrid();
  virtual ~OccupancyGrid();

  OccupancyGrid(const OccupancyGrid& from);

  inline OccupancyGrid& operator=(const OccupancyGrid& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OccupancyGrid(OccupancyGrid&& from) noexcept
    : OccupancyGrid() {
    *this = ::std::move(from);
  }

  inline OccupancyGrid& operator=(OccupancyGrid&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OccupancyGrid& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OccupancyGrid* internal_default_instance() {
    return reinterpret_cast<const OccupancyGrid*>(
               &_OccupancyGrid_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(OccupancyGrid* other);
  friend void swap(OccupancyGrid& a, OccupancyGrid& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OccupancyGrid* New() const final {
    return CreateMaybeMessage<OccupancyGrid>(NULL);
  }

  OccupancyGrid* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<OccupancyGrid>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const OccupancyGrid& from);
  void MergeFrom(const OccupancyGrid& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OccupancyGrid* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef OccupancyGrid_MapMetaInfo MapMetaInfo;

  // accessors -------------------------------------------------------

  // bytes data = 3;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // .gz.msgs.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::gz::msgs::Header& _internal_header() const;
  public:
  const ::gz::msgs::Header& header() const;
  ::gz::msgs::Header* release_header();
  ::gz::msgs::Header* mutable_header();
  void set_allocated_header(::gz::msgs::Header* header);

  // .gz.msgs.OccupancyGrid.MapMetaInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  private:
  const ::gz::msgs::OccupancyGrid_MapMetaInfo& _internal_info() const;
  public:
  const ::gz::msgs::OccupancyGrid_MapMetaInfo& info() const;
  ::gz::msgs::OccupancyGrid_MapMetaInfo* release_info();
  ::gz::msgs::OccupancyGrid_MapMetaInfo* mutable_info();
  void set_allocated_info(::gz::msgs::OccupancyGrid_MapMetaInfo* info);

  // @@protoc_insertion_point(class_scope:gz.msgs.OccupancyGrid)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::gz::msgs::Header* header_;
  ::gz::msgs::OccupancyGrid_MapMetaInfo* info_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_gz_2fmsgs_2foccupancy_5fgrid_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OccupancyGrid_MapMetaInfo

// .gz.msgs.Time map_load_time = 1;
inline bool OccupancyGrid_MapMetaInfo::has_map_load_time() const {
  return this != internal_default_instance() && map_load_time_ != NULL;
}
inline const ::gz::msgs::Time& OccupancyGrid_MapMetaInfo::_internal_map_load_time() const {
  return *map_load_time_;
}
inline const ::gz::msgs::Time& OccupancyGrid_MapMetaInfo::map_load_time() const {
  const ::gz::msgs::Time* p = map_load_time_;
  // @@protoc_insertion_point(field_get:gz.msgs.OccupancyGrid.MapMetaInfo.map_load_time)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::Time*>(
      &::gz::msgs::_Time_default_instance_);
}
inline ::gz::msgs::Time* OccupancyGrid_MapMetaInfo::release_map_load_time() {
  // @@protoc_insertion_point(field_release:gz.msgs.OccupancyGrid.MapMetaInfo.map_load_time)
  
  ::gz::msgs::Time* temp = map_load_time_;
  map_load_time_ = NULL;
  return temp;
}
inline ::gz::msgs::Time* OccupancyGrid_MapMetaInfo::mutable_map_load_time() {
  
  if (map_load_time_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::Time>(GetArenaNoVirtual());
    map_load_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.msgs.OccupancyGrid.MapMetaInfo.map_load_time)
  return map_load_time_;
}
inline void OccupancyGrid_MapMetaInfo::set_allocated_map_load_time(::gz::msgs::Time* map_load_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(map_load_time_);
  }
  if (map_load_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      map_load_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, map_load_time, submessage_arena);
    }
    
  } else {
    
  }
  map_load_time_ = map_load_time;
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.OccupancyGrid.MapMetaInfo.map_load_time)
}

// double resolution = 2;
inline void OccupancyGrid_MapMetaInfo::clear_resolution() {
  resolution_ = 0;
}
inline double OccupancyGrid_MapMetaInfo::resolution() const {
  // @@protoc_insertion_point(field_get:gz.msgs.OccupancyGrid.MapMetaInfo.resolution)
  return resolution_;
}
inline void OccupancyGrid_MapMetaInfo::set_resolution(double value) {
  
  resolution_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.OccupancyGrid.MapMetaInfo.resolution)
}

// uint32 width = 3;
inline void OccupancyGrid_MapMetaInfo::clear_width() {
  width_ = 0u;
}
inline ::google::protobuf::uint32 OccupancyGrid_MapMetaInfo::width() const {
  // @@protoc_insertion_point(field_get:gz.msgs.OccupancyGrid.MapMetaInfo.width)
  return width_;
}
inline void OccupancyGrid_MapMetaInfo::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.OccupancyGrid.MapMetaInfo.width)
}

// uint32 height = 4;
inline void OccupancyGrid_MapMetaInfo::clear_height() {
  height_ = 0u;
}
inline ::google::protobuf::uint32 OccupancyGrid_MapMetaInfo::height() const {
  // @@protoc_insertion_point(field_get:gz.msgs.OccupancyGrid.MapMetaInfo.height)
  return height_;
}
inline void OccupancyGrid_MapMetaInfo::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.OccupancyGrid.MapMetaInfo.height)
}

// .gz.msgs.Pose origin = 5;
inline bool OccupancyGrid_MapMetaInfo::has_origin() const {
  return this != internal_default_instance() && origin_ != NULL;
}
inline const ::gz::msgs::Pose& OccupancyGrid_MapMetaInfo::_internal_origin() const {
  return *origin_;
}
inline const ::gz::msgs::Pose& OccupancyGrid_MapMetaInfo::origin() const {
  const ::gz::msgs::Pose* p = origin_;
  // @@protoc_insertion_point(field_get:gz.msgs.OccupancyGrid.MapMetaInfo.origin)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::Pose*>(
      &::gz::msgs::_Pose_default_instance_);
}
inline ::gz::msgs::Pose* OccupancyGrid_MapMetaInfo::release_origin() {
  // @@protoc_insertion_point(field_release:gz.msgs.OccupancyGrid.MapMetaInfo.origin)
  
  ::gz::msgs::Pose* temp = origin_;
  origin_ = NULL;
  return temp;
}
inline ::gz::msgs::Pose* OccupancyGrid_MapMetaInfo::mutable_origin() {
  
  if (origin_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::Pose>(GetArenaNoVirtual());
    origin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.msgs.OccupancyGrid.MapMetaInfo.origin)
  return origin_;
}
inline void OccupancyGrid_MapMetaInfo::set_allocated_origin(::gz::msgs::Pose* origin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(origin_);
  }
  if (origin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      origin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, origin, submessage_arena);
    }
    
  } else {
    
  }
  origin_ = origin;
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.OccupancyGrid.MapMetaInfo.origin)
}

// -------------------------------------------------------------------

// OccupancyGrid

// .gz.msgs.Header header = 1;
inline bool OccupancyGrid::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::gz::msgs::Header& OccupancyGrid::_internal_header() const {
  return *header_;
}
inline const ::gz::msgs::Header& OccupancyGrid::header() const {
  const ::gz::msgs::Header* p = header_;
  // @@protoc_insertion_point(field_get:gz.msgs.OccupancyGrid.header)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::Header*>(
      &::gz::msgs::_Header_default_instance_);
}
inline ::gz::msgs::Header* OccupancyGrid::release_header() {
  // @@protoc_insertion_point(field_release:gz.msgs.OccupancyGrid.header)
  
  ::gz::msgs::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::gz::msgs::Header* OccupancyGrid::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.msgs.OccupancyGrid.header)
  return header_;
}
inline void OccupancyGrid::set_allocated_header(::gz::msgs::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.OccupancyGrid.header)
}

// .gz.msgs.OccupancyGrid.MapMetaInfo info = 2;
inline bool OccupancyGrid::has_info() const {
  return this != internal_default_instance() && info_ != NULL;
}
inline void OccupancyGrid::clear_info() {
  if (GetArenaNoVirtual() == NULL && info_ != NULL) {
    delete info_;
  }
  info_ = NULL;
}
inline const ::gz::msgs::OccupancyGrid_MapMetaInfo& OccupancyGrid::_internal_info() const {
  return *info_;
}
inline const ::gz::msgs::OccupancyGrid_MapMetaInfo& OccupancyGrid::info() const {
  const ::gz::msgs::OccupancyGrid_MapMetaInfo* p = info_;
  // @@protoc_insertion_point(field_get:gz.msgs.OccupancyGrid.info)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::OccupancyGrid_MapMetaInfo*>(
      &::gz::msgs::_OccupancyGrid_MapMetaInfo_default_instance_);
}
inline ::gz::msgs::OccupancyGrid_MapMetaInfo* OccupancyGrid::release_info() {
  // @@protoc_insertion_point(field_release:gz.msgs.OccupancyGrid.info)
  
  ::gz::msgs::OccupancyGrid_MapMetaInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline ::gz::msgs::OccupancyGrid_MapMetaInfo* OccupancyGrid::mutable_info() {
  
  if (info_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::OccupancyGrid_MapMetaInfo>(GetArenaNoVirtual());
    info_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.msgs.OccupancyGrid.info)
  return info_;
}
inline void OccupancyGrid::set_allocated_info(::gz::msgs::OccupancyGrid_MapMetaInfo* info) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete info_;
  }
  if (info) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      info = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, info, submessage_arena);
    }
    
  } else {
    
  }
  info_ = info;
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.OccupancyGrid.info)
}

// bytes data = 3;
inline void OccupancyGrid::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OccupancyGrid::data() const {
  // @@protoc_insertion_point(field_get:gz.msgs.OccupancyGrid.data)
  return data_.GetNoArena();
}
inline void OccupancyGrid::set_data(const ::std::string& value) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gz.msgs.OccupancyGrid.data)
}
#if LANG_CXX11
inline void OccupancyGrid::set_data(::std::string&& value) {
  
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gz.msgs.OccupancyGrid.data)
}
#endif
inline void OccupancyGrid::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gz.msgs.OccupancyGrid.data)
}
inline void OccupancyGrid::set_data(const void* value, size_t size) {
  
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gz.msgs.OccupancyGrid.data)
}
inline ::std::string* OccupancyGrid::mutable_data() {
  
  // @@protoc_insertion_point(field_mutable:gz.msgs.OccupancyGrid.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OccupancyGrid::release_data() {
  // @@protoc_insertion_point(field_release:gz.msgs.OccupancyGrid.data)
  
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OccupancyGrid::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    
  } else {
    
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.OccupancyGrid.data)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gz

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_gz_2fmsgs_2foccupancy_5fgrid_2eproto
