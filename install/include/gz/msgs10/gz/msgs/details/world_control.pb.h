// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gz/msgs/world_control.proto

#ifndef PROTOBUF_INCLUDED_gz_2fmsgs_2fworld_5fcontrol_2eproto
#define PROTOBUF_INCLUDED_gz_2fmsgs_2fworld_5fcontrol_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "gz/msgs/world_reset.pb.h"
#include "gz/msgs/header.pb.h"
#include "gz/msgs/time.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_gz_2fmsgs_2fworld_5fcontrol_2eproto IGNITION_MSGS_VISIBLE

namespace protobuf_gz_2fmsgs_2fworld_5fcontrol_2eproto {
// Internal implementation detail -- do not use these members.
struct IGNITION_MSGS_VISIBLE TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void IGNITION_MSGS_VISIBLE AddDescriptors();
}  // namespace protobuf_gz_2fmsgs_2fworld_5fcontrol_2eproto
namespace gz {
namespace msgs {
class WorldControl;
class WorldControlDefaultTypeInternal;
IGNITION_MSGS_VISIBLE extern WorldControlDefaultTypeInternal _WorldControl_default_instance_;
}  // namespace msgs
}  // namespace gz
namespace google {
namespace protobuf {
template<> IGNITION_MSGS_VISIBLE ::gz::msgs::WorldControl* Arena::CreateMaybeMessage<::gz::msgs::WorldControl>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace gz {
namespace msgs {

// ===================================================================

class IGNITION_MSGS_VISIBLE WorldControl : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gz.msgs.WorldControl) */ {
 public:
  WorldControl();
  virtual ~WorldControl();

  WorldControl(const WorldControl& from);

  inline WorldControl& operator=(const WorldControl& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WorldControl(WorldControl&& from) noexcept
    : WorldControl() {
    *this = ::std::move(from);
  }

  inline WorldControl& operator=(WorldControl&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WorldControl& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WorldControl* internal_default_instance() {
    return reinterpret_cast<const WorldControl*>(
               &_WorldControl_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(WorldControl* other);
  friend void swap(WorldControl& a, WorldControl& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WorldControl* New() const final {
    return CreateMaybeMessage<WorldControl>(NULL);
  }

  WorldControl* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<WorldControl>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const WorldControl& from);
  void MergeFrom(const WorldControl& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(WorldControl* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .gz.msgs.Header header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  private:
  const ::gz::msgs::Header& _internal_header() const;
  public:
  const ::gz::msgs::Header& header() const;
  ::gz::msgs::Header* release_header();
  ::gz::msgs::Header* mutable_header();
  void set_allocated_header(::gz::msgs::Header* header);

  // .gz.msgs.WorldReset reset = 5;
  bool has_reset() const;
  void clear_reset();
  static const int kResetFieldNumber = 5;
  private:
  const ::gz::msgs::WorldReset& _internal_reset() const;
  public:
  const ::gz::msgs::WorldReset& reset() const;
  ::gz::msgs::WorldReset* release_reset();
  ::gz::msgs::WorldReset* mutable_reset();
  void set_allocated_reset(::gz::msgs::WorldReset* reset);

  // .gz.msgs.Time run_to_sim_time = 7;
  bool has_run_to_sim_time() const;
  void clear_run_to_sim_time();
  static const int kRunToSimTimeFieldNumber = 7;
  private:
  const ::gz::msgs::Time& _internal_run_to_sim_time() const;
  public:
  const ::gz::msgs::Time& run_to_sim_time() const;
  ::gz::msgs::Time* release_run_to_sim_time();
  ::gz::msgs::Time* mutable_run_to_sim_time();
  void set_allocated_run_to_sim_time(::gz::msgs::Time* run_to_sim_time);

  // bool pause = 2;
  void clear_pause();
  static const int kPauseFieldNumber = 2;
  bool pause() const;
  void set_pause(bool value);

  // bool step = 3;
  void clear_step();
  static const int kStepFieldNumber = 3;
  bool step() const;
  void set_step(bool value);

  // uint32 multi_step = 4;
  void clear_multi_step();
  static const int kMultiStepFieldNumber = 4;
  ::google::protobuf::uint32 multi_step() const;
  void set_multi_step(::google::protobuf::uint32 value);

  // uint32 seed = 6;
  void clear_seed();
  static const int kSeedFieldNumber = 6;
  ::google::protobuf::uint32 seed() const;
  void set_seed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:gz.msgs.WorldControl)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::gz::msgs::Header* header_;
  ::gz::msgs::WorldReset* reset_;
  ::gz::msgs::Time* run_to_sim_time_;
  bool pause_;
  bool step_;
  ::google::protobuf::uint32 multi_step_;
  ::google::protobuf::uint32 seed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_gz_2fmsgs_2fworld_5fcontrol_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// WorldControl

// .gz.msgs.Header header = 1;
inline bool WorldControl::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline const ::gz::msgs::Header& WorldControl::_internal_header() const {
  return *header_;
}
inline const ::gz::msgs::Header& WorldControl::header() const {
  const ::gz::msgs::Header* p = header_;
  // @@protoc_insertion_point(field_get:gz.msgs.WorldControl.header)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::Header*>(
      &::gz::msgs::_Header_default_instance_);
}
inline ::gz::msgs::Header* WorldControl::release_header() {
  // @@protoc_insertion_point(field_release:gz.msgs.WorldControl.header)
  
  ::gz::msgs::Header* temp = header_;
  header_ = NULL;
  return temp;
}
inline ::gz::msgs::Header* WorldControl::mutable_header() {
  
  if (header_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::Header>(GetArenaNoVirtual());
    header_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.msgs.WorldControl.header)
  return header_;
}
inline void WorldControl::set_allocated_header(::gz::msgs::Header* header) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(header_);
  }
  if (header) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      header = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.WorldControl.header)
}

// bool pause = 2;
inline void WorldControl::clear_pause() {
  pause_ = false;
}
inline bool WorldControl::pause() const {
  // @@protoc_insertion_point(field_get:gz.msgs.WorldControl.pause)
  return pause_;
}
inline void WorldControl::set_pause(bool value) {
  
  pause_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.WorldControl.pause)
}

// bool step = 3;
inline void WorldControl::clear_step() {
  step_ = false;
}
inline bool WorldControl::step() const {
  // @@protoc_insertion_point(field_get:gz.msgs.WorldControl.step)
  return step_;
}
inline void WorldControl::set_step(bool value) {
  
  step_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.WorldControl.step)
}

// uint32 multi_step = 4;
inline void WorldControl::clear_multi_step() {
  multi_step_ = 0u;
}
inline ::google::protobuf::uint32 WorldControl::multi_step() const {
  // @@protoc_insertion_point(field_get:gz.msgs.WorldControl.multi_step)
  return multi_step_;
}
inline void WorldControl::set_multi_step(::google::protobuf::uint32 value) {
  
  multi_step_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.WorldControl.multi_step)
}

// .gz.msgs.WorldReset reset = 5;
inline bool WorldControl::has_reset() const {
  return this != internal_default_instance() && reset_ != NULL;
}
inline const ::gz::msgs::WorldReset& WorldControl::_internal_reset() const {
  return *reset_;
}
inline const ::gz::msgs::WorldReset& WorldControl::reset() const {
  const ::gz::msgs::WorldReset* p = reset_;
  // @@protoc_insertion_point(field_get:gz.msgs.WorldControl.reset)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::WorldReset*>(
      &::gz::msgs::_WorldReset_default_instance_);
}
inline ::gz::msgs::WorldReset* WorldControl::release_reset() {
  // @@protoc_insertion_point(field_release:gz.msgs.WorldControl.reset)
  
  ::gz::msgs::WorldReset* temp = reset_;
  reset_ = NULL;
  return temp;
}
inline ::gz::msgs::WorldReset* WorldControl::mutable_reset() {
  
  if (reset_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::WorldReset>(GetArenaNoVirtual());
    reset_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.msgs.WorldControl.reset)
  return reset_;
}
inline void WorldControl::set_allocated_reset(::gz::msgs::WorldReset* reset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(reset_);
  }
  if (reset) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reset, submessage_arena);
    }
    
  } else {
    
  }
  reset_ = reset;
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.WorldControl.reset)
}

// uint32 seed = 6;
inline void WorldControl::clear_seed() {
  seed_ = 0u;
}
inline ::google::protobuf::uint32 WorldControl::seed() const {
  // @@protoc_insertion_point(field_get:gz.msgs.WorldControl.seed)
  return seed_;
}
inline void WorldControl::set_seed(::google::protobuf::uint32 value) {
  
  seed_ = value;
  // @@protoc_insertion_point(field_set:gz.msgs.WorldControl.seed)
}

// .gz.msgs.Time run_to_sim_time = 7;
inline bool WorldControl::has_run_to_sim_time() const {
  return this != internal_default_instance() && run_to_sim_time_ != NULL;
}
inline const ::gz::msgs::Time& WorldControl::_internal_run_to_sim_time() const {
  return *run_to_sim_time_;
}
inline const ::gz::msgs::Time& WorldControl::run_to_sim_time() const {
  const ::gz::msgs::Time* p = run_to_sim_time_;
  // @@protoc_insertion_point(field_get:gz.msgs.WorldControl.run_to_sim_time)
  return p != NULL ? *p : *reinterpret_cast<const ::gz::msgs::Time*>(
      &::gz::msgs::_Time_default_instance_);
}
inline ::gz::msgs::Time* WorldControl::release_run_to_sim_time() {
  // @@protoc_insertion_point(field_release:gz.msgs.WorldControl.run_to_sim_time)
  
  ::gz::msgs::Time* temp = run_to_sim_time_;
  run_to_sim_time_ = NULL;
  return temp;
}
inline ::gz::msgs::Time* WorldControl::mutable_run_to_sim_time() {
  
  if (run_to_sim_time_ == NULL) {
    auto* p = CreateMaybeMessage<::gz::msgs::Time>(GetArenaNoVirtual());
    run_to_sim_time_ = p;
  }
  // @@protoc_insertion_point(field_mutable:gz.msgs.WorldControl.run_to_sim_time)
  return run_to_sim_time_;
}
inline void WorldControl::set_allocated_run_to_sim_time(::gz::msgs::Time* run_to_sim_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(run_to_sim_time_);
  }
  if (run_to_sim_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      run_to_sim_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, run_to_sim_time, submessage_arena);
    }
    
  } else {
    
  }
  run_to_sim_time_ = run_to_sim_time;
  // @@protoc_insertion_point(field_set_allocated:gz.msgs.WorldControl.run_to_sim_time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace gz

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_gz_2fmsgs_2fworld_5fcontrol_2eproto
