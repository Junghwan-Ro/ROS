# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gz/msgs/geometry.proto

require 'google/protobuf'

require 'gz/msgs/boxgeom_pb'
require 'gz/msgs/capsulegeom_pb'
require 'gz/msgs/conegeom_pb'
require 'gz/msgs/cylindergeom_pb'
require 'gz/msgs/ellipsoidgeom_pb'
require 'gz/msgs/header_pb'
require 'gz/msgs/heightmapgeom_pb'
require 'gz/msgs/imagegeom_pb'
require 'gz/msgs/meshgeom_pb'
require 'gz/msgs/planegeom_pb'
require 'gz/msgs/polylinegeom_pb'
require 'gz/msgs/spheregeom_pb'
require 'gz/msgs/vector3d_pb'
Google::Protobuf::DescriptorPool.generated_pool.build do
  add_message "gz.msgs.Geometry" do
    optional :header, :message, 1, "gz.msgs.Header"
    optional :type, :enum, 2, "gz.msgs.Geometry.Type"
    optional :box, :message, 3, "gz.msgs.BoxGeom"
    optional :cylinder, :message, 4, "gz.msgs.CylinderGeom"
    optional :plane, :message, 5, "gz.msgs.PlaneGeom"
    optional :sphere, :message, 6, "gz.msgs.SphereGeom"
    optional :image, :message, 7, "gz.msgs.ImageGeom"
    optional :heightmap, :message, 8, "gz.msgs.HeightmapGeom"
    optional :mesh, :message, 9, "gz.msgs.MeshGeom"
    optional :cone, :message, 10, "gz.msgs.ConeGeom"
    optional :capsule, :message, 13, "gz.msgs.CapsuleGeom"
    optional :ellipsoid, :message, 14, "gz.msgs.EllipsoidGeom"
    repeated :points, :message, 11, "gz.msgs.Vector3d"
    repeated :polyline, :message, 12, "gz.msgs.Polyline"
  end
  add_enum "gz.msgs.Geometry.Type" do
    value :BOX, 0
    value :CYLINDER, 1
    value :SPHERE, 2
    value :PLANE, 3
    value :IMAGE, 4
    value :HEIGHTMAP, 5
    value :MESH, 6
    value :TRIANGLE_FAN, 7
    value :LINE_STRIP, 8
    value :POLYLINE, 9
    value :CONE, 10
    value :EMPTY, 11
    value :ARROW, 12
    value :AXIS, 13
    value :CAPSULE, 14
    value :ELLIPSOID, 15
  end
end

module Gz
  module Msgs
    Geometry = Google::Protobuf::DescriptorPool.generated_pool.lookup("gz.msgs.Geometry").msgclass
    Geometry::Type = Google::Protobuf::DescriptorPool.generated_pool.lookup("gz.msgs.Geometry.Type").enummodule
  end
end
